(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1053819,      21681]
NotebookOptionsPosition[   1047045,      21560]
NotebookOutlinePosition[   1047515,      21578]
CellTagsIndexPosition[   1047472,      21575]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\</home/ebg/Documents/2_Latex/CAMDA\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.895055908530644*^9, 3.895055920801714*^9}, 
   3.8950559642877913`*^9, {3.909428168846218*^9, 3.9094281720412316`*^9}, {
   3.9094799430196047`*^9, 3.909479944686432*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ef8d7c0c-e17d-4cbe-9404-0e137e686c14"],

Cell[BoxData["\<\"/home/ebg/Documents/2_Latex/CAMDA\"\>"], "Output",
 CellChangeTimes->{3.909479945274325*^9, 3.909481263309595*^9, 
  3.909593289413698*^9, 3.909655057352688*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"e79b448e-8f8a-4dfd-8deb-f77569466213"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"SetDirectory", "[", "\"\<F:\\\\CAMDA\>\"", "]"}], "*)"}]], "Input",\

 CellChangeTimes->{
  3.909428215376517*^9, {3.909479938387479*^9, 3.909479940798411*^9}, {
   3.909593294937602*^9, 3.909593295529763*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"55ab8c92-536d-44aa-ba10-4829ce3f2b42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat00", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<CAMDA(v).dat\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nOTU", "=", 
  RowBox[{
   RowBox[{"Length", "[", "dat00", "]"}], "-", "1"}]}]}], "Input",
 CellChangeTimes->{{3.6527172833271027`*^9, 3.652717292779166*^9}, 
   3.652731652380665*^9, {3.654892473150094*^9, 3.6548924976660433`*^9}, {
   3.656431580704546*^9, 3.656431588192583*^9}, {3.657631872573925*^9, 
   3.6576318880661287`*^9}, {3.659366197664484*^9, 3.6593661978051414`*^9}, {
   3.660927300334984*^9, 3.660927300588992*^9}, {3.686328432033252*^9, 
   3.686328448611578*^9}, {3.717163895367484*^9, 3.717163928013256*^9}, {
   3.886852417924981*^9, 3.8868524342993307`*^9}, {3.88685750513479*^9, 
   3.886857510238229*^9}, {3.886861229575047*^9, 3.886861236421146*^9}, {
   3.886862050908229*^9, 3.886862051538643*^9}, {3.8872055522807837`*^9, 
   3.887205555584903*^9}, {3.887288944685817*^9, 3.887288947132513*^9}, {
   3.8938680718494043`*^9, 3.893868078010755*^9}, {3.893947215674856*^9, 
   3.893947216346718*^9}, {3.893947269933972*^9, 3.893947278985733*^9}, {
   3.893947845800207*^9, 3.893947851403371*^9}, 3.89394805480436*^9, 
   3.894367558934143*^9, 3.894802101999634*^9, {3.908642311484008*^9, 
   3.908642316448557*^9}, {3.9086431357884502`*^9, 3.908643250480362*^9}, {
   3.9086459122174873`*^9, 3.9086459138433037`*^9}, {3.908892817340321*^9, 
   3.9088928186008263`*^9}, {3.909068830912364*^9, 3.90906884756796*^9}, 
   3.9090717605754633`*^9, {3.909073508537643*^9, 3.90907353381295*^9}, {
   3.909594267699555*^9, 3.9095942722340593`*^9}, {3.909655070138916*^9, 
   3.90965507144211*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[3]:=",ExpressionUUID->"08fd9bd6-017d-4b78-9fbf-65ef9332faa9"],

Cell[BoxData["20448"], "Output",
 CellChangeTimes->{
  3.8938680812021923`*^9, 3.893869051072381*^9, 3.893933227481276*^9, 
   3.893942220701165*^9, 3.8939466273273497`*^9, 3.893947220246881*^9, 
   3.893947281786994*^9, 3.893947853759091*^9, 3.893948057789495*^9, 
   3.894120182762225*^9, 3.894121177682858*^9, 3.89412674023361*^9, 
   3.894129456275652*^9, {3.894367540178335*^9, 3.894367561233283*^9}, 
   3.8948016931449814`*^9, 3.894802110768095*^9, 3.8948027769614196`*^9, 
   3.89480501322112*^9, 3.89480978309576*^9, 3.894809972960515*^9, 
   3.894815915493869*^9, 3.894822740213278*^9, 3.8949704369069433`*^9, 
   3.8949715715447416`*^9, 3.894971703098917*^9, 3.89497312444026*^9, 
   3.8949753745029182`*^9, 3.8949775431579475`*^9, 3.8949884733246675`*^9, 
   3.8949892984392157`*^9, 3.895059486255745*^9, 3.895063706506686*^9, 
   3.9058616681621428`*^9, 3.905868997208913*^9, 3.905870981597728*^9, 
   3.905874082495132*^9, 3.9058753306260242`*^9, 3.9059602077627583`*^9, 
   3.9059631465260468`*^9, 3.906038566697742*^9, 3.906133275101117*^9, 
   3.906133931663748*^9, 3.906136166810417*^9, 3.9061389576679153`*^9, 
   3.906208725569409*^9, 3.906213641616145*^9, 3.906215535582432*^9, 
   3.9062242731252117`*^9, 3.908628425582921*^9, 3.908629967855928*^9, 
   3.90863299320149*^9, 3.90863398044184*^9, 3.908635176983717*^9, 
   3.908637682304529*^9, 3.908640964717696*^9, 3.908642135291527*^9, 
   3.9086422711408873`*^9, {3.9086431805545063`*^9, 3.908643221589904*^9}, 
   3.908643253410976*^9, 3.9086432984156437`*^9, 3.908643771255453*^9, 
   3.908643956226473*^9, 3.908645338513363*^9, 3.908645426398735*^9, 
   3.9086459182976437`*^9, 3.908646426591402*^9, 3.908646458319619*^9, 
   3.908650061489732*^9, 3.908653964251355*^9, 3.9087094753762903`*^9, 
   3.908725212982942*^9, {3.908892812548737*^9, 3.9088928217465477`*^9}, 
   3.908893405940547*^9, 3.9089860245195627`*^9, 3.908989992468398*^9, {
   3.909068832606329*^9, 3.909068852345503*^9}, 3.909069273904029*^9, 
   3.909069380202817*^9, 3.909069420604189*^9, 3.90907082761523*^9, 
   3.909071384807362*^9, 3.909071761861876*^9, 3.909071792727037*^9, 
   3.909073444699065*^9, 3.909073534732896*^9, 3.90907400349938*^9, 
   3.909077361388232*^9, 3.909154601521014*^9, 3.90942822077095*^9, 
   3.909479947858684*^9, 3.909481266360704*^9, 3.909593328772303*^9, 
   3.909594277270768*^9, 3.909655076124548*^9},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"Out[4]=",ExpressionUUID->"5b76fe93-333a-4a91-91d1-00b617794b10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"borrar", "=", 
   RowBox[{"Transpose", "[", "dat00", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nCTY", "=", 
  RowBox[{
   RowBox[{"Length", "[", "borrar", "]"}], "-", "1"}]}]}], "Input",
 CellChangeTimes->{{3.908893435679976*^9, 3.9088934596059437`*^9}, {
  3.90906887335236*^9, 3.909068874503429*^9}, {3.909073541103141*^9, 
  3.909073550324849*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"50dcaef8-e1a0-4d3c-8f67-3a0ced498966"],

Cell[BoxData["365"], "Output",
 CellChangeTimes->{
  3.9088934603487997`*^9, 3.908986026486709*^9, 3.908989992615837*^9, {
   3.909068858117276*^9, 3.9090688838512583`*^9}, 3.909069276328537*^9, 
   3.909069381209407*^9, 3.909069421577849*^9, 3.909070828727107*^9, 
   3.909071385723271*^9, 3.9090717967938957`*^9, 3.909073551077269*^9, 
   3.909074004479993*^9, 3.909077362292885*^9, 3.9091546027402267`*^9, 
   3.9094282221862373`*^9, 3.909479948704771*^9, 3.9094812672015*^9, 
   3.909593329652964*^9, 3.909594279345661*^9, 3.909655077661215*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"85d91c55-ad19-49d8-9db8-67b1e724a87a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"dat00", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"nCTY", "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "dat", "]"}]}], "Input",
 CellChangeTimes->{{3.9086450738593473`*^9, 3.9086451889745502`*^9}, {
  3.90864532334225*^9, 3.9086453626612177`*^9}, {3.9086454326525087`*^9, 
  3.908645477338532*^9}, {3.908646445232856*^9, 3.908646445447913*^9}, {
  3.9088934731620197`*^9, 3.908893473258831*^9}, {3.9090688793521423`*^9, 
  3.9090688809517508`*^9}, {3.909073568205853*^9, 3.9090735746693077`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"9c445371-238e-4c8c-8160-0e610dcb1cf6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"ID\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", \
"\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", \
"\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", \
"\<\"AKL\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", \
"\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", \
"\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", \
"\<\"BER\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", \
"\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", \
"\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", \
"\<\"BOG\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", \
"\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", \
"\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", \
"\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", \
"\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", \
"\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", \
"\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", \
"\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"MIN\"\>", "\<\"MIN\"\>", \
"\<\"MIN\"\>", "\<\"MIN\"\>", "\<\"MIN\"\>", "\<\"MIN\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"SAN\"\>", \
"\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", \
"\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", \
"\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", \
"\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", \
"\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", \
"\<\"VIE\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", \
"\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", \
"\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", \
"\<\"ZRH\"\>", "\<\"ZRH\"\>"},
    {"468", "1756", "785", "29", "5", "57", "7", "6", "2", "336", "3", "22", 
     "5", "5", "7", "2228", "373", "1072", "626", "1358", "3021", "113", 
     "121", "55", "62", "845", "58", "37", "397", "3878", "1872", "1271", 
     "2813", "1709", "2909", "1792", "2072", "4050", "5156", "1520", "1178", 
     "2776", "1810", "2339", "1687", "18", "7", "18", "10", "28", "73", "44", 
     "397", "6", "8", "142", "3", "277", "17", "18", "5", "13", "56", "20", 
     "275", "31", "6", "374", "268", "805", "104", "91", "77", "84", "88", 
     "106", "87", "120", "86", "76", "3778", "44", "4189", "22", "2315", 
     "1327", "30", "521", "61", "5841", "1593", "75", "173", "218", "2694", 
     "338", "148", "1985", "226", "379", "136", "776", "273", "135", "160", 
     "797", "124", "862", "44", "841", "9768", "1211", "11614", "487", 
     "18120", "1612", "911", "9698", "582", "511", "7199", "24039", "751", 
     "15001", "15015", "655", "2429", "131", "522", "1649", "595", "389", 
     "3526", "2318", "1668", "14", "10", "20", "92", "24", "73", "11", "37", 
     "43", "112", "14", "13", "13", "34", "11", "74", "197", "1586", "1411", 
     "911", "1524", "777", "625", "1138", "916", "654", "773", "2235", "1097",
      "196", "245", "1454", "581", "1374", "175", "58", "1903", "872", "1912",
      "2311", "39", "27", "152", "67", "176", "159", "215", "17", "18", "37", 
     "52", "76", "31", "25", "20", "5", "8", "49", "28", "18", "9", "39", "8",
      "5", "8", "36", "69", "5", "28", "2", "14", "39", "44", "15", "285", 
     "63", "993", "119", "1216", "84", "88", "2952", "58", "104", "72", "54", 
     "950", "77", "260", "179", "39", "1939", "43", "346", "407", "61", "45", 
     "57", "286", "144", "64", "281", "172", "605", "388", "335", "422", "18",
      "9", "56", "9", "13", "22", "33", "87", "48", "65", "463", "58", "42", 
     "697", "36", "57", "140", "53", "1029", "720", "77", "53", "49", "114", 
     "86", "89", "33", "19", "9", "36", "32", "31", "16", "26", "3", "2", "6",
      "17", "16", "56", "50", "134", "10", "55", "12", "193", "9", "22", "3", 
     "13", "36", "26", "11", "80", "26", "5", "1396", "1", "45", "45", "30", 
     "2", "13", "47", "14", "3", "75", "45", "201", "512", "65", "210", "14", 
     "0", "9", "1", "21", "364", "125", "145", "130", "116", "64", "16", 
     "142", "100", "376", "44", "1", "20", "4", "40", "122", "45", "28", "54",
      "86", "29", "210", "162", "102", "64", "64", "438", "141", "168", 
     "1134", "69", "141", "152", "17", "1101", "20", "530", "299", "112", 
     "10", "161", "182", "235", "152", "87", "511", "149"},
    {"469", "379030", "10803", "3202", "487", "1720", "354", "591", "482", 
     "12710", "643", "432", "457", "434", "530", "85706", "15092", "47368", 
     "33698", "69970", "89993", "3263", "8530", "2398", "3276", "194866", 
     "2951", "2108", "18347", "150544", "87879", "60755", "85066", "123429", 
     "49768", "96884", "80078", "235789", "326507", "49734", "77456", 
     "166756", "192948", "185335", "94943", "1887", "1191", "2235", "1422", 
     "2241", "10155", "6572", "64065", "1102", "1397", "28921", "2130", 
     "51995", "1914", "3226", "817", "1522", "10269", "2381", "1632", "5185", 
     "1486", "2397", "5798", "2547", "4461", "4222", "1803", "2877", "4178", 
     "4073", "4745", "4541", "3468", "4981", "396394", "6616", "638240", 
     "1368", "4211", "132908", "1775", "33341", "3402", "1190934", "4652", 
     "14592", "2721", "111045", "546254", "72888", "640", "630987", "32994", 
     "1197", "41016", "157894", "88906", "46475", "30863", "285666", "700", 
     "1100", "712", "47820", "1166640", "28834", "1208360", "17468", 
     "2804675", "68573", "35204", "2287334", "19062", "52919", "1158290", 
     "4607408", "31973", "2029504", "2540912", "29434", "269538", "5936", 
     "47853", "205583", "31243", "13249", "439616", "145589", "135539", "574",
      "633", "828", "6354", "1857", "7345", "724", "2048", "2893", "6457", 
     "500", "799", "959", "3470", "801", "10768", "6828", "28179", "40300", 
     "67265", "33209", "59105", "33346", "25097", "75476", "14905", "13940", 
     "35166", "37388", "4726", "9234", "76381", "16344", "74783", "7489", 
     "13032", "25472", "26904", "35832", "38293", "1477", "1027", "5061", 
     "2744", "5332", "9340", "16060", "808", "1229", "1386", "1694", "2960", 
     "1206", "740", "2114", "315", "519", "2345", "932", "401", "524", "1617",
      "355", "292", "626", "4743", "1854", "422", "1345", "161", "446", 
     "3748", "1558", "387", "569", "1795", "13310", "3950", "74605", "7173", 
     "2667", "8122", "1788", "2601", "1970", "2135", "28141", "3790", "6317", 
     "4661", "2475", "142173", "2356", "20198", "15486", "4110", "2904", 
     "2214", "13104", "11270", "2692", "5901", "6100", "19289", "4915", 
     "6867", "8940", "349", "267", "2141", "301", "339", "521", "3782", 
     "3380", "1334", "1802", "9499", "2052", "1116", "8220", "1120", "1101", 
     "2468", "2000", "6146", "79371", "2597", "696", "1838", "3530", "1934", 
     "1340", "729", "555", "271", "1111", "2738", "2046", "578", "950", "135",
      "148", "354", "864", "365", "1644", "3241", "1146", "477", "2591", 
     "1077", "17814", "687", "968", "448", "545", "2983", "1631", "661", 
     "8413", "3063", "300", "35295", "108", "2953", "2701", "3425", "260", 
     "274", "3074", "904", "378", "5730", "1022", "3334", "14359", "382", 
     "2284", "481", "135", "679", "34", "490", "15327", "10414", "9582", 
     "1785", "1057", "1201", "807", "1731", "1460", "12437", "507", "101", 
     "736", "110", "1331", "5681", "1772", "1937", "2560", "2665", "1178", 
     "8099", "16223", "5404", "2595", "3106", "6234", "9658", "5225", "53454",
      "3073", "11688", "4733", "811", "80216", "1197", "14946", "6523", 
     "9212", "1313", "7540", "12125", "4459", "9864", "5467", "23752", "9958"},
    {"28090", "510775", "845", "627", "372", "2166", "284", "519", "363", 
     "2338", "472", "294", "370", "328", "431", "22978", "4571", "18840", 
     "12277", "25360", "15763", "2028", "1838", "708", "1216", "3726", "781", 
     "615", "5936", "36427", "51690", "20415", "73919", "67080", "13684", 
     "15410", "16378", "299655", "327485", "32661", "19551", "73285", "13080",
      "21861", "17517", "979", "411", "1419", "482", "1009", "6866", "4548", 
     "30644", "594", "702", "21878", "692", "37142", "1092", "643", "360", 
     "889", "6117", "976", "646", "2932", "661", "882", "1729", "984", "1744",
      "1456", "607", "962", "1951", "1230", "2328", "1461", "1356", "2261", 
     "28551", "444", "37029", "168", "520", "11299", "216", "2170", "215", 
     "58435", "985", "774", "221", "1794", "42278", "70596", "211", "1121", 
     "5033", "278", "70340", "142978", "11277", "2084", "29281", "654524", 
     "236", "202", "222", "10556", "454148", "9571", "1705339", "9407", 
     "637232", "27531", "15585", "3372470", "7125", "40047", "1665217", 
     "3134871", "11368", "2574553", "3330223", "7805", "348176", "1558", 
     "15918", "265558", "7190", "4902", "25377", "80962", "155146", "331", 
     "442", "396", "5858", "765", "5349", "344", "2130", "1832", "8638", 
     "314", "475", "543", "3287", "703", "4488", "1171", "5902", "28643", 
     "7983", "6290", "44278", "9461", "5853", "51031", "2709", "2201", "8072",
      "32572", "453", "1484", "8796", "2212", "6631", "1043", "2011", "3862", 
     "4034", "6907", "7625", "302", "126", "563", "488", "618", "1447", 
     "1014", "134", "135", "229", "264", "796", "183", "99", "743", "48", 
     "93", "484", "211", "57", "45", "313", "46", "63", "121", "212", "144", 
     "30", "240", "30", "102", "166", "117", "41", "60", "276", "926", "327", 
     "593", "587", "306", "783", "337", "206", "439", "372", "1100", "345", 
     "329", "212", "96", "3833", "186", "969", "536", "274", "270", "380", 
     "532", "655", "348", "434", "326", "801", "342", "374", "548", "72", 
     "69", "745", "52", "93", "106", "448", "2269", "467", "872", "4276", 
     "379", "310", "1376", "369", "676", "1020", "582", "3068", "4205", "507",
      "159", "255", "2214", "909", "508", "248", "169", "28", "368", "121", 
     "607", "242", "355", "13", "40", "86", "428", "135", "789", "2737", 
     "412", "32", "399", "133", "550", "57", "82", "27", "32", "423", "204", 
     "48", "1013", "426", "52", "1167", "26", "273", "648", "511", "16", "20",
      "303", "94", "33", "1025", "268", "165", "4904", "55", "882", "121", 
     "3", "65", "13", "125", "6688", "864", "6510", "121", "79", "259", "318",
      "310", "625", "9791", "136", "2", "143", "10", "149", "1497", "127", 
     "210", "769", "713", "384", "2700", "747", "1650", "530", "404", "1098", 
     "3866", "891", "16109", "646", "4798", "127", "66", "739", "48", "349", 
     "309", "2704", "193", "2948", "3200", "1667", "3787", "1791", "7039", 
     "3649"},
    {"2708348", "49367", "123", "47", "48", "104", "25", "41", "28", "347", 
     "36", "19", "27", "38", "35", "813", "185", "682", "445", "976", "617", 
     "136", "80", "24", "42", "142", "38", "33", "199", "1080", "4256", 
     "1125", "6685", "5063", "1138", "1245", "1061", "26100", "26832", "3100",
      "1210", "4207", "602", "858", "929", "82", "27", "122", "33", "82", 
     "171", "139", "601", "64", "79", "542", "58", "973", "102", "47", "26", 
     "75", "221", "76", "54", "109", "57", "55", "125", "76", "138", "104", 
     "39", "74", "166", "83", "153", "91", "103", "138", "2767", "43", "3965",
      "8", "15", "619", "19", "190", "29", "5189", "17", "66", "12", "102", 
     "3387", "3234", "14", "46", "386", "17", "6024", "6263", "440", "61", 
     "3090", "53542", "19", "10", "12", "868", "41429", "828", "141635", 
     "864", "56906", "2772", "1317", "335750", "638", "3361", "148313", 
     "564767", "1016", "234848", "318231", "731", "30380", "159", "1674", 
     "27365", "658", "474", "1829", "7755", "11538", "22", "39", "31", "459", 
     "72", "404", "28", "165", "148", "779", "25", "47", "52", "230", "53", 
     "390", "83", "373", "2127", "434", "329", "2399", "490", "284", "2991", 
     "140", "158", "334", "2337", "35", "94", "740", "116", "543", "69", 
     "192", "182", "332", "405", "403", "23", "18", "19", "16", "49", "59", 
     "58", "11", "13", "11", "14", "52", "19", "3", "20", "2", "6", "22", 
     "14", "5", "4", "6", "6", "2", "12", "9", "6", "2", "9", "3", "13", "4", 
     "8", "1", "8", "22", "53", "14", "18", "33", "15", "27", "29", "22", 
     "28", "26", "85", "16", "19", "14", "5", "398", "16", "38", "45", "25", 
     "31", "27", "31", "50", "31", "39", "30", "64", "22", "30", "29", "2", 
     "8", "51", "9", "11", "9", "35", "247", "54", "75", "376", "27", "37", 
     "78", "21", "57", "110", "45", "319", "239", "41", "9", "23", "295", 
     "85", "64", "31", "16", "0", "26", "10", "49", "15", "37", "2", "2", "7",
      "46", "12", "72", "241", "30", "8", "13", "6", "10", "2", "1", "0", "1",
      "16", "6", "2", "52", "32", "1", "21", "1", "10", "30", "35", "2", "1", 
     "20", "1", "4", "52", "11", "4", "310", "2", "24", "7", "0", "2", "4", 
     "1", "462", "35", "249", "6", "5", "15", "14", "23", "47", "392", "12", 
     "0", "5", "1", "16", "49", "9", "7", "47", "44", "9", "87", "24", "59", 
     "19", "22", "39", "212", "36", "609", "29", "260", "5", "2", "34", "3", 
     "13", "14", "99", "9", "117", "99", "121", "174", "95", "276", "132"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9086451801829443`*^9, 3.9086451894148493`*^9}, {
   3.908645316179039*^9, 3.90864536319902*^9}, {3.9086454361223583`*^9, 
   3.908645477866001*^9}, 3.908645924931634*^9, {3.908646438983241*^9, 
   3.908646459356765*^9}, 3.9086500628930473`*^9, 3.908653964853262*^9, 
   3.908709476807722*^9, 3.908725213954108*^9, 3.908892845337552*^9, 
   3.908893407946513*^9, 3.908893474684676*^9, 3.908986027548518*^9, 
   3.908989992715844*^9, 3.9090688848156347`*^9, 3.909069277279224*^9, 
   3.909069382709938*^9, 3.909069422334268*^9, 3.9090708315278*^9, 
   3.909071386469109*^9, 3.909071804869845*^9, 3.9090735756967783`*^9, 
   3.909074005359351*^9, 3.9090773631970463`*^9, 3.909154603609251*^9, 
   3.9094282232566442`*^9, 3.909479949501751*^9, 3.90948126804115*^9, 
   3.9095933304340982`*^9, 3.909594280553854*^9, 3.9096550788406277`*^9},
 CellLabel->
  "Out[8]//TableForm=",ExpressionUUID->"20c270b5-5cb6-4cd4-a3e5-7fcdb9b451d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Drop", "[", 
   RowBox[{
    RowBox[{"dat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908893092441716*^9, 3.908893106805811*^9}, {
  3.90889331847128*^9, 3.908893322915854*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"66425a67-1ee4-4df7-b899-951025234994"],

Cell[BoxData["365"], "Output",
 CellChangeTimes->{{3.908893096795019*^9, 3.908893107238719*^9}, 
   3.908893323437045*^9, 3.9088934792616587`*^9, 3.9089860284293423`*^9, 
   3.908989992735195*^9, 3.909068894337537*^9, 3.909069279387188*^9, 
   3.909069386487863*^9, 3.909069423107593*^9, 3.909070832648202*^9, 
   3.909071387235149*^9, 3.90907181241031*^9, 3.909073580956362*^9, 
   3.90907400656316*^9, 3.909077364099074*^9, 3.909154604531727*^9, 
   3.9094282250464334`*^9, 3.9094799504377203`*^9, 3.909481268854507*^9, 
   3.909593331244869*^9, 3.909594312655032*^9, 3.90965508098253*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"9399909d-5cf9-4918-98e0-dfd604b6fe3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LAB", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"dat", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aux", "=", 
  RowBox[{"Tally", "[", "LAB", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8941294653060102`*^9, 3.894129492406818*^9}, {
   3.894817497408789*^9, 3.894817499502797*^9}, 3.908643355900638*^9, {
   3.90864359002199*^9, 3.9086436069087353`*^9}, {3.908645295327044*^9, 
   3.908645295740901*^9}, {3.908645938621961*^9, 3.908645943580654*^9}, {
   3.9088931134059258`*^9, 3.90889312393367*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[10]:=",ExpressionUUID->"7b23ef7a-85cb-4859-ac1b-42094a80eb94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"AKL\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BER\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BOG\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DEN\"\>", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DOH\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ILR\"\>", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LIS\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NYC\"\>", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAC\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TOK\"\>", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BAL\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MIN\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAN\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAO\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VIE\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZRH\"\>", ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.894129479924568*^9, 3.8941294935505323`*^9}, 
   3.8941297422895107`*^9, 3.894367563516974*^9, 3.894370414055108*^9, 
   3.8948016990221157`*^9, 3.894802779055049*^9, 3.8948050368288517`*^9, 
   3.8948097844733667`*^9, 3.894809976056006*^9, 3.894815919003872*^9, 
   3.894817501668404*^9, 3.8948227415256853`*^9, 3.8949704395422044`*^9, 
   3.8949715718259716`*^9, 3.894971714031168*^9, 3.89497312615889*^9, 
   3.8949753768777514`*^9, 3.894977544767212*^9, 3.8949884748450093`*^9, 
   3.8949892998594666`*^9, 3.895059487740103*^9, 3.895063707543589*^9, 
   3.9058616698688917`*^9, 3.905868998295273*^9, 3.9058710017924337`*^9, 
   3.905874082550158*^9, 3.905875330666833*^9, 3.9059602078029327`*^9, 
   3.9059631465618877`*^9, 3.906038566737763*^9, 3.906133276153377*^9, 
   3.906133933281708*^9, 3.906136168177724*^9, 3.9061389577086487`*^9, 
   3.906208725611919*^9, 3.906213641656592*^9, 3.9062155356231813`*^9, 
   3.906224274092312*^9, 3.908628426596469*^9, 3.908629969070986*^9, 
   3.908634042332343*^9, 3.908634333475219*^9, 3.908635181169973*^9, 
   3.908637850032877*^9, 3.908640965768394*^9, 3.908642136267188*^9, 
   3.9086433572191153`*^9, 3.908643486059019*^9, 3.908643607934498*^9, 
   3.908643779220229*^9, 3.908643973021226*^9, {3.90864530016148*^9, 
   3.908645350213071*^9}, {3.908645454671278*^9, 3.908645472917775*^9}, 
   3.908645944155527*^9, 3.908646460637417*^9, 3.908647120181035*^9, 
   3.9086500637609653`*^9, 3.90865396497801*^9, 3.90870948095221*^9, 
   3.908725214708213*^9, 3.908893136201871*^9, 3.908893491481023*^9, 
   3.908986030013464*^9, 3.908989992750682*^9, 3.90906889781982*^9, 
   3.9090692819167147`*^9, {3.909069389271577*^9, 3.909069423821679*^9}, 
   3.909070833439212*^9, 3.909071387948855*^9, 3.909071814113599*^9, 
   3.909073588436645*^9, 3.9090740073810053`*^9, 3.90907736516998*^9, 
   3.909154605292964*^9, 3.909428226036415*^9, 3.909479951618688*^9, 
   3.909481269719578*^9, 3.9095933319971027`*^9, 3.9095943241704683`*^9, 
   3.909655082582251*^9},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"Out[11]=",ExpressionUUID->"e9b3d6e8-f21e-4242-9dee-b800a9d40de4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nC", "=", 
  RowBox[{"Length", "[", "aux", "]"}]}]], "Input",
 CellChangeTimes->{{3.909073619824552*^9, 3.909073641891952*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"0ce0b1b8-c7df-41ed-8ebb-82466205b914"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.909073644291965*^9, 3.909074008255066*^9, 
  3.9090773660906267`*^9, 3.909154606196797*^9, 3.9094282290815396`*^9, 
  3.909479952967551*^9, 3.9094812705833187`*^9, 3.909593332764433*^9, 
  3.909594340839219*^9, 3.909655083812133*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"960fdbaf-32b1-42be-ac69-60996dcc7804"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{".0", ",", ".7", ",", ".3"}], "]"}]], "Input",
 CellChangeTimes->{{3.90965553558079*^9, 3.909655542700575*^9}, {
  3.909655576629662*^9, 3.909655593011731*^9}, {3.909656852850369*^9, 
  3.909656866231922*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"8c7ee518-e048-48cd-b713-d94aff08e93e"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0., 0.7, 0.3], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0., 0.4666666666666667, 0.2],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 
        1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification])}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"0.`", ",", "0.7`", ",", "0.3`"}], "]"}], NumberMarks -> 
     False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0.7, 0.3]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0., 0.7, 0.3],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.909655537078648*^9, 3.9096555431480618`*^9}, {
  3.909655577185042*^9, 3.909655593422451*^9}, {3.909656859617508*^9, 
  3.909656866691708*^9}},
 CellLabel->
  "Out[150]=",ExpressionUUID->"6f8d586d-a61d-4b40-b67b-48ffcd9f115b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"II", "=", "nCTY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JJ", "=", "3000"}], ";", 
  RowBox[{"COL", "=", 
   RowBox[{"{", 
    RowBox[{
    "Red", ",", "Blue", ",", "Green", ",", "Brown", ",", "Black", ",", "Pink",
      ",", "Gray", ",", "Magenta", ",", "Cyan", ",", "Orange", ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{".7", ",", ".3", ",", ".7"}], "]"}], ",", "Purple", ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", ".5", ",", "1"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{".5", ",", ".1", ",", ".1"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{".9", ",", ".8", ",", ".1"}], "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{".0", ",", ".7", ",", ".3"}], "]"}]}], "}"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8943706362511263`*^9, 3.894370667894084*^9}, {
   3.894801827116887*^9, 3.894801828460537*^9}, {3.8948018687017326`*^9, 
   3.8948018692641892`*^9}, {3.8948032755377045`*^9, 3.894803277584434*^9}, {
   3.8948055582296495`*^9, 3.8948055654478316`*^9}, {3.894805785018027*^9, 
   3.894805822437315*^9}, {3.8948074664658155`*^9, 3.894807466590807*^9}, {
   3.8948075203621993`*^9, 3.894807520471551*^9}, {3.894807603942154*^9, 
   3.8948076049264584`*^9}, {3.894807684198481*^9, 3.8948076844640517`*^9}, {
   3.8948080771129503`*^9, 3.894808083643796*^9}, 3.8948081512582417`*^9, {
   3.894808189436656*^9, 3.894808189592928*^9}, {3.8948087767013264`*^9, 
   3.8948087830602536`*^9}, {3.8948088186449327`*^9, 
   3.8948088193011346`*^9}, {3.89480884945854*^9, 3.8948088499585648`*^9}, {
   3.894808880488456*^9, 3.894808904535088*^9}, {3.894808948934066*^9, 
   3.894808952670001*^9}, {3.8948089862702746`*^9, 3.894808991020012*^9}, {
   3.8948090227153187`*^9, 3.8948090227933874`*^9}, {3.894809061615671*^9, 
   3.8948090616937895`*^9}, {3.8948091207245626`*^9, 3.894809121104696*^9}, {
   3.894809196026246*^9, 3.894809206124655*^9}, {3.8948092423696365`*^9, 
   3.894809242416513*^9}, {3.894809359314746*^9, 3.894809359929757*^9}, 
   3.8948095514120064`*^9, 3.894809592022604*^9, {3.894809677528784*^9, 
   3.8948096782474737`*^9}, {3.8948097095693464`*^9, 3.894809709897521*^9}, {
   3.8948100617266083`*^9, 3.894810090166418*^9}, {3.894810247577938*^9, 
   3.8948102690677557`*^9}, {3.894815864753319*^9, 3.894815890189739*^9}, {
   3.8948160104399476`*^9, 3.8948160131546516`*^9}, {3.8948161642058897`*^9, 
   3.894816166678239*^9}, {3.894817147546957*^9, 3.894817174416996*^9}, {
   3.8948172312370863`*^9, 3.894817231307565*^9}, {3.8948172652621665`*^9, 
   3.8948172935874014`*^9}, {3.8948173888672943`*^9, 
   3.8948173902177677`*^9}, {3.8948180292239623`*^9, 
   3.8948180332641015`*^9}, {3.894818146659932*^9, 3.8948181469849973`*^9}, {
   3.8948182045752735`*^9, 3.8948182051252017`*^9}, {3.8948186877351627`*^9, 
   3.894818694113308*^9}, {3.894819060363267*^9, 3.894819060603157*^9}, {
   3.8948190939237385`*^9, 3.894819105433728*^9}, {3.8948192591399016`*^9, 
   3.8948192592850747`*^9}, {3.894819332785037*^9, 3.8948193373356357`*^9}, 
   3.8948194105945845`*^9, {3.8948194928366137`*^9, 3.8948194974969273`*^9}, 
   3.8948196959775686`*^9, {3.8948197519677553`*^9, 3.894819752517677*^9}, {
   3.8948198070881214`*^9, 3.894819813028471*^9}, {3.894822752571861*^9, 
   3.894822769613944*^9}, {3.894822832295257*^9, 3.8948228357950144`*^9}, {
   3.894822872065631*^9, 3.8948228723155766`*^9}, 3.894822940969141*^9, {
   3.8948248575553384`*^9, 3.8948248581959176`*^9}, {3.894825093255149*^9, 
   3.894825094942584*^9}, {3.894825465406954*^9, 3.8948254724533215`*^9}, {
   3.8948257061691732`*^9, 3.894825717184001*^9}, {3.8948257551969805`*^9, 
   3.8948257557906537`*^9}, {3.8948258083297405`*^9, 3.894825808470388*^9}, {
   3.894825855060867*^9, 3.8948258551076994`*^9}, {3.894975392635106*^9, 
   3.8949753927913885`*^9}, {3.894976133769287*^9, 3.894976140065733*^9}, {
   3.8949775652421675`*^9, 3.894977565679573*^9}, {3.894980445059249*^9, 
   3.8949804453593597`*^9}, 3.894988489238701*^9, 3.89498859795804*^9, 
   3.894989309015525*^9, {3.8949896619945726`*^9, 3.894989662157364*^9}, {
   3.894989812696677*^9, 3.894989813082387*^9}, 3.8949899376801443`*^9, {
   3.8949902738628054`*^9, 3.894990275004385*^9}, {3.8949905800474615`*^9, 
   3.894990580765749*^9}, {3.895059496559561*^9, 3.895059501791045*^9}, {
   3.895059734726017*^9, 3.895059736148788*^9}, {3.895059845285911*^9, 
   3.8950598468441753`*^9}, {3.8950637154690247`*^9, 3.895063715844648*^9}, {
   3.906136180774873*^9, 3.906136182758326*^9}, {3.906141017110941*^9, 
   3.906141046174398*^9}, {3.90614185812543*^9, 3.906141858526496*^9}, {
   3.906224266722131*^9, 3.9062242675213137`*^9}, {3.908628434878978*^9, 
   3.908628436614232*^9}, {3.908634237194463*^9, 3.9086342376943283`*^9}, 
   3.908634871749435*^9, 3.9086349989805317`*^9, {3.908637865822584*^9, 
   3.908637867021596*^9}, 3.908638172355998*^9, 3.908638593792383*^9, {
   3.908639206395911*^9, 3.908639232553463*^9}, {3.908639429283114*^9, 
   3.908639432384307*^9}, {3.90863968298523*^9, 3.9086396834544353`*^9}, {
   3.908640060502152*^9, 3.9086400606562862`*^9}, {3.90864013528557*^9, 
   3.908640135538939*^9}, {3.908640178261475*^9, 3.908640178450549*^9}, {
   3.9086402632530117`*^9, 3.908640264218128*^9}, {3.9086412026230383`*^9, 
   3.908641203969953*^9}, {3.908641473051445*^9, 3.908641474645816*^9}, {
   3.908643367439793*^9, 3.908643368270494*^9}, {3.908645962509025*^9, 
   3.9086459627002363`*^9}, {3.908646000939835*^9, 3.9086460012676888`*^9}, {
   3.908646462720601*^9, 3.9086464908946733`*^9}, {3.908646566575778*^9, 
   3.908646566941762*^9}, {3.908646888725131*^9, 3.908646890042796*^9}, {
   3.908647064651458*^9, 3.908647065425074*^9}, {3.908647171787343*^9, 
   3.9086471719678783`*^9}, {3.908647626343566*^9, 3.9086476355078077`*^9}, {
   3.908648376977553*^9, 3.908648378188895*^9}, {3.90864853841593*^9, 
   3.9086485438515377`*^9}, {3.9086494959702377`*^9, 3.908649498529934*^9}, {
   3.908649797706119*^9, 3.908649799469589*^9}, {3.908650041121591*^9, 
   3.908650048994862*^9}, {3.908651092935049*^9, 3.9086510947681103`*^9}, {
   3.9088933302200727`*^9, 3.9088933306436577`*^9}, {3.9088936152731*^9, 
   3.9088936157370853`*^9}, 3.908986037795216*^9, 3.9089890752906322`*^9, {
   3.9090689097355747`*^9, 3.9090689269033546`*^9}, {3.909069315031383*^9, 
   3.9090693243899307`*^9}, {3.909069402774691*^9, 3.909069410437347*^9}, {
   3.909071358679454*^9, 3.909071376726318*^9}, {3.909071688477652*^9, 
   3.909071742121518*^9}, 3.909071818901597*^9, {3.9090720454609528`*^9, 
   3.909072047317885*^9}, {3.9090721017039433`*^9, 3.909072102711548*^9}, {
   3.909072350541589*^9, 3.909072365143858*^9}, {3.90907365198072*^9, 
   3.90907368157472*^9}, {3.9090740970723467`*^9, 3.9090741048427153`*^9}, {
   3.9095943512107*^9, 3.909594353753463*^9}, 3.909594523833694*^9, {
   3.909594632529398*^9, 3.909594632670746*^9}, 3.9095952930726633`*^9, {
   3.909595523895797*^9, 3.909595525867404*^9}, {3.909655272065487*^9, 
   3.909655274282538*^9}, {3.9096555272678413`*^9, 3.909655552412962*^9}, {
   3.909655599425828*^9, 3.909655604299272*^9}, {3.909656870026799*^9, 
   3.909656873212839*^9}, {3.909657388389391*^9, 3.909657388466633*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->
  "In[213]:=",ExpressionUUID->"853d7cd6-a108-4313-ae09-19fd49b9b9c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat0", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"dat00", ",", "1"}], "]"}], ",", "JJ"}], "]"}], "]"}], ",", 
      "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9086341566871367`*^9, 3.9086341591271048`*^9}, {
   3.908635285543046*^9, 3.908635334693664*^9}, 3.9086354675824823`*^9, {
   3.908638318292225*^9, 3.9086383287937517`*^9}, {3.908638450410726*^9, 
   3.908638461320383*^9}, 3.9086391235169992`*^9, 3.908639201660718*^9, {
   3.9086429772669983`*^9, 3.9086430211598043`*^9}, {3.908645972805496*^9, 
   3.90864597742492*^9}, {3.908651354789197*^9, 3.908651368014598*^9}, {
   3.908651554362318*^9, 3.908651570933153*^9}, {3.908651653613847*^9, 
   3.908651658868795*^9}, {3.9086516903576937`*^9, 3.908651699524119*^9}, {
   3.908893929752508*^9, 3.908893972477972*^9}, {3.908894011262257*^9, 
   3.9088940436453743`*^9}, {3.909073714580182*^9, 3.90907372107555*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"9f8391bc-12c8-4aa6-85df-26209a638092"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"Transpose", "[", "dat0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"Transpose", "[", "x", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.90862993134897*^9, 3.90862994716473*^9}, {
  3.908629990656089*^9, 3.908629995446803*^9}, {3.908634192025166*^9, 
  3.908634195494688*^9}, {3.908634359801667*^9, 3.908634374837175*^9}, {
  3.908634633524576*^9, 3.908634641123056*^9}, {3.908641298171732*^9, 
  3.908641309665421*^9}, {3.908641390154951*^9, 3.908641390224802*^9}, {
  3.908641447201645*^9, 3.9086414473567944`*^9}, {3.908646577967555*^9, 
  3.908646583078199*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"8da77169-9f34-4eef-918c-9db44120aa75"],

Cell[BoxData["3000"], "Output",
 CellChangeTimes->{{3.9095952869594*^9, 3.90959529541889*^9}, 
   3.90959552863138*^9, 3.909655087736033*^9, 3.909657391279963*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"942754b5-6ead-4aeb-b635-4ce68d55e7a6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", "1.0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "JJ"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", "X0", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.908634253051508*^9, 3.908634255479335*^9}, {
  3.908640254104775*^9, 3.908640258794993*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"bca2d396-a0a4-4089-9234-1dc3d9c5568c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "=", "X0"}], ";"}]], "Input",
 CellChangeTimes->{{3.906208993583805*^9, 3.9062089965062103`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"c4cdcbf5-cbee-4eb5-9401-349aabcff744"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"Correlation", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "c", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8948080146435404`*^9, 3.8948194318661346`*^9, {3.905870443514635*^9, 
   3.9058704469373827`*^9}, {3.905874095239604*^9, 3.9058741053972483`*^9}, {
   3.906133401501116*^9, 3.906133405106762*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->
  "In[221]:=",ExpressionUUID->"e5856cb1-9673-48a3-9eee-e0ae0ffb18b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ei", "=", 
   RowBox[{"Eigenvalues", "[", "c", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8948162840956144`*^9, {3.905870449665101*^9, 3.9058704539845037`*^9}, {
   3.905874109686253*^9, 3.9058741381218987`*^9}, {3.906133407643888*^9, 
   3.9061334090347958`*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->
  "In[223]:=",ExpressionUUID->"1e7058e4-542b-4f6f-b87f-58b8d9b364a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ee", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ei", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"JJ", ",", "150"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"ee", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.894818355196305*^9, 3.8948183782367945`*^9}, {
  3.894975418928136*^9, 3.894975424881665*^9}, {3.894976116060651*^9, 
  3.8949761163886847`*^9}, {3.894980522638934*^9, 3.8949805229891033`*^9}, {
  3.905870520361787*^9, 3.90587052321621*^9}, {3.905874141470099*^9, 
  3.9058741837412767`*^9}, {3.9061334319153214`*^9, 3.9061334426520243`*^9}, {
  3.9061415601517*^9, 3.906141573626292*^9}, {3.90863924514338*^9, 
  3.908639252330151*^9}, {3.908650094933032*^9, 3.90865011082684*^9}, {
  3.909068945320622*^9, 3.90906894750336*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->
  "In[224]:=",ExpressionUUID->"53eba45e-c706-468f-b797-546ab0e7b24e"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
qyB8PO58liF/vgrXbhYM+qTZJv0XY/uyCQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 150.}, {0, 1830.4502435395302`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.906141567334587*^9, 3.906141574073827*^9}, 
   3.906141933039898*^9, 3.9062087479153757`*^9, 3.906209021553321*^9, 
   3.906213655984642*^9, 3.906215550785222*^9, 3.90622430728192*^9, 
   3.9086284499579906`*^9, 3.9086346655393887`*^9, 3.9086347792913218`*^9, 
   3.908634889382921*^9, 3.908635023729374*^9, 3.908635489471333*^9, 
   3.908637915460702*^9, 3.9086381792588778`*^9, 3.908638334666892*^9, 
   3.908638420214916*^9, 3.908638466960404*^9, 3.908638599731914*^9, 
   3.908639129311019*^9, 3.908639214502236*^9, 3.908639252986294*^9, 
   3.908639438975397*^9, 3.908639692492681*^9, 3.908640066275264*^9, 
   3.908640140918199*^9, 3.908640184588748*^9, 3.9086402704566793`*^9, 
   3.9086413276025763`*^9, 3.908641395549594*^9, {3.9086414543908863`*^9, 
   3.9086414828546267`*^9}, 3.908642148417446*^9, 3.908643381567748*^9, 
   3.908643510677953*^9, 3.908643616884194*^9, 3.908643803124954*^9, 
   3.9086460096040916`*^9, 3.908646514327304*^9, 3.9086465923635693`*^9, 
   3.9086466653644876`*^9, 3.908646910289455*^9, 3.908647128302843*^9, 
   3.908647178738593*^9, 3.908648397609734*^9, 3.9086485695394993`*^9, 
   3.908649505615179*^9, 3.9086498318026543`*^9, {3.9086500908620787`*^9, 
   3.908650111495219*^9}, 3.9086511039033813`*^9, 3.908651391363295*^9, 
   3.908651470489999*^9, 3.908651581146*^9, 3.908651620940741*^9, 
   3.908651667009615*^9, 3.908651706095096*^9, 3.908653967311741*^9, 
   3.908709500912663*^9, 3.9087252230772543`*^9, 3.9088940995962973`*^9, 
   3.908986049107396*^9, 3.908989082527142*^9, 3.908989994547427*^9, {
   3.909068939323082*^9, 3.909068948204558*^9}, 3.909069434238039*^9, 
   3.909070841983123*^9, 3.909071393966139*^9, 3.9090718373268967`*^9, 
   3.909072056829401*^9, 3.909074118285452*^9, 3.9090773755424633`*^9, 
   3.9091546225669947`*^9, 3.9094282392066054`*^9, 3.9094799600693502`*^9, 
   3.9094812782315683`*^9, 3.909593339862418*^9, 3.909594364992688*^9, 
   3.909594530660088*^9, 3.9095946397266607`*^9, 3.9095952991352987`*^9, 
   3.909595532261772*^9, 3.909655093326666*^9, 3.90965739784057*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"6836ab05-63de-42ad-9d24-d735ccda3fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"ei", "[", 
     RowBox[{"[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"ei", "[", 
     RowBox[{"[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "JJ"}], "}"}]}], "]"}]]], "Input",
 CellChangeTimes->{{3.906142525668046*^9, 3.906142620032568*^9}, {
   3.906142653265492*^9, 3.9061426534199533`*^9}, {3.906142786680311*^9, 
   3.9061427870590143`*^9}, {3.906143114637808*^9, 3.9061431332281847`*^9}, {
   3.906224536210473*^9, 3.9062245467440557`*^9}, {3.906224857111877*^9, 
   3.906224857612924*^9}, {3.9062265801356373`*^9, 3.906226580403524*^9}, {
   3.9086284636664543`*^9, 3.9086284648145523`*^9}, {3.9086348964620037`*^9, 
   3.908634902651335*^9}, 3.908643517383771*^9, 3.908647184658621*^9, {
   3.908709525742971*^9, 3.908709526220104*^9}, {3.909068957616847*^9, 
   3.909068957968008*^9}, {3.909428245982953*^9, 3.9094282468366156`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"35060fb4-fbbf-4131-b5ac-20d032813d49"],

Cell[BoxData["0.9413417386963654`"], "Output",
 CellChangeTimes->{{3.906142562230577*^9, 3.906142620879911*^9}, 
   3.9061426537916203`*^9, 3.9061427875621033`*^9, {3.906143116356414*^9, 
   3.9061431336461763`*^9}, 3.906208747936016*^9, 3.906209021576819*^9, 
   3.906213656010582*^9, 3.906215550815712*^9, 3.906224312297348*^9, {
   3.9062245368052692`*^9, 3.9062245471772633`*^9}, 3.906224859817466*^9, 
   3.906226580995427*^9, {3.9086284624357452`*^9, 3.908628465880954*^9}, 
   3.908634667079741*^9, 3.9086347806927156`*^9, {3.908634892634676*^9, 
   3.908634903233039*^9}, 3.9086350257003403`*^9, 3.908635491279297*^9, 
   3.908637916534421*^9, 3.9086381816552343`*^9, 3.908638336950008*^9, 
   3.908638422445671*^9, 3.9086384681838293`*^9, 3.908638601292026*^9, 
   3.908639134027665*^9, 3.9086392222681837`*^9, 3.908639254889032*^9, 
   3.908639440402171*^9, 3.908639695528254*^9, 3.908640067463643*^9, 
   3.9086401421165667`*^9, 3.908640186295636*^9, 3.908640271766162*^9, 
   3.908641328909939*^9, 3.90864139658139*^9, {3.908641455787744*^9, 
   3.9086414843016653`*^9}, 3.908642150595243*^9, 3.908643382730023*^9, 
   3.908643517959989*^9, 3.908643617985174*^9, 3.908643804250709*^9, 
   3.908646011012233*^9, 3.908646515553409*^9, 3.908646593648417*^9, 
   3.908646666784791*^9, 3.908646912944366*^9, 3.908647130225511*^9, 
   3.908647185315886*^9, 3.90864840016171*^9, 3.908648571442491*^9, 
   3.908649507532818*^9, 3.908649837429723*^9, 3.908650121376425*^9, 
   3.908651105103435*^9, 3.9086513929940147`*^9, 3.9086514705234823`*^9, 
   3.908651583469709*^9, 3.908651622355122*^9, 3.908651668229651*^9, 
   3.908651707157506*^9, 3.908653967334216*^9, {3.908709503983124*^9, 
   3.9087095268214808`*^9}, 3.908725224494444*^9, 3.908894101336891*^9, 
   3.908986050590967*^9, 3.90898908345299*^9, 3.90898999459664*^9, 
   3.909068958584978*^9, 3.909069435976265*^9, 3.909070844261475*^9, 
   3.909071394759738*^9, 3.9090718412092257`*^9, 3.909072057672638*^9, 
   3.9090741216412077`*^9, 3.909077376964036*^9, 3.9091546244337387`*^9, {
   3.9094282418790197`*^9, 3.909428248146839*^9}, 3.90947996106327*^9, 
   3.909481279853253*^9, 3.909593340947619*^9, 3.909594366110468*^9, 
   3.909594531570863*^9, 3.909594641556507*^9, 3.909595300658598*^9, 
   3.9095955332607393`*^9, 3.909655094485031*^9, 3.909657400270978*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"cacdbbdc-51f6-416b-970f-62cf7a509484"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"-", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Eigenvectors", "[", "c", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "U", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.894816385545452*^9, 3.8948194426661425`*^9, {3.905870527220895*^9, 
   3.905870530816264*^9}, {3.906133445027534*^9, 3.9061334474578943`*^9}, {
   3.909594367219214*^9, 3.909594369377161*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->
  "In[227]:=",ExpressionUUID->"6b7da122-491d-47d9-a87c-cb1e7251f21b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"-", 
    RowBox[{"X", ".", "U"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.905870533929429*^9, 3.9058705373281*^9}, {
  3.9061334738262453`*^9, 3.906133475610029*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->
  "In[229]:=",ExpressionUUID->"7235d6b6-32a5-469d-98d1-515630d6f93e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tam", "=", 
  RowBox[{"Round", "[", 
   RowBox[{"II", "*", "0.75"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.894974177796876*^9, 3.894974205270395*^9}, {
  3.9086402967394*^9, 3.908640298361527*^9}, {3.908989564335638*^9, 
  3.908989564694284*^9}, {3.9089896155758123`*^9, 3.908989615637001*^9}, {
  3.908989714760294*^9, 3.9089897171317*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"3c87471f-f17b-4fb9-8a26-e697a4ab23c4"],

Cell[BoxData["274"], "Output",
 CellChangeTimes->{{3.8949741882698755`*^9, 3.8949742071783576`*^9}, 
   3.8949746948872013`*^9, 3.8949754879625597`*^9, 3.8949777565058403`*^9, 
   3.8949810330664654`*^9, 3.894988507808277*^9, 3.8949893306414337`*^9, 
   3.8949896902759743`*^9, 3.8949898295141926`*^9, 3.894989957721465*^9, 
   3.894990368067534*^9, 3.894991363159618*^9, 3.8950595500794907`*^9, 
   3.8950597821028852`*^9, 3.895059903073785*^9, 3.895063765017673*^9, 
   3.905861737251657*^9, 3.9058690538105707`*^9, 3.905871023976914*^9, 
   3.905874243323838*^9, 3.905875335017441*^9, 3.905960212063442*^9, 
   3.905963151078691*^9, 3.90603857117633*^9, 3.9061334774074507`*^9, 
   3.906134015773971*^9, 3.906136303477253*^9, 3.906139037450651*^9, 
   3.906141100106777*^9, 3.906141599602633*^9, 3.906142027474903*^9, 
   3.9061426773176603`*^9, 3.906208768187368*^9, 3.906209037234374*^9, 
   3.9062136725110283`*^9, 3.906215567751519*^9, 3.906224494721426*^9, 
   3.908628473037303*^9, 3.908634673268402*^9, 3.9086347850529423`*^9, 
   3.9086349059151*^9, 3.9086350541210127`*^9, 3.908635510695294*^9, 
   3.908637922167782*^9, 3.908638185716981*^9, 3.908638339650651*^9, 
   3.908638424955949*^9, 3.9086384709313087`*^9, 3.9086386065621758`*^9, 
   3.9086391370062943`*^9, 3.9086392629967337`*^9, 3.908639443324067*^9, 
   3.908639699562851*^9, 3.908640069767557*^9, 3.908640144160673*^9, 
   3.908640188433052*^9, {3.9086402742935333`*^9, 3.908640299050271*^9}, 
   3.908641331956716*^9, 3.9086413990199337`*^9, 3.908641459412333*^9, 
   3.908641491135611*^9, 3.9086421542722*^9, 3.9086433871370363`*^9, 
   3.9086435238325043`*^9, 3.908643622015629*^9, 3.9086438083823833`*^9, 
   3.908646015424082*^9, 3.908646519967268*^9, 3.9086465977988367`*^9, 
   3.908646669624061*^9, 3.908646933624673*^9, 3.9086471335406017`*^9, 
   3.908647189675289*^9, 3.908648421281917*^9, 3.908648729324798*^9, 
   3.9086495120074873`*^9, 3.90865014599233*^9, 3.9086511088058147`*^9, 
   3.908651397805357*^9, 3.908651474123999*^9, 3.908651588812245*^9, 
   3.908651629967553*^9, 3.908651672843542*^9, 3.908651710388056*^9, 
   3.9086539690074987`*^9, 3.9087095122639637`*^9, 3.908725229435259*^9, 
   3.9088941061973248`*^9, 3.908986053796299*^9, 3.9089890860132627`*^9, 
   3.9089895653588343`*^9, {3.908989620611916*^9, 3.908989637455743*^9}, 
   3.908989718347517*^9, 3.908989996139031*^9, 3.909068962038554*^9, 
   3.909069440079225*^9, 3.909070847496361*^9, 3.909071396854665*^9, 
   3.9090718475373783`*^9, 3.909072060162675*^9, 3.909074127678423*^9, 
   3.90907738020891*^9, 3.909154626925263*^9, 3.9094282523112593`*^9, 
   3.909479965470529*^9, 3.909481283158347*^9, 3.909593343477188*^9, 
   3.909594372396063*^9, 3.909594534099762*^9, 3.909594646361973*^9, 
   3.909595304058331*^9, 3.909595536108322*^9, 3.909655099195698*^9, 
   3.90965740603368*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"30aa7b7c-6955-48a0-b561-ba507c55f28f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NEi", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "NEi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"dcl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"L", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", 
      RowBox[{"LAB", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.894975613372037*^9, 3.894975703647992*^9}, {
   3.894975960464261*^9, 3.8949759605736294`*^9}, {3.8949760338554535`*^9, 
   3.894976033949211*^9}, {3.894976074534523*^9, 3.8949760746126366`*^9}, {
   3.894976308285455*^9, 3.8949763859388914`*^9}, {3.8949764912384825`*^9, 
   3.8949764913790555`*^9}, {3.894976556657398*^9, 3.8949765567355013`*^9}, {
   3.8949778548548117`*^9, 3.8949778549328938`*^9}, {3.894978019313586*^9, 
   3.8949780833864417`*^9}, {3.894978437075186*^9, 3.8949784372002163`*^9}, {
   3.894978504609423*^9, 3.8949785087708344`*^9}, {3.8949785801792297`*^9, 
   3.8949786309039235`*^9}, {3.8949786697097664`*^9, 
   3.8949786972549334`*^9}, {3.8949813487032604`*^9, 
   3.8949813492732296`*^9}, {3.8949813927262964`*^9, 
   3.8949813928224697`*^9}, {3.8949814279310675`*^9, 3.894981428111515*^9}, {
   3.8949814900315247`*^9, 3.894981509421505*^9}, {3.8949815401117277`*^9, 
   3.8949815416517506`*^9}, {3.8949816949474087`*^9, 3.894981695192412*^9}, {
   3.894981759532383*^9, 3.8949817596124425`*^9}, {3.8949818117631454`*^9, 
   3.894981811882924*^9}, 3.894989035329754*^9, {3.894989440642629*^9, 
   3.8949894412915*^9}, {3.8949899850163965`*^9, 3.894990020646209*^9}, {
   3.894990204226383*^9, 3.8949902043578663`*^9}, {3.894990429234985*^9, 
   3.8949904293508825`*^9}, {3.8949905013226547`*^9, 
   3.8949905013916845`*^9}, {3.894991379197612*^9, 3.8949913795678463`*^9}, {
   3.905870597361404*^9, 3.905870601624254*^9}, {3.9061334805818653`*^9, 
   3.9061334835863047`*^9}, {3.9061417967153263`*^9, 3.906141816135417*^9}, {
   3.90614203850359*^9, 3.9061420386451807`*^9}, {3.9061426325731907`*^9, 
   3.9061426334238586`*^9}, {3.906142681398848*^9, 3.9061426815750027`*^9}, {
   3.906142731990088*^9, 3.906142740918543*^9}, {3.906143138703514*^9, 
   3.9061431390992327`*^9}, {3.9062245313447227`*^9, 3.906224556455332*^9}, {
   3.906224863559203*^9, 3.906224863868585*^9}, {3.906224897935643*^9, 
   3.9062249195240107`*^9}, {3.906225113966354*^9, 3.906225133321929*^9}, {
   3.906225802487496*^9, 3.90622580257883*^9}, {3.906226286729611*^9, 
   3.906226344557189*^9}, {3.908634800058752*^9, 3.908634801162022*^9}, {
   3.908635065077132*^9, 3.908635099568074*^9}, {3.908635531309944*^9, 
   3.9086355314049788`*^9}, {3.908637927838686*^9, 3.908637927941759*^9}, {
   3.90863804386178*^9, 3.908638058269505*^9}, {3.9086382381002398`*^9, 
   3.908638239082829*^9}, {3.908638352259324*^9, 3.9086383523615437`*^9}, 
   3.908639153862961*^9, {3.9086393138765497`*^9, 3.908639314001892*^9}, {
   3.908639366052003*^9, 3.908639366665607*^9}, {3.9086397021112432`*^9, 
   3.908639702751184*^9}, {3.908640190207683*^9, 3.9086401903472424`*^9}, {
   3.908640279831455*^9, 3.908640281434513*^9}, {3.90864160341247*^9, 
   3.9086416035427847`*^9}, {3.9086416636128197`*^9, 3.908641663718298*^9}, {
   3.908641744394423*^9, 3.908641744509267*^9}, {3.908641957944728*^9, 
   3.908641958053259*^9}, {3.908642091662465*^9, 3.908642092410554*^9}, {
   3.908642759225172*^9, 3.908642787108363*^9}, {3.9086428449651623`*^9, 
   3.908642851764084*^9}, {3.908643653113809*^9, 3.908643662429043*^9}, {
   3.9086437176132936`*^9, 3.908643717716155*^9}, {3.908646065020338*^9, 
   3.9086460651555643`*^9}, {3.908646147332135*^9, 3.908646165938609*^9}, {
   3.90864622006708*^9, 3.908646220185862*^9}, {3.908646671792631*^9, 
   3.908646681077504*^9}, {3.9086467413030853`*^9, 3.9086467534448233`*^9}, {
   3.9086469910453243`*^9, 3.908646991562469*^9}, {3.9086471428675327`*^9, 
   3.908647142969096*^9}, {3.908647204779558*^9, 3.908647205392415*^9}, {
   3.908647254418499*^9, 3.908647254532206*^9}, {3.9086482185393667`*^9, 
   3.908648218815024*^9}, 3.908648249203074*^9, {3.908648470217451*^9, 
   3.908648493908505*^9}, {3.908648808710264*^9, 3.908648808817519*^9}, {
   3.908649523060733*^9, 3.908649523601369*^9}, {3.908649663515176*^9, 
   3.908649665040675*^9}, {3.908650324603567*^9, 3.90865035649658*^9}, {
   3.9086504046301823`*^9, 3.9086504047760553`*^9}, {3.9086507546610527`*^9, 
   3.908650754860263*^9}, {3.9086512270454473`*^9, 3.908651227143684*^9}, {
   3.9087252511108093`*^9, 3.908725251818569*^9}, {3.908986061220664*^9, 
   3.908986061340218*^9}, {3.908986129442822*^9, 3.908986129770165*^9}, {
   3.9089863507006702`*^9, 3.908986465208353*^9}, {3.908986505072713*^9, 
   3.908986580116446*^9}, {3.908986611842761*^9, 3.908986612008654*^9}, {
   3.9089866739075193`*^9, 3.9089867206977*^9}, {3.9089867514605093`*^9, 
   3.9089867715382233`*^9}, {3.908986899955738*^9, 3.908986961303515*^9}, {
   3.908987100449853*^9, 3.908987133078117*^9}, {3.9089872230255337`*^9, 
   3.9089872399215097`*^9}, {3.908987290289648*^9, 3.908987424099949*^9}, {
   3.908987462246991*^9, 3.908987523324492*^9}, {3.9089875827199306`*^9, 
   3.908987582822096*^9}, {3.908987866724902*^9, 3.908987869031464*^9}, {
   3.9089879739539022`*^9, 3.9089879889135113`*^9}, {3.908988314341928*^9, 
   3.9089883160804443`*^9}, {3.9089884899553957`*^9, 3.908988490030755*^9}, {
   3.90898957673602*^9, 3.9089895769670362`*^9}, {3.909068971316448*^9, 
   3.9090689728074493`*^9}, {3.909069009944621*^9, 3.909069035927519*^9}, {
   3.909069452694762*^9, 3.9090694891092653`*^9}, {3.909070857363888*^9, 
   3.909070876279996*^9}, {3.909070960280816*^9, 3.9090709608220663`*^9}, {
   3.909071872054537*^9, 3.909071872173511*^9}, {3.9090741317847557`*^9, 
   3.9090741387871943`*^9}, {3.909074385600336*^9, 3.909074396725515*^9}, {
   3.9090745663815327`*^9, 3.909074570699521*^9}, {3.9090750178580647`*^9, 
   3.909075020115794*^9}, {3.909075056721582*^9, 3.909075056863235*^9}, {
   3.90907513542559*^9, 3.90907515348631*^9}, {3.9090751913780117`*^9, 
   3.909075219701846*^9}, {3.9090756365984907`*^9, 3.909075636849992*^9}, {
   3.90907576873245*^9, 3.909075821043964*^9}, {3.9090760585456867`*^9, 
   3.909076064089327*^9}, {3.909594385085699*^9, 3.909594389249539*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"52260343-387d-41e4-994f-49cdf22c7db8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ltrai", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"dcl", ",", "tam"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ltest", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"dcl", ",", "Ltrai"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8949708356376514`*^9, 3.8949708556633787`*^9}, {
  3.894971944402735*^9, 3.89497194999603*^9}, {3.8949739747300253`*^9, 
  3.894973977307974*^9}, {3.8949742108821106`*^9, 3.894974220671528*^9}, {
  3.894974352529383*^9, 3.8949743853506503`*^9}, {3.894977832608354*^9, 
  3.8949778348353353`*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"236a93cb-ab3e-41c8-9ffc-8b5d4b11f4a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NEiR", "=", "45"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LtraiR", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Ltrai", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "NEiR"}], "]"}], "->", 
      RowBox[{"Ltrai", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Ltrai", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"LtestR", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Ltest", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "NEiR"}], "]"}], "->", 
      RowBox[{"Ltest", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Ltest", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"CL", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"LtraiR", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.906140266692336*^9, 3.906140267650202*^9}, {
   3.906140300185812*^9, 3.906140301514637*^9}, {3.9061403918030376`*^9, 
   3.90614044400245*^9}, {3.9061404795146923`*^9, 3.9061405457853003`*^9}, {
   3.9061406192290573`*^9, 3.9061406438414392`*^9}, {3.9061411147675533`*^9, 
   3.906141122622786*^9}, {3.908648232656803*^9, 3.908648241311079*^9}, {
   3.908986075731525*^9, 3.9089860767233667`*^9}, {3.908986169947423*^9, 
   3.908986171826788*^9}, {3.908986218685493*^9, 3.908986238082526*^9}, {
   3.908986277702704*^9, 3.908986341947357*^9}, {3.908986411876945*^9, 
   3.908986414265273*^9}, {3.9089865562586403`*^9, 3.908986557864986*^9}, {
   3.908986654108836*^9, 3.908986654833197*^9}, 3.9089868426275263`*^9, {
   3.908986876011427*^9, 3.9089868782173233`*^9}, {3.9089870162182083`*^9, 
   3.908987053774537*^9}, {3.908987207552752*^9, 3.908987211397614*^9}, 
   3.908987273099361*^9, {3.9089880641536713`*^9, 3.908988106070649*^9}, {
   3.908988146986218*^9, 3.908988258073538*^9}, {3.908988337737959*^9, 
   3.9089883658163643`*^9}, {3.908988414481367*^9, 3.908988414615651*^9}, {
   3.908988529344914*^9, 3.908988531542819*^9}, {3.9089885752804623`*^9, 
   3.90898862408661*^9}, {3.908988661807827*^9, 3.908988662686487*^9}, {
   3.908988714423978*^9, 3.908988744038555*^9}, {3.908988789619681*^9, 
   3.908988825687976*^9}, {3.908988859307436*^9, 3.908988901230302*^9}, {
   3.908989147959909*^9, 3.908989223638344*^9}, {3.908989276223892*^9, 
   3.9089893072224903`*^9}, {3.909068978920411*^9, 3.909068979855762*^9}, {
   3.909069524664575*^9, 3.909069527293326*^9}, {3.909069575856189*^9, 
   3.909069575946856*^9}, {3.9090696093436947`*^9, 3.9090696520568333`*^9}, {
   3.909070939625012*^9, 3.909070946727401*^9}, {3.909071046767812*^9, 
   3.9090710607020884`*^9}, {3.9090711771660833`*^9, 3.909071190532827*^9}, {
   3.909071588091916*^9, 3.909071595031049*^9}, {3.909071996255643*^9, 
   3.909071997012843*^9}, {3.909072079044918*^9, 3.909072079331497*^9}, {
   3.909072149324011*^9, 3.909072159930497*^9}, {3.9090724060575733`*^9, 
   3.909072429801243*^9}, {3.909072501546556*^9, 3.909072544899859*^9}, 
   3.909072649596287*^9, {3.909073102539304*^9, 3.909073103585229*^9}, {
   3.909074477477162*^9, 3.9090745461023808`*^9}, {3.909074603788772*^9, 
   3.909074603899341*^9}, {3.9090747212834797`*^9, 3.909074735230548*^9}, {
   3.909074765338954*^9, 3.909074797793364*^9}, 3.909074965394293*^9, {
   3.909075026481504*^9, 3.909075030471202*^9}, {3.909075119175519*^9, 
   3.909075132573926*^9}, {3.9090760492313757`*^9, 3.909076055245617*^9}, {
   3.9090761221754208`*^9, 3.909076150921694*^9}, {3.9090762061582108`*^9, 
   3.9090763322114763`*^9}, {3.9090763719405212`*^9, 3.909076400979566*^9}, 
   3.9090764461238422`*^9, {3.909076479285491*^9, 3.909076487498066*^9}, {
   3.909076546922937*^9, 3.909076634578088*^9}, {3.909076680697521*^9, 
   3.90907679173463*^9}, {3.909076829232888*^9, 3.9090768461185417`*^9}, {
   3.909076876543976*^9, 3.9090769585011168`*^9}, {3.9090770472534447`*^9, 
   3.909077230281685*^9}, {3.9090795405874777`*^9, 3.909079540657947*^9}, {
   3.90959440177094*^9, 3.909594408321644*^9}, {3.9095946566809464`*^9, 
   3.9095946866310873`*^9}, {3.909595316858223*^9, 3.909595338758337*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"91325cc6-b7a8-414c-9f4b-035e9053a7fd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "45", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox["16", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"AKL\"", ",", "\"BAL\"", ",", "\"BER\"", ",", "\"BOG\"",
                     ",", "\"DEN\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",",
                     "\"SAO\"", ",", "\"TOK\"", ",", "\"VIE\"", ",", 
                    "\"ZRH\""}], "}"}], Short[#, 1]& ]], Annotation[#, 
                    
                    Short[{"AKL", "BAL", "BER", "BOG", "DEN", "DOH", "ILR", 
                    "LIS", "MIN", "NYC", "SAC", "SAN", "SAO", "TOK", "VIE", 
                    "ZRH"}, 1], "Tooltip"]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "45", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox["16", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"AKL\"", ",", "\"BAL\"", ",", "\"BER\"", ",", "\"BOG\"",
                     ",", "\"DEN\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",",
                     "\"SAO\"", ",", "\"TOK\"", ",", "\"VIE\"", ",", 
                    "\"ZRH\""}], "}"}], Short[#, 1]& ]], Annotation[#, 
                    
                    Short[{"AKL", "BAL", "BER", "BOG", "DEN", "DOH", "ILR", 
                    "LIS", "MIN", "NYC", "SAC", "SAN", "SAO", "TOK", "VIE", 
                    "ZRH"}, 1], "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["274", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 274, "ClassNumber" -> 16, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 45]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["SynthesizeMissingValues", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Distribution" -> 
             LearnedDistribution[
               Association[
               "ExampleNumber" -> 274, "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 45]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
                "Processor" -> MachineLearning`MLProcessor["Identity"], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, "Model" -> 
                Association["RotationMatrix" -> CompressedData["
1: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
R/H2Fk01GHJdW4i4ScT/ASuhK5M=
                   "], 
                  "Precisions" -> {0.0002486004901352374, 
                   0.001180626631160305, 0.00393939075786873, 
                   0.007401439496208888, 0.009023089516990539, 
                   0.010008906708152878`, 0.011843441296968137`, 
                   0.01627233446312698, 0.01761968755989104, 
                   0.01963862400350071, 0.027336854731315, 
                   0.031045802535856617`, 0.03536641534853188, 
                   0.04148777353148422, 0.045435829423348034`, 
                   0.04815646580453389, 0.05347803465856174, 
                   0.056076103985232835`, 0.06060618024089277, 
                   0.06548084819589586, 0.06781761763679853, 
                   0.06979647935866075, 0.07325153545417895, 
                   0.07855750626904368, 0.08499045632768916, 
                   0.08918546739619106, 0.09325977263950472, 
                   0.093655671864122}, "NoisePrecision" -> 
                  0.15670489817508826`, "Processor" -> 
                  MachineLearning`MLProcessor["Center", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> CompressedData["
1:eJwBdQGK/iFib1JlAQAAAC0AAADwLnFd8PJlwDcyFzhW4zbAjDh9SprCOMDS
KSaK4jknwPTpjAIy6PG/zeI2PotsOsAq1wIA/ZcowMxeEpkhqiVAzM+Z2qme
LEAXoQBCUEvgv8MIvlkS8CbA144wJD7FLUBduTMMRrQpwPIPSX9B6xjAq5Bm
FRK4HEAWyHKVqHccwHwBmxUKNyNAM5cAkZQqBUD7b21F9LANQLWWvVINuvw/
alCQrFOy+b+vs8T6ggMKQMI45IQMhxjA1DyPyJtY7L+FrLrLcEsQQPxLQhGb
AR3AXRrqWBHW/L/1Yq45WxANwIIu1S30WglA7e9YS+0F7T80rCnCB64TQOt2
5bRV4/a/F+hqzcTRE8DIyY4Z/ubMP6oPXB2anATAwW3gCvHD5r/P0Dl4bhgE
wLXd1r0zdf8/smIuzb/t+T//U/v8tk7IPwsrkPBTRQVAKiHdHHNSEUDiWma/
1xYjwBhc4+98eQfAZ+MoYGJ6AUDajrBi
                    "], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Version" -> {12.3, 0}, "ID" -> 8454953672375903564]], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]], "Method" -> 
                  "Multinormal", "Options" -> 
                  Association[
                   "CovarianceType" -> 
                    Association[
                    "Value" -> "Full", "Options" -> Association[]], 
                    "IntrinsicDimension" -> 
                    Association["Value" -> 28, "Options" -> Association[]]]], 
                "TrainingInformation" -> 
                Association["Configurations" -> Dataset[
                    Association[
                    Association[
                    "Value" -> "Multinormal", "Options" -> 
                    Association[
                    "CovarianceType" -> Association["Value" -> "Full"], 
                    "IntrinsicDimension" -> 
                    Association["Value" -> "Heuristic"]], "NaiveImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> CompressedData["
1:eJwBdQGK/iFib1JlAQAAAC0AAADsLnFd8PJlwDkyFzhW4zbAjDh9SprCOMDS
KSaK4jknwPXpjAIy6PG/0eI2PotsOsAp1wIA/ZcowM9eEpkhqiVAxs+Z2qme
LEAMoQBCUEvgv8gIvlkS8CbA2I4wJD7FLUBiuTMMRrQpwPAPSX9B6xjApJBm
FRK4HEAYyHKVqHccwHgBmxUKNyNAOJcAkZQqBUD5b21F9LANQLeWvVINuvw/
aFCQrFOy+b+xs8T6ggMKQMU45IQMhxjA0jyPyJtY7L+DrLrLcEsQQP9LQhGb
AR3AVBrqWBHW/L/zYq45WxANwIku1S30WglA7O9YS+0F7T8yrCnCB64TQOR2
5bRV4/a/FehqzcTRE8DNyY4Z/ubMP6wPXB2anATAxW3gCvHD5r/L0Dl4bhgE
wMDd1r0zdf8/sGIuzb/t+T/5U/v8tk7IPw4rkPBTRQVALCHdHHNSEUDfWma/
1xYjwBlc4+98eQfAaOMoYGJ6AUDQFrBb
                    "], 
                    "StandardDeviation" -> CompressedData["
1:eJwBdQGK/iFib1JlAQAAAC0AAAAALuxJy1RPQLle8A6NvjxAZbS3nrwdMEBj
eDAPKGYoQEeXv5hz0SRA7we9zofpJUBWlwoV99kiQNFmLqBY7R9A7VfHWiff
IEBHApUTSmsfQElwpsr6LxhAHXoBaRbDF0BDAdxLaicVQMXX3UgkLxRAwelQ
LMzpEkBz9dAUAKkPQIRnMjp92RFAr8yGo7abEUAmMo3LLo8MQHUZSU5vGhBA
TYhTgoezEECHVF5pLaYLQI+rnFjb3Q9At+AYIv+nDEDjF0t3CrQLQDPQcW8c
dg1ATi9MSztRCUCwinR9Y64KQPmL8wKywwpA9RY7dXVlCUD+2s8MVuMLQEPN
wrSA9gdAKocCiJDLB0C9LhfpoGgKQH5ZVffYSAdATrbkBNHYB0Dhi0GDBOQI
QO8LlhqdvQdAcpxPgiWgBkCgEeLqldgEQKHtaxfIMgZAeyCs12ENBkDDlhRf
kEEHQNISSosGVwZAHGX0FlD2BUD4KZSj
                    "], "Method" -> 
                    "NaiveSampler", "VectorLength" -> 45, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector", "Version" -> {12.3, 0}, "ID" -> 
                    4747808072524423015]], "EMIterations" -> 1] -> 
                    Association[]], 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], 
                    Association[]], "BestModelInformation" -> Dataset[
                    Association[
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]], 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], 
                    Association[]]], "NaiveImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> CompressedData["
1:eJwBdQGK/iFib1JlAQAAAC0AAADsLnFd8PJlwDkyFzhW4zbAjDh9SprCOMDS
KSaK4jknwPXpjAIy6PG/0eI2PotsOsAp1wIA/ZcowM9eEpkhqiVAxs+Z2qme
LEAMoQBCUEvgv8gIvlkS8CbA2I4wJD7FLUBiuTMMRrQpwPAPSX9B6xjApJBm
FRK4HEAYyHKVqHccwHgBmxUKNyNAOJcAkZQqBUD5b21F9LANQLeWvVINuvw/
aFCQrFOy+b+xs8T6ggMKQMU45IQMhxjA0jyPyJtY7L+DrLrLcEsQQP9LQhGb
AR3AVBrqWBHW/L/zYq45WxANwIku1S30WglA7O9YS+0F7T8yrCnCB64TQOR2
5bRV4/a/FehqzcTRE8DNyY4Z/ubMP6wPXB2anATAxW3gCvHD5r/L0Dl4bhgE
wMDd1r0zdf8/sGIuzb/t+T/5U/v8tk7IPw4rkPBTRQVALCHdHHNSEUDfWma/
1xYjwBlc4+98eQfAaOMoYGJ6AUDQFrBb
                    "], 
                   "StandardDeviation" -> CompressedData["
1:eJwBdQGK/iFib1JlAQAAAC0AAAAALuxJy1RPQLle8A6NvjxAZbS3nrwdMEBj
eDAPKGYoQEeXv5hz0SRA7we9zofpJUBWlwoV99kiQNFmLqBY7R9A7VfHWiff
IEBHApUTSmsfQElwpsr6LxhAHXoBaRbDF0BDAdxLaicVQMXX3UgkLxRAwelQ
LMzpEkBz9dAUAKkPQIRnMjp92RFAr8yGo7abEUAmMo3LLo8MQHUZSU5vGhBA
TYhTgoezEECHVF5pLaYLQI+rnFjb3Q9At+AYIv+nDEDjF0t3CrQLQDPQcW8c
dg1ATi9MSztRCUCwinR9Y64KQPmL8wKywwpA9RY7dXVlCUD+2s8MVuMLQEPN
wrSA9gdAKocCiJDLB0C9LhfpoGgKQH5ZVffYSAdATrbkBNHYB0Dhi0GDBOQI
QO8LlhqdvQdAcpxPgiWgBkCgEeLqldgEQKHtaxfIMgZAeyCs12ENBkDDlhRf
kEEHQNISSosGVwZAHGX0FlD2BUD4KZSj
                    "], "Method" -> 
                   "NaiveSampler", "VectorLength" -> 45, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector", "Version" -> {12.3, 0}, "ID" -> 
                   4747808072524423015]], "InputDimension" -> 0, 
                "OutputDimension" -> 45, "Log" -> 
                Association["Example" -> MachineLearning`MLDataset[
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJwBeQGG/iFib1JlAgAAAAEAAAAtAAAAhEokcCRTZcC4NpRBI4oFQAJQOG7V
qCLAWNQrroIiI8AAGN3QBWayv/yWd4l1CzrAU83hpVHILcBWW1WH9vwrQG5Q
7NGqmzxAxem0dQ7dEED7D9AZBZ05wFqHmeXd/iRA0DFJB6YuJcBK4SRHtfsU
wGaoKFAL9A1AwawnkZr9IMCu3TXAc4gjQJ3v2dZ4ASFA7zESUNRfDUB0874k
KJ7rP7FSyA5fFAHAWnp20k+SIEAneNvV/QkYwDLBy5nnnhnAg3GMNjn60j88
ULzjFyMWwJaOa+jYjfC/3qDqWgSEEMA+MMYeUPT4P+qkLRbWtxtAx34MlHmi
JUA7WsZ2v3wDQKjX0KVQlArAafi4WUEREEBiGcgfo64DwAoOebC/5AHAREYX
nj6OIcDwMqU3RvjGP2B/1OPIqdE/hARyMIaYAcDSI/AjtBcQQOk0E+VxefI/
4o/PuXtRLMAKJWBxpYkRwKbKtW++eg5AOEasiA==
                    "], "ID" -> 
                    6900269369450652421]], 
                    Association[
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False]], 
                  "TrainingTime" -> 0.036235, "MaxTrainingMemory" -> 574128, 
                  "DataMemory" -> 100616, "FunctionMemory" -> 44984, 
                  "LanguageVersion" -> {12.3, 0}, "Date" -> 
                  DateObject[{2023, 11, 22, 9, 56, 48.57719`8.43900736503033},
                     "Instant", "Gregorian", -6.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}], 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[
                  Association[
                  "Quantiles" -> {-3.0619992737110966`, -3.0619992737110966`, \
-3.0475131174935033`, -3.0128956008029917`, -2.9521262905724486`, \
-2.9294905130164333`, -2.9264025853224154`, -2.884506659640218, \
-2.8748741054322506`, -2.772105248523227, -2.7604089292995653`}, 
                   "LeftBoundary" -> -3.0475131174935033`, "LeftScale" -> 
                   0.007243078108796652, "LeftTailNorm" -> 0.2]], "Entropy" -> 
                Around[131.50045045716368`, 1.4758399708681322`], 
                "EntropySampleSize" -> 10]], "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {12.3, 0}, 
             "ID" -> 895810465636885430]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> CompressedData["
1:eJwBdQGK/iFib1JlAQAAAC0AAADsLnFd8PJlwDkyFzhW4zbAjDh9SprCOMDS
KSaK4jknwPXpjAIy6PG/0eI2PotsOsAp1wIA/ZcowM9eEpkhqiVAxs+Z2qme
LEAMoQBCUEvgv8gIvlkS8CbA2I4wJD7FLUBiuTMMRrQpwPAPSX9B6xjApJBm
FRK4HEAYyHKVqHccwHgBmxUKNyNAOJcAkZQqBUD5b21F9LANQLeWvVINuvw/
aFCQrFOy+b+xs8T6ggMKQMU45IQMhxjA0jyPyJtY7L+DrLrLcEsQQP9LQhGb
AR3AVBrqWBHW/L/zYq45WxANwIku1S30WglA7O9YS+0F7T8yrCnCB64TQOR2
5bRV4/a/FehqzcTRE8DNyY4Z/ubMP6wPXB2anATAxW3gCvHD5r/L0Dl4bhgE
wMDd1r0zdf8/sGIuzb/t+T/5U/v8tk7IPw4rkPBTRQVALCHdHHNSEUDfWma/
1xYjwBlc4+98eQfAaOMoYGJ6AUDQFrBb
              "], 
             "StandardDeviation" -> CompressedData["
1:eJwBdQGK/iFib1JlAQAAAC0AAAAALuxJy1RPQLle8A6NvjxAZbS3nrwdMEBj
eDAPKGYoQEeXv5hz0SRA7we9zofpJUBWlwoV99kiQNFmLqBY7R9A7VfHWiff
IEBHApUTSmsfQElwpsr6LxhAHXoBaRbDF0BDAdxLaicVQMXX3UgkLxRAwelQ
LMzpEkBz9dAUAKkPQIRnMjp92RFAr8yGo7abEUAmMo3LLo8MQHUZSU5vGhBA
TYhTgoezEECHVF5pLaYLQI+rnFjb3Q9At+AYIv+nDEDjF0t3CrQLQDPQcW8c
dg1ATi9MSztRCUCwinR9Y64KQPmL8wKywwpA9RY7dXVlCUD+2s8MVuMLQEPN
wrSA9gdAKocCiJDLB0C9LhfpoGgKQH5ZVffYSAdATrbkBNHYB0Dhi0GDBOQI
QO8LlhqdvQdAcpxPgiWgBkCgEeLqldgEQKHtaxfIMgZAeyCs12ENBkDDlhRf
kEEHQNISSosGVwZAHGX0FlD2BUD4KZSj
              "], "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12.3, 0}, "ID" -> 3090652515818404428]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12.3, 0}, "ID" -> 2315181629334253493]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[
               "AKL" -> 1, "BAL" -> 2, "BER" -> 3, "BOG" -> 4, "DEN" -> 5, 
                "DOH" -> 6, "ILR" -> 7, "LIS" -> 8, "MIN" -> 9, "NYC" -> 10, 
                "SAC" -> 11, "SAN" -> 12, "SAO" -> 13, "TOK" -> 14, "VIE" -> 
                15, "ZRH" -> 16]}, "MissingCode" -> 0, "Version" -> {12.3, 0},
              "ID" -> 8194623214295436141, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {16}]],
              "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12.3, 0}, "ID" -> 2195899594372133760]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 16], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       "AKL" -> 0.04482758620689655, "BAL" -> 0.034482758620689655`, "BER" -> 
        0.034482758620689655`, "BOG" -> 0.041379310344827586`, "DEN" -> 
        0.11724137931034483`, "DOH" -> 0.06896551724137931, "ILR" -> 
        0.10344827586206896`, "LIS" -> 0.04827586206896552, "MIN" -> 
        0.020689655172413793`, "NYC" -> 0.11724137931034483`, "SAC" -> 
        0.03793103448275862, "SAN" -> 0.04827586206896552, "SAO" -> 
        0.07241379310344828, "TOK" -> 0.12068965517241378`, "VIE" -> 
        0.05172413793103448, "ZRH" -> 0.03793103448275862]], "LabelSplitter" -> 
    MachineLearning`MLProcessor["FeatureLabelSplit", 
      Association[
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {16, 17}, 0., {
      1, {{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {{2}, {
        3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {
        15}, {16}, {17}}}, {1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
       1., 1., 1., 1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["LogProbabilitiesFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association["Weights" -> CompressedData["
1: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
CMT6KCEKJQ2ZSUETxX1UIPmXEaBf4Mz+D7l8HoU=
            "], "Biases" -> 
           RawArray[
             "Real32",{-0.3915674686431885, -0.0972532257437706, \
-0.4820469617843628, -0.5358399748802185, -0.048466477543115616`, \
-0.05405186116695404, -0.03546511009335518, -0.4829047620296478, \
-0.683978796005249, 
             0.02597682736814022, -0.45980462431907654`, -0.5189401507377625, \
-0.4777408540248871, 0.2857743203639984, -0.5605059266090393}]], "Parameters" -> 
         Association[
          "OutputDimensions" -> {15}, "$OutputSize" -> 15, "$InputSize" -> 45,
            "$InputDimensions" -> {45}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{45}, NeuralNetworks`AtomT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]]], 
        Association["Version" -> "12.3.3", "Unstable" -> False]], "Processor" -> 
      MachineLearning`MLProcessor["FirstValues", 
        Association[
        "Info" -> Association["Weight" -> 1, "Type" -> "NumericalVector"], 
         "Key" -> "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
         False, "Missing" -> "Allowed"]], "Calibrator" -> None, "Method" -> 
      "LogisticRegression", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 1., "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "LBFGS", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject["16953392-c54b-4f4c-ad98-520a4c2929b0"], 
      "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 0.112831`5.503973430725667, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> Around[0.6724368371203208, 0.2056556768672622], 
         "Accuracy" -> Around[0.8048399642833427, 0.07548526311581037], 
         "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
         "ModelMemory" -> 12032, "ModelUtility" -> -0.35568736762596254`, 
         "TrainingSize" -> 219, "TrainingTime" -> 0.03162277660168379, 
         "TrainingMemory" -> 589536, "ExperimentCount" -> 1, 
         "MeanCrossEntropyHistory" -> {
           Around[0.6724368371203208, 0.14542052370235048`]}, 
         "AccuracyHistory" -> {
           Around[0.8048399642833427, 0.05337614142884029]}, 
         "Configuration" -> {
          "LogisticRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           1., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 274], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association[]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.01], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.853814757576224, 0.1900826896347444], "Accuracy" -> 
              Around[0.3490602170613242, 0.04145356430540979], 
              "EvaluationTime" -> 5.095804094888363*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.7550549149974857`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 370752, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.853814757576224, 0.13440875882690562`]}, 
              "AccuracyHistory" -> {
                Around[0.3490602170613242, 0.02931209642470788]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.855846477703923, 0.2759386447015621], "Accuracy" -> 
              Around[0.6856613280106006, 0.04371840404109718], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.3408095118349652`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 407648, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.855846477703923, 0.19511808685989995`]}, 
              "AccuracyHistory" -> {
                Around[0.6856613280106006, 0.030913579960113177`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.2041932645230566`, 0.6070715423724365], "Accuracy" -> 
              Around[0.7869828214261997, 0.07798335266906742], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -0.9750358479413338, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 589632, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.2041932645230566`, 0.42926440427692636`]}, 
              "AccuracyHistory" -> {
                Around[0.7869828214261997, 0.055142557491959614`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[1.2041932645230566`, 0.6070715423724365], "ModelMemory" -> 
             12032, "TrainingMemory" -> 589632, "TrainingTime" -> 
             0.05137987804620134], "Index" -> 1], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^-6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[4.794722807263986, 0.3961182467829883], "Accuracy" -> 
              Around[0.3490602170613242, 0.04145356430540979], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -2.277068916040677, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 370800, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[4.794722807263986, 0.2800978984519773]}, 
              "AccuracyHistory" -> {
                Around[0.3490602170613242, 0.02931209642470788]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[3.7138917091299573`, 0.6406877293451818], "Accuracy" -> 
              Around[0.6723389185095068, 0.04420250462620854], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -2.039165625711666, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 407800, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.7138917091299573`, 0.45303463804298943`]}, 
              "AccuracyHistory" -> {
                Around[0.6723389185095068, 0.031255890766621795`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 4.6759061797229994`*^-6, "MeanCrossEntropy" -> 
             Around[3.7138917091299573`, 0.6406877293451818], "ModelMemory" -> 
             12032, "TrainingMemory" -> 407800, "TrainingTime" -> 
             0.07462281057983607], "Index" -> 2], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.72801145787693, 0.008058649293090324], "Accuracy" -> 
              Around[0.3750954328657278, 0.042089769030688395`], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.6973285196086012`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              244952, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.72801145787693, 0.005698325562348346]}, 
              "AccuracyHistory" -> {
                Around[0.3750954328657278, 0.029761961100175302`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.5528599902343805`, 0.017984772901374502`], "Accuracy" -> 
              Around[0.6362015627456769, 0.045352141825400406`], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.6317872408097607`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 395112, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.5528599902343805`, 0.012717154876661968`]}, 
              "AccuracyHistory" -> {
                Around[0.6362015627456769, 0.032068807026074675`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.9840546120476947`, 0.0851665186181672], "Accuracy" -> 
              Around[0.7691256785690568, 0.08025986664513078], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.3868559384987051`, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 589632, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.9840546120476947`, 0.06022182284495637]}, 
              "AccuracyHistory" -> {
                Around[0.7691256785690568, 0.05675229596189997]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[1.9840546120476947`, 0.0851665186181672], "ModelMemory" -> 
             12032, "TrainingMemory" -> 589632, "TrainingTime" -> 
             0.04142725489651255], "Index" -> 3], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[3.7391580365421153`, 0.29016817420222574`], "Accuracy" -> 
              Around[0.3490602170613242, 0.04145356430540979], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -2.027426706074269, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 370864, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.7391580365421153`, 0.20517988366291323`]}, 
              "AccuracyHistory" -> {
                Around[0.3490602170613242, 0.02931209642470788]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.729134373136066, 0.45304479871029113`], "Accuracy" -> 
              Around[0.6814632264997593, 0.043861929086038275`], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.7298108109687336`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 407488, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.729134373136066, 0.3203510493493413]}, 
              "AccuracyHistory" -> {
                Around[0.6814632264997593, 0.03101506749266113]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 4.6759061797229994`*^-6, "MeanCrossEntropy" -> 
             Around[2.729134373136066, 0.45304479871029113`], "ModelMemory" -> 
             12032, "TrainingMemory" -> 407488, "TrainingTime" -> 
             0.07462281057983607], "Index" -> 4], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.1], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.543359751476273, 0.1438952164977796], "Accuracy" -> 
              Around[0.3490602170613242, 0.04145356430540979], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.6379027150823502`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 370872, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.543359751476273, 0.10174928336588632`]}, 
              "AccuracyHistory" -> {
                Around[0.3490602170613242, 0.02931209642470788]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.5383219326577704`, 0.19857818953791578`], "Accuracy" -> 
              Around[0.6895811299277529, 0.043595399431846274`], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.1493469779878978`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 407776, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5383219326577704`, 0.14041598441800776`]}, 
              "AccuracyHistory" -> {
                Around[0.6895811299277529, 0.03082660256679466]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.8415479491426465, 0.3615168608974386], "Accuracy" -> 
              Around[0.8048399642833427, 0.07548526311581037], 
              "EvaluationTime" -> 7.238312191881762*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -0.6030775605356818, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 643600, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8415479491426465, 0.25563102385385267`]}, 
              "AccuracyHistory" -> {
                Around[0.8048399642833427, 0.05337614142884029]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 7.238312191881762*^-6, "MeanCrossEntropy" -> 
             Around[0.8415479491426465, 0.3615168608974386], "ModelMemory" -> 
             12032, "TrainingMemory" -> 643600, "TrainingTime" -> 
             0.11933432922934774`], "Index" -> 5], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7682928275547583`, 0.005730830086532028], "Accuracy" -> 
              Around[0.3714027446911445, 0.04200878889273935], 
              "EvaluationTime" -> 4.6042506446879045`*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.7118097170902455`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 157128, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7682928275547583`, 0.004052308816014686]}, 
              "AccuracyHistory" -> {
                Around[0.3714027446911445, 0.029704699495490112`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.768290235913661, 0.0061949799423099815`], "Accuracy" -> 
              Around[0.6362015627456769, 0.045352141825400406`], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.7118423002446672`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 193944, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.768290235913661, 0.004380512326522035]}, 
              "AccuracyHistory" -> {
                Around[0.6362015627456769, 0.032068807026074675`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.765489893727688, 0.01589575618535692], "Accuracy" -> 
              Around[0.715554249997628, 0.08592765691148695], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.71153166348949, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 375720, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.765489893727688, 0.011239996990753886`]}, 
              "AccuracyHistory" -> {
                Around[0.715554249997628, 0.06076002889358353]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[2.765489893727688, 0.01589575618535692], "ModelMemory" -> 
             12032, "TrainingMemory" -> 375720, "TrainingTime" -> 
             0.016247744052767826`], "Index" -> 6], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.510641903363816, 0.042311002372757596`], "Accuracy" -> 
              Around[0.37837013130708946`, 0.042124172494882775`], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.6170682703720272`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 370688, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.510641903363816, 0.029918396696576997`]}, 
              "AccuracyHistory" -> {
                Around[0.37837013130708946`, 0.029786288023003458`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.8212846721845606`, 0.07237137097188401], "Accuracy" -> 
              Around[0.6553274138253069, 0.04469674607863155], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.3006229376275802`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 407728, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.8212846721845606`, 0.05117428717798644]}, 
              "AccuracyHistory" -> {
                Around[0.6553274138253069, 0.03160537224917359]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.9501054644448741, 0.1341870114900354], "Accuracy" -> 
              Around[0.8584113928547713, 0.06640088280568256], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -0.6698378410382527, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 589392, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.9501054644448741, 0.09488454577176118]}, 
              "AccuracyHistory" -> {
                Around[0.8584113928547713, 0.046952514508671356`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[0.9501054644448741, 0.1341870114900354], "ModelMemory" -> 
             12032, "TrainingMemory" -> 589392, "TrainingTime" -> 
             0.05137987804620134], "Index" -> 7], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[3.2647463519296447`, 0.23903977709424093`], "Accuracy" -> 
              Around[0.3490602170613242, 0.04145356430540979], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.8908845322579504`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 370872, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.2647463519296447`, 0.1690266473566585]}, 
              "AccuracyHistory" -> {
                Around[0.3490602170613242, 0.02931209642470788]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.2674449263243455`, 0.3619277274658009], "Accuracy" -> 
              Around[0.6765438985925114, 0.0440681400668251], 
              "EvaluationTime" -> 5.136085032730923*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.5432434261349413`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 407672, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.2674449263243455`, 0.25592155039050446`]}, 
              "AccuracyHistory" -> {
                Around[0.6765438985925114, 0.031160880675530623`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.136085032730923*^-6, "MeanCrossEntropy" -> 
             Around[2.2674449263243455`, 0.3619277274658009], "ModelMemory" -> 
             12032, "TrainingMemory" -> 407672, "TrainingTime" -> 
             0.07462281057983607], "Index" -> 8], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.3875412532797085`, 0.09842673750786712], "Accuracy" -> 
              Around[0.35647871374308254`, 0.04164649596223686], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.571640243188745, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 370784, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.3875412532797085`, 0.06959821354188114]}, 
              "AccuracyHistory" -> {
                Around[0.35647871374308254`, 0.029448519707555854`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.4212631455722227`, 0.1324468290123754], "Accuracy" -> 
              Around[0.7082910678701831, 0.04277454731208894], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.0631773086674117`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 407560, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.4212631455722227`, 0.0936540509413058]}, 
              "AccuracyHistory" -> {
                Around[0.7082910678701831, 0.030246172466562898`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.6724368371203208, 0.2056556768672622], "Accuracy" -> 
              Around[0.8048399642833427, 0.07548526311581037], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -0.35568736762596254`,
               "TrainingSize" -> 219, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 589536, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.6724368371203208, 0.14542052370235048`]}, 
              "AccuracyHistory" -> {
                Around[0.8048399642833427, 0.05337614142884029]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[0.6724368371203208, 0.2056556768672622], "ModelMemory" -> 
             12032, "TrainingMemory" -> 589536, "TrainingTime" -> 
             0.05951719296184112], "Index" -> 9], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.00001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[3.222298851709866, 0.5474273156970713], "Accuracy" -> 
              Around[0.6814632264997593, 0.043861929086038275`], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.8966729376425033`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 407544, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.222298851709866, 0.387089567136148]}, 
              "AccuracyHistory" -> {
                Around[0.6814632264997593, 0.03101506749266113]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 4.6759061797229994`*^-6, "MeanCrossEntropy" -> 
             Around[3.222298851709866, 0.5474273156970713], "ModelMemory" -> 
             12032, "TrainingMemory" -> 407544, "TrainingTime" -> 
             0.07462281057983607], "Index" -> 10], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7680701515621218`, 0.006193620310732874], "Accuracy" -> 
              Around[0.6362015627456769, 0.045352141825400406`], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.7117627325542264`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 206632, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7680701515621218`, 0.004379550921813947]}, 
              "AccuracyHistory" -> {
                Around[0.6362015627456769, 0.032068807026074675`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7644609096940043`, 0.01587965455007484], "Accuracy" -> 
              Around[0.715554249997628, 0.08592765691148695], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.711158777888862, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 388416, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7644609096940043`, 0.011228611415257734`]}, 
              "AccuracyHistory" -> {
                Around[0.715554249997628, 0.06076002889358353]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[2.7644609096940043`, 0.01587965455007484], "ModelMemory" -> 
             12032, "TrainingMemory" -> 388416, "TrainingTime" -> 
             0.016247744052767826`], "Index" -> 11], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7658711097146, 0.006182934297484605], "Accuracy" -> 
              Around[0.6362015627456769, 0.045352141825400406`], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.7109675687014176`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 218888, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7658711097146, 0.004371994769382246]}, 
              "AccuracyHistory" -> {
                Around[0.6362015627456769, 0.032068807026074675`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7542062831396343`, 0.015777048117995643`], "Accuracy" -> 
              Around[0.715554249997628, 0.08592765691148695], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.707439262082679, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 400736, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7542062831396343`, 0.011156057711341176`]}, 
              "AccuracyHistory" -> {
                Around[0.715554249997628, 0.06076002889358353]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[2.7542062831396343`, 0.015777048117995643`], 
             "ModelMemory" -> 12032, "TrainingMemory" -> 400736, 
             "TrainingTime" -> 0.01788145295520871], "Index" -> 12], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7440753479841873`, 0.0063601686753534245`], "Accuracy" -> 
              Around[0.6362015627456769, 0.045352141825400406`], 
              "EvaluationTime" -> 4.6759061797229994`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.703072564542894, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 244072, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7440753479841873`, 0.004497318399832667]}, 
              "AccuracyHistory" -> {
                Around[0.6362015627456769, 0.032068807026074675`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.6551946333463, 0.019696830750709816`], "Accuracy" -> 
              Around[0.715554249997628, 0.08592765691148695], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 12032, "ModelUtility" -> -1.6711654536315868`, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 451168, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.6551946333463, 0.013927762591710626`]}, 
              "AccuracyHistory" -> {
                Around[0.715554249997628, 0.06076002889358353]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[2.6551946333463, 0.019696830750709816`], "ModelMemory" -> 
             12032, "TrainingMemory" -> 451168, "TrainingTime" -> 
             0.023694221289325083`], "Index" -> 13]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LogisticRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 13], 
        Association[]], "MaxTrainingSize" -> 274, 
      "PreprocessorEvaluationTime" -> 3.48046875*^-6, "PreprocessorMemory" -> 
      59784, "InputDimension" -> 45, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -2.64454033571778, "VariableBudget" -> True,
       "CheckpointingInfo" -> Association["Checkpointing" -> False], 
      "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
      "LastReportingTime" -> 3.909635809369938`16.34471129301426*^9, 
      "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.196, "ElapsedTimes" -> 
          0.18592999999999998`, "ExperimentCounts" -> 9], 
         Association[
         "TrainingSizes" -> 50, "TimeBudgets" -> 0.27999999999999997`, 
          "ElapsedTimes" -> 0.282496, "ExperimentCounts" -> 13], 
         Association[
         "TrainingSizes" -> 219, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.3810299999999999, "ExperimentCounts" -> 9]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], 
        Association[]]], "AnomalyDetector" -> None, "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> CompressedData["
1:eJwBeQGG/iFib1JlAgAAAAEAAAAtAAAAhEokcCRTZcC4NpRBI4oFQAJQOG7V
qCLAWNQrroIiI8AAGN3QBWayv/yWd4l1CzrAU83hpVHILcBWW1WH9vwrQG5Q
7NGqmzxAxem0dQ7dEED7D9AZBZ05wFqHmeXd/iRA0DFJB6YuJcBK4SRHtfsU
wGaoKFAL9A1AwawnkZr9IMCu3TXAc4gjQJ3v2dZ4ASFA7zESUNRfDUB0874k
KJ7rP7FSyA5fFAHAWnp20k+SIEAneNvV/QkYwDLBy5nnnhnAg3GMNjn60j88
ULzjFyMWwJaOa+jYjfC/3qDqWgSEEMA+MMYeUPT4P+qkLRbWtxtAx34MlHmi
JUA7WsZ2v3wDQKjX0KVQlArAafi4WUEREEBiGcgfo64DwAoOebC/5AHAREYX
nj6OIcDwMqU3RvjGP2B/1OPIqdE/hARyMIaYAcDSI/AjtBcQQOk0E+VxefI/
4o/PuXtRLMAKJWBxpYkRwKbKtW++eg5AOEasiA==
            "], "ID" -> 
           38069825954868691]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 1.48003, 
      "MaxTrainingMemory" -> 1098176, "DataMemory" -> 333296, 
      "FunctionMemory" -> 251592, "LanguageVersion" -> {12.3, 0}, "Date" -> 
      DateObject[{2023, 11, 22, 9, 56, 50.01758`8.451697650960154}, "Instant",
         "Gregorian", -6.], "ProcessorCount" -> 6, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8949760131875343`*^9, 3.894976050756131*^9, 3.89497609289933*^9, 
   3.894976325846735*^9, {3.89497635689511*^9, 3.8949765743105097`*^9}, 
   3.8949766079531145`*^9, {3.8949767282837486`*^9, 3.894976795424017*^9}, {
   3.894977267359187*^9, 3.894977344973667*^9}, {3.8949777754107943`*^9, 
   3.894977817092506*^9}, {3.8949778489784193`*^9, 3.8949779088620186`*^9}, 
   3.8949779759657745`*^9, {3.894978013575302*^9, 3.8949781525766783`*^9}, 
   3.8949782458103104`*^9, {3.8949783699410915`*^9, 3.894978399927422*^9}, {
   3.8949784305548744`*^9, 3.8949784891204367`*^9}, {3.894978523900886*^9, 
   3.894978747528761*^9}, 3.8949810577307205`*^9, 3.894981183950405*^9, 
   3.89498121562092*^9, {3.8949813646908693`*^9, 3.8949814393810143`*^9}, {
   3.894981501936226*^9, 3.8949815555915046`*^9}, 3.8949817079973316`*^9, 
   3.894981770902502*^9, 3.894981825827469*^9, 3.8949885281896286`*^9, 
   3.894989353285486*^9, {3.8949894504272957`*^9, 3.8949894623106823`*^9}, 
   3.894989710312505*^9, 3.8949898398828683`*^9, 3.894989968930396*^9, 
   3.8949900311013975`*^9, 3.894990214415351*^9, 3.8949903782263556`*^9, 
   3.8949904398485503`*^9, 3.8949905116901307`*^9, {3.894991372157338*^9, 
   3.8949913943029375`*^9}, 3.895059569496647*^9, 3.895059796369081*^9, 
   3.895059918159177*^9, 3.895063774750496*^9, 3.9058617498412647`*^9, 
   3.9058690616473513`*^9, 3.905870651767017*^9, 3.9058710368534803`*^9, 
   3.9058717060634117`*^9, 3.905872011600554*^9, 3.9058722466926613`*^9, 
   3.905874246419717*^9, 3.905875338109364*^9, 3.905960215242873*^9, 
   3.905963154247016*^9, 3.906038574238501*^9, 3.9061335047777157`*^9, 
   3.906134028668985*^9, 3.90613631259433*^9, 3.906139040839099*^9, {
   3.906140307082334*^9, 3.906140506309434*^9}, {3.906140551575758*^9, 
   3.906140652448863*^9}, {3.906141104578415*^9, 3.9061411246091423`*^9}, 
   3.906141609349943*^9, {3.906141801583254*^9, 3.906141849396772*^9}, {
   3.906142032829835*^9, 3.90614204316348*^9}, 3.9061426387394333`*^9, {
   3.9061426867809668`*^9, 3.906142776144505*^9}, 3.90614315221828*^9, 
   3.906208771067359*^9, 3.906209038493417*^9, 3.906213675666217*^9, 
   3.906215570624316*^9, {3.906224502016786*^9, 3.9062245188431664`*^9}, {
   3.906224561517611*^9, 3.906224597929757*^9}, {3.9062248695234327`*^9, 
   3.906224924407167*^9}, {3.906225122402647*^9, 3.9062251383409243`*^9}, 
   3.906225809718422*^9, {3.906226080557686*^9, 3.906226091602436*^9}, {
   3.906226294714205*^9, 3.9062263575319967`*^9}, 3.908628480209277*^9, 
   3.908629228055678*^9, 3.908629421960616*^9, 3.908629527196763*^9, 
   3.908634678242043*^9, {3.9086347907929087`*^9, 3.90863480640073*^9}, 
   3.9086349113675947`*^9, {3.908635061026689*^9, 3.908635104150735*^9}, {
   3.908635517381846*^9, 3.908635552753914*^9}, 3.908637934844515*^9, {
   3.9086380498764143`*^9, 3.90863806292909*^9}, 3.9086381904393272`*^9, 
   3.908638243611443*^9, {3.90863834438443*^9, 3.908638357265757*^9}, 
   3.908638429942196*^9, 3.9086384763266573`*^9, 3.9086386112510767`*^9, {
   3.9086391462587976`*^9, 3.9086391595966473`*^9}, 3.908639267862*^9, 
   3.908639318744278*^9, 3.908639371747031*^9, 3.908639447687264*^9, 
   3.9086397095350523`*^9, 3.908640074369309*^9, 3.9086401484321613`*^9, 
   3.9086401947461233`*^9, 3.908640303586234*^9, 3.908641336509564*^9, 
   3.9086414039724693`*^9, 3.908641464081873*^9, 3.908641497038748*^9, 
   3.908641607835676*^9, 3.908641668008608*^9, 3.908641749230834*^9, 
   3.9086419629269114`*^9, 3.908642097316493*^9, 3.908642161967832*^9, {
   3.9086427767672997`*^9, 3.908642793528236*^9}, 3.908642856549163*^9, 
   3.90864339224536*^9, 3.908643533030624*^9, 3.9086436267064047`*^9, 
   3.9086436676222467`*^9, 3.908643722261322*^9, 3.9086460219506063`*^9, 
   3.9086460694535313`*^9, {3.9086461520173483`*^9, 3.908646170546083*^9}, 
   3.908646224746907*^9, 3.9086462888335238`*^9, 3.9086464020299683`*^9, 
   3.908646528203455*^9, 3.908646605837895*^9, {3.908646677043647*^9, 
   3.908646686328545*^9}, {3.908646746052417*^9, 3.9086467581240997`*^9}, {
   3.90864693891469*^9, 3.908646948590592*^9}, 3.908646996719913*^9, {
   3.9086471385986137`*^9, 3.90864716294874*^9}, {3.908647194615521*^9, 
   3.908647209708967*^9}, {3.908647259269022*^9, 3.9086472759586487`*^9}, {
   3.908648223776795*^9, 3.908648253445301*^9}, 3.908648428152603*^9, {
   3.908648474995564*^9, 3.9086484981830397`*^9}, 3.908648734276415*^9, 
   3.908648813945842*^9, {3.908649517218751*^9, 3.90864952877455*^9}, 
   3.908649671307433*^9, 3.908650153529544*^9, 3.908650361052698*^9, 
   3.9086504123862762`*^9, 3.908650765273678*^9, 3.908651114570861*^9, 
   3.908651232145184*^9, 3.908651402938555*^9, 3.908651475614214*^9, 
   3.908651593849173*^9, 3.9086516366955843`*^9, 3.908651677972665*^9, 
   3.9086517149636106`*^9, 3.908653972100717*^9, 3.9087095374481487`*^9, 
   3.908725260566292*^9, 3.908894115502141*^9, 3.908986083861245*^9, {
   3.908986145668866*^9, 3.908986173241313*^9}, 3.908986245442943*^9, {
   3.908986280049593*^9, 3.908986536742852*^9}, {3.908986573583984*^9, 
   3.908986795487788*^9}, {3.908986883144176*^9, 3.908986983270102*^9}, {
   3.9089870397470293`*^9, 3.9089871426887083`*^9}, 3.908987178245614*^9, {
   3.908987216747307*^9, 3.908987247810912*^9}, {3.9089872803585377`*^9, 
   3.908987592909259*^9}, 3.908987879147118*^9, {3.908987983222677*^9, 
   3.908987996479967*^9}, {3.908988072976966*^9, 3.908988086552902*^9}, 
   3.9089881191634274`*^9, {3.908988159247645*^9, 3.908988267248274*^9}, {
   3.908988328545609*^9, 3.9089884685291348`*^9}, 3.9089885056951447`*^9, {
   3.9089885369948072`*^9, 3.908988762652939*^9}, {3.908988797162376*^9, 
   3.908988830724592*^9}, 3.908988861875929*^9, {3.908988895471574*^9, 
   3.908988924542302*^9}, 3.9089890998359137`*^9, {3.908989152590568*^9, 
   3.908989227421967*^9}, {3.9089892803217773`*^9, 3.908989313889884*^9}, {
   3.908989417516942*^9, 3.9089894898252583`*^9}, 3.90898953463111*^9, {
   3.908989581622901*^9, 3.9089897356972446`*^9}, 3.908989876672701*^9, {
   3.908989998995886*^9, 3.908990041044602*^9}, {3.9089901081342373`*^9, 
   3.90899017263204*^9}, 3.909068983841774*^9, {3.909069014244905*^9, 
   3.9090690401994343`*^9}, {3.909069445587358*^9, 3.909069492972357*^9}, 
   3.909069549687289*^9, {3.90906959495347*^9, 3.9090696541394167`*^9}, {
   3.9090708804143*^9, 3.9090710626351624`*^9}, {3.909071158283298*^9, 
   3.909071203290147*^9}, 3.909071400545889*^9, 3.909071631627592*^9, 
   3.909071902042871*^9, 3.90907199978798*^9, {3.909072070258354*^9, 
   3.9090720815284433`*^9}, {3.9090721447463017`*^9, 3.909072275388193*^9}, {
   3.9090723999788094`*^9, 3.909072432152443*^9}, {3.909072504005103*^9, 
   3.909072617918482*^9}, 3.909072651702085*^9, {3.9090745570999393`*^9, 
   3.90907461784093*^9}, {3.909074650733828*^9, 3.909074736332514*^9}, {
   3.9090747702502737`*^9, 3.909074800190727*^9}, 3.9090749666522493`*^9, {
   3.909075033315168*^9, 3.909075075804302*^9}, {3.909075123871119*^9, 
   3.9090752577418013`*^9}, 3.9090756411401377`*^9, {3.909075774402742*^9, 
   3.90907582512492*^9}, 3.9090760728947887`*^9, 3.9090761532966633`*^9, {
   3.909076208907446*^9, 3.909076388787146*^9}, 3.909076432433466*^9, {
   3.909076464850357*^9, 3.909076636658609*^9}, {3.909076672736709*^9, 
   3.9090766827728157`*^9}, {3.909076724887821*^9, 3.909076794727231*^9}, {
   3.909076838884838*^9, 3.909076848290629*^9}, {3.909076882331233*^9, 
   3.90907695935089*^9}, {3.909077036721574*^9, 3.909077245766865*^9}, 
   3.9090773888520613`*^9, 3.9090795429454327`*^9, 3.909154635460384*^9, 
   3.9094282879166126`*^9, 3.909479974332879*^9, 3.9094812927274857`*^9, 
   3.909593353184596*^9, {3.909594396898389*^9, 3.909594410286104*^9}, 
   3.909594537844445*^9, {3.90959465127334*^9, 3.909594688612967*^9}, {
   3.909595307797784*^9, 3.90959534061766*^9}, 3.909595539653658*^9, 
   3.909655109767489*^9, 3.909657410033628*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"48776210-6bf4-4058-aa39-6f9cef8d008f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sum", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CL", "[", 
        RowBox[{"LtestR", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "==", 
       RowBox[{"LtestR", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{"sum", "=", 
       RowBox[{"sum", "+", "1"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "LtestR", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"sum", "/", 
   RowBox[{"Length", "[", "LtestR", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8949745201109586`*^9, 3.894974667307175*^9}, {
  3.894975753357416*^9, 3.8949757537793293`*^9}, {3.909074628861073*^9, 
  3.909074643018569*^9}, {3.9090750371005363`*^9, 3.909075048430957*^9}, {
  3.9090761625048113`*^9, 3.9090761826053*^9}, {3.909076703361463*^9, 
  3.909076716291977*^9}, {3.909076778882786*^9, 3.909076826486732*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"edf3b692-4a99-48a5-810a-214fa2840c28"],

Cell[BoxData["0.8791208791208791`"], "Output",
 CellChangeTimes->{{3.8949746379694557`*^9, 3.8949746683070965`*^9}, 
   3.894974714296039*^9, 3.8949747464405255`*^9, 3.894974813580809*^9, 
   3.894975513111385*^9, 3.894975695405199*^9, {3.894975732504508*^9, 
   3.8949757595902443`*^9}, {3.8949759524144526`*^9, 3.894975977472495*^9}, {
   3.8949760243364964`*^9, 3.894976052834092*^9}, 3.8949760966490726`*^9, 
   3.8949763282986608`*^9, {3.89497635853148*^9, 3.8949765757010202`*^9}, 
   3.894976609859229*^9, {3.8949767296742563`*^9, 3.8949767969238935`*^9}, {
   3.894977269952736*^9, 3.894977346411047*^9}, {3.8949777772231455`*^9, 
   3.8949778187017517`*^9}, {3.8949778504158163`*^9, 3.8949779105493803`*^9}, 
   3.8949779774344025`*^9, {3.894978015028329*^9, 3.8949781539515624`*^9}, 
   3.8949782492231755`*^9, {3.8949783748313575`*^9, 3.8949784013491983`*^9}, {
   3.894978432657671*^9, 3.894978490385973*^9}, {3.894978526105863*^9, 
   3.894978660079212*^9}, {3.894978691225684*^9, 3.894978749013032*^9}, 
   3.8949810593107786`*^9, 3.894981185440728*^9, 3.8949812186609898`*^9, {
   3.89498136686084*^9, 3.8949814408614845`*^9}, {3.8949815034913015`*^9, 
   3.8949815572214813`*^9}, 3.894981709342111*^9, 3.8949818273029795`*^9, 
   3.8949885302155924`*^9, 3.8949893554474525`*^9, {3.894989451894272*^9, 
   3.8949894638931026`*^9}, 3.894989712349743*^9, 3.894989841540561*^9, 
   3.894989970356269*^9, 3.8949900325365267`*^9, 3.8949902159578485`*^9, 
   3.8949903797235136`*^9, 3.8949904421390877`*^9, 3.8949905141597996`*^9, {
   3.8949913760357127`*^9, 3.894991395853874*^9}, 3.895059573229224*^9, 
   3.895059799931966*^9, 3.8950599193904877`*^9, 3.895063776924782*^9, 
   3.905861751537361*^9, 3.9058690636323223`*^9, 3.905870653097739*^9, 
   3.9058710386297894`*^9, 3.9058717139817457`*^9, {3.905871997381583*^9, 
   3.905872012671144*^9}, 3.9058722479569063`*^9, 3.905874246762402*^9, 
   3.905875338453117*^9, 3.905960215571535*^9, 3.905963154636931*^9, 
   3.906038574645685*^9, 3.906133506388949*^9, 3.9061340306055393`*^9, 
   3.906136314198906*^9, 3.9061390412766647`*^9, {3.906140310593902*^9, 
   3.9061405076553373`*^9}, {3.906140553590271*^9, 3.906140653835095*^9}, {
   3.9061411062474947`*^9, 3.906141125711791*^9}, 3.906141610712469*^9, {
   3.9061418029056664`*^9, 3.9061418504457407`*^9}, 3.9061420339893208`*^9, 
   3.906142639975307*^9, {3.9061426879862823`*^9, 3.9061427772493668`*^9}, 
   3.9061431532759438`*^9, 3.906208771349782*^9, 3.906209038637439*^9, 
   3.906213676020233*^9, 3.9062155709308453`*^9, {3.906224503188418*^9, 
   3.9062245198884583`*^9}, {3.906224562973864*^9, 3.90622459915038*^9}, {
   3.906224870792263*^9, 3.906224924592749*^9}, {3.9062251241398706`*^9, 
   3.906225139714961*^9}, {3.906225400613184*^9, 3.9062254183277073`*^9}, {
   3.9062254560767403`*^9, 3.906225480365121*^9}, 3.906225754079657*^9, {
   3.9062257943857517`*^9, 3.906225818138824*^9}, 3.90622586511876*^9, {
   3.906225908340238*^9, 3.9062259614172373`*^9}, {3.906226001081544*^9, 
   3.906226026707201*^9}, {3.906226084341406*^9, 3.906226116493346*^9}, {
   3.9062262974010067`*^9, 3.90622635874541*^9}, 3.90862848148619*^9, 
   3.90862923088389*^9, 3.908629423272492*^9, 3.908629527376999*^9, 
   3.908634679393688*^9, {3.908634791884404*^9, 3.9086348074429483`*^9}, 
   3.908634913010603*^9, {3.908635062085086*^9, 3.908635105131652*^9}, {
   3.9086355185051413`*^9, 3.908635553809016*^9}, 3.908637936181571*^9, {
   3.908638052372129*^9, 3.9086380638222446`*^9}, 3.9086381917813063`*^9, 
   3.9086382445955772`*^9, {3.908638345781371*^9, 3.908638358200136*^9}, 
   3.908638430950502*^9, 3.908638480292172*^9, 3.908638613455872*^9, {
   3.9086391481680107`*^9, 3.908639160558015*^9}, 3.908639269021122*^9, 
   3.908639319698683*^9, 3.908639372826339*^9, 3.908639449884594*^9, 
   3.90863971262136*^9, 3.9086400753699007`*^9, 3.90864014984057*^9, 
   3.908640195721047*^9, 3.908640305193346*^9, 3.908641337624545*^9, 
   3.908641404970458*^9, 3.908641465416378*^9, 3.9086414981377497`*^9, 
   3.908641608867896*^9, 3.908641668915759*^9, 3.908641750536179*^9, 
   3.908641964321022*^9, 3.908642098289995*^9, 3.90864216309562*^9, {
   3.908642777738926*^9, 3.908642794506186*^9}, 3.908642857546213*^9, 
   3.908643393465396*^9, 3.9086435340372334`*^9, 3.90864363511318*^9, 
   3.908643668774961*^9, 3.908643723242519*^9, 3.908646023098963*^9, 
   3.908646070583329*^9, {3.908646152888195*^9, 3.908646171400585*^9}, 
   3.908646225686677*^9, {3.908646281648349*^9, 3.90864633052153*^9}, {
   3.908646367801446*^9, 3.9086464030394983`*^9}, 3.908646530020916*^9, 
   3.908646607130514*^9, {3.908646678099979*^9, 3.90864668733132*^9}, {
   3.9086467471621523`*^9, 3.9086467590800543`*^9}, {3.908646939924261*^9, 
   3.908646949677783*^9}, 3.908646997723073*^9, {3.90864713975422*^9, 
   3.908647163843807*^9}, {3.9086471959121933`*^9, 3.908647210725665*^9}, {
   3.90864726018426*^9, 3.908647276949829*^9}, {3.908648224835582*^9, 
   3.9086482543879547`*^9}, 3.9086484291930113`*^9, {3.908648476123324*^9, 
   3.9086484991007547`*^9}, 3.9086487352465763`*^9, 3.9086488148942127`*^9, {
   3.90864951874555*^9, 3.908649529951784*^9}, 3.9086496723719053`*^9, 
   3.9086501548040533`*^9, 3.908650362172977*^9, 3.908650412569397*^9, 
   3.908650765540306*^9, 3.908651115722391*^9, 3.908651233334766*^9, 
   3.908651404068791*^9, 3.908651475895465*^9, 3.908651594863812*^9, 
   3.908651637900798*^9, 3.908651679183694*^9, 3.908651716021297*^9, 
   3.908653972462112*^9, 3.908709538732822*^9, 3.908725261865984*^9, 
   3.908894116901733*^9, 3.9089860868434353`*^9, {3.908986148722436*^9, 
   3.908986175199955*^9}, 3.90898624756872*^9, {3.908986280976618*^9, 
   3.908986538192316*^9}, {3.908986574982128*^9, 3.9089866047073727`*^9}, {
   3.908986637261386*^9, 3.908986797227042*^9}, {3.908986884667659*^9, 
   3.908986983443776*^9}, {3.9089870421425667`*^9, 3.908987128310608*^9}, {
   3.908987168316091*^9, 3.9089871784235287`*^9}, {3.9089872179430304`*^9, 
   3.908987248962266*^9}, {3.908987282968655*^9, 3.9089875943706207`*^9}, 
   3.908987882053544*^9, {3.9089879857220488`*^9, 3.908987999228363*^9}, {
   3.90898807547507*^9, 3.908988089155777*^9}, 3.9089881232514143`*^9, {
   3.908988162246634*^9, 3.908988254637813*^9}, {3.908988331461658*^9, 
   3.908988469931477*^9}, {3.908988508558103*^9, 3.9089887628389883`*^9}, {
   3.908988798853485*^9, 3.9089888319190893`*^9}, {3.908988896701892*^9, 
   3.9089889247251253`*^9}, 3.908989101501639*^9, {3.9089891537632923`*^9, 
   3.908989228539156*^9}, {3.908989281374679*^9, 3.908989314054596*^9}, {
   3.908989417710641*^9, 3.9089894900012074`*^9}, 3.908989534791226*^9, {
   3.908989582763723*^9, 3.908989736694151*^9}, 3.9089898768465157`*^9, {
   3.90898999933666*^9, 3.908990041197529*^9}, {3.908990108289114*^9, 
   3.9089901727773867`*^9}, {3.909068989865094*^9, 3.90906904150241*^9}, {
   3.9090694472617197`*^9, 3.909069494475129*^9}, 3.9090695591247396`*^9, {
   3.909069603525172*^9, 3.909069655235941*^9}, {3.9090708815852547`*^9, 
   3.909071063753834*^9}, {3.909071160110528*^9, 3.90907120453619*^9}, 
   3.9090714017311907`*^9, 3.9090716439668493`*^9, 3.909071909905332*^9, 
   3.90907200120899*^9, {3.909072071544586*^9, 3.909072082877569*^9}, {
   3.909072145905815*^9, 3.9090722766333637`*^9}, {3.90907240129515*^9, 
   3.909072433510832*^9}, {3.909072505171476*^9, 3.90907261817344*^9}, 
   3.9090726534971647`*^9, {3.909074558863469*^9, 3.9090746100129137`*^9}, {
   3.90907464401586*^9, 3.909074672356373*^9}, {3.909074702374588*^9, 
   3.909074737410932*^9}, {3.909074771319427*^9, 3.9090748013812017`*^9}, {
   3.909075050037958*^9, 3.9090750769634857`*^9}, {3.9090751249498243`*^9, 
   3.909075258905368*^9}, 3.90907564232861*^9, {3.909075775474059*^9, 
   3.9090758264454107`*^9}, 3.909076074623481*^9, {3.909076178115432*^9, 
   3.9090763901484623`*^9}, 3.909076440973976*^9, {3.909076472461801*^9, 
   3.9090766380679283`*^9}, {3.909076672991095*^9, 3.909076751927164*^9}, {
   3.909076812908825*^9, 3.909076849718934*^9}, {3.909076884131071*^9, 
   3.909076960665575*^9}, {3.9090770369825478`*^9, 3.909077246014551*^9}, 
   3.909077390193747*^9, 3.9090795442744713`*^9, 3.909154637023389*^9, 
   3.9094282905165653`*^9, 3.909479976586273*^9, 3.909481294990368*^9, 
   3.909593354473325*^9, {3.9095943981336803`*^9, 3.9095944113261347`*^9}, 
   3.909594539113594*^9, {3.909594652921748*^9, 3.909594689805525*^9}, {
   3.909595308999243*^9, 3.909595341711114*^9}, 3.909595540715904*^9, 
   3.909655111675144*^9, 3.9096574111315107`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"34bec59b-7133-4d64-a73b-f338bcb609c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"CL", ",", "LtestR", ",", "\"\<ConfusionMatrixPlot\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.908988974821073*^9, 3.9089890045840597`*^9}, 
   3.909076187734415*^9},
 CellLabel->"In[240]:=",
 CellID->1521394769,ExpressionUUID->"ff1c9f60-37d8-4d41-847f-324c8a00d4b6"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQgGIQGwI+2KPTfRHnOtyd3tlPqmUq5DB7a9+YbiOY8fsF
hrpRmjh6RixX9JwVb+xjq57v/nb5mb3Jw0UV2U8vD7i7hiqNK32Oplv60g+r
RNa5P7wF5cPAwLtruNCj5QZ9aLdmmf45jW/tz+SVz/ob+8p+llvVki1THw64
u4Yb3W67uOS8yRv7X8rs93tvPrHPKu/m8bY+MeDuGm70+UUfNHa8fGvfNq3u
7iG2+/bx+prb18/Mwql+tN4kjx7q4TbU3T9c6YGKl1e5X7k/PXxrr/9tDyvz
qdf2vOG3o/o8ng54eFBKkxqe1Ap/XOaM1oP0oTNVqjqzdryxf3BAzXjlpgf2
ie+OHCt/VjLg7hpu9KraQsdMmbf2+y8cnxF/7oX9FjaGbMO1twfcXcONpnV/
cLQ9AKFH0/PIpGmd/gdb/gIAomtSGQ==
   "], {{0, 0}, {16, 16}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "LIS", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 1.}], 
         Row[{"Row fraction = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "\"BAL\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.5714285714285714`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7272727272727272`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", "BAL", " correctly classified"}], 
         Row[{"Precision = ", 0.5714285714285714}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.7272727272727272}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.14285714285714285`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.125`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "DOH", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.14285714285714285`}], 
         Row[{"Row fraction = ", 0.125}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.14285714285714285`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.25`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "ILR", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.14285714285714285`}], 
         Row[{"Row fraction = ", 0.25}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.14285714285714285`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.16666666666666666`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "ZRH", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.14285714285714285`}], 
         Row[{"Row fraction = ", 0.16666666666666666`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "\"BER\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8333333333333334`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9090909090909091`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", "BER", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.8333333333333334}], 
         Row[{"FScore = ", 0.9090909090909091}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "\"BOG\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", "BOG", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "11", "\" examples of \"", "\"DEN\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9166666666666666`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.9565217391304347`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{11, " examples of ", "DEN", " correctly classified"}], 
         Row[{"Precision = ", 0.9166666666666666}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.9565217391304347}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.08333333333333333`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.125`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "DOH", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.08333333333333333}], 
         Row[{"Row fraction = ", 0.125}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "\"DOH\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.75`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8571428571428571`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", "DOH", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.75}], 
         Row[{"FScore = ", 0.8571428571428571}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.25`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.5`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "AKL", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.25}], 
         Row[{"Row fraction = ", 0.5}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.25`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.16666666666666666`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "BER", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.25}], 
         Row[{"Row fraction = ", 0.16666666666666666`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"ILR\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.5`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.5`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.5`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", "ILR", " correctly classified"}], 
         Row[{"Precision = ", 0.5}], 
         Row[{"Recall = ", 0.5}], 
         Row[{"FScore = ", 0.5}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " correctly classified"}], 
         Row[{"Precision = ", 0.}], 
         Row[{"Recall = ", 0.}], 
         Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"MIN\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "MIN", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["12", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "12", "\" examples of \"", "\"NYC\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9230769230769231`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9600000000000001`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{12, " examples of ", "NYC", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.9230769230769231}], 
         Row[{"FScore = ", 0.9600000000000001}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.14285714285714285`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.5`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "AKL", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.14285714285714285`}], 
         Row[{"Row fraction = ", 0.5}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "\"SAC\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.923076923076923`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", "SAC", " correctly classified"}], 
         Row[{"Precision = ", 0.8571428571428571}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.923076923076923}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.25`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.07692307692307693`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "NYC", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.25}], 
         Row[{"Row fraction = ", 0.07692307692307693}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "\"SAN\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.75`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8571428571428571`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", "SAN", " correctly classified"}], 
         Row[{"Precision = ", 0.75}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.8571428571428571}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "\"SAO\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", "SAO", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["15", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "15", "\" examples of \"", "\"TOK\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.9375`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.967741935483871`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{15, " examples of ", "TOK", " correctly classified"}], 
         Row[{"Precision = ", 0.9375}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.967741935483871}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.0625`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.5`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "VIE", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.0625}], 
         Row[{"Row fraction = ", 0.5}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"VIE\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.5`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.6666666666666666`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "VIE", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.5}], 
         Row[{"FScore = ", 0.6666666666666666}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.16666666666666666`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.25`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "ILR", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.16666666666666666`}], 
         Row[{"Row fraction = ", 0.25}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "\"ZRH\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8333333333333334`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8333333333333334`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8333333333333334`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", "ZRH", " correctly classified"}], 
         Row[{"Precision = ", 0.8333333333333334}], 
         Row[{"Recall = ", 0.8333333333333334}], 
         Row[{"FScore = ", 0.8333333333333334}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 15.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "2", "\" example\"", "\"s\"", "\" of class \"", "\"AKL\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{2, " example", "s", " of class ", "AKL"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 14.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" of class \"", "\"BAL\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " of class ", "BAL"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 13.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "6", "\" example\"", "\"s\"", "\" of class \"", "\"BER\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8333333333333334`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{6, " example", "s", " of class ", "BER"}], 
        Row[{"Recall = ", 0.8333333333333334}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 12.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" of class \"", "\"BOG\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " of class ", "BOG"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 11.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "11", "\" example\"", "\"s\"", "\" of class \"", "\"DEN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{11, " example", "s", " of class ", "DEN"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 10.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "8", "\" example\"", "\"s\"", "\" of class \"", "\"DOH\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.75`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{8, " example", "s", " of class ", "DOH"}], 
        Row[{"Recall = ", 0.75}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 9.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" of class \"", "\"ILR\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.5`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " of class ", "ILR"}], 
        Row[{"Recall = ", 0.5}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 8.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"LIS\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "LIS"}], 
        Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 7.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"MIN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "MIN"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 6.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "13", "\" example\"", "\"s\"", "\" of class \"", "\"NYC\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9230769230769231`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{13, " example", "s", " of class ", "NYC"}], 
        Row[{"Recall = ", 0.9230769230769231}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 5.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "6", "\" example\"", "\"s\"", "\" of class \"", "\"SAC\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{6, " example", "s", " of class ", "SAC"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "3", "\" example\"", "\"s\"", "\" of class \"", "\"SAN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{3, " example", "s", " of class ", "SAN"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "5", "\" example\"", "\"s\"", "\" of class \"", "\"SAO\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{5, " example", "s", " of class ", "SAO"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "15", "\" example\"", "\"s\"", "\" of class \"", "\"TOK\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{15, " example", "s", " of class ", "TOK"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "2", "\" example\"", "\"s\"", "\" of class \"", "\"VIE\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.5`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{2, " example", "s", " of class ", "VIE"}], 
        Row[{"Recall = ", 0.5}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "6", "\" example\"", "\"s\"", "\" of class \"", "\"ZRH\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.8333333333333334`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{6, " example", "s", " of class ", "ZRH"}], 
        Row[{"Recall = ", 0.8333333333333334}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" classified as \"", "\"AKL\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " classified as ", "AKL"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "7", "\" example\"", "\"s\"", "\" classified as \"", "\"BAL\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.5714285714285714`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{7, " example", "s", " classified as ", "BAL"}], 
        Row[{"Precision = ", 0.5714285714285714}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "5", "\" example\"", "\"s\"", "\" classified as \"", "\"BER\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{5, " example", "s", " classified as ", "BER"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" classified as \"", "\"BOG\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " classified as ", "BOG"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "12", "\" example\"", "\"s\"", "\" classified as \"", "\"DEN\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9166666666666666`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{12, " example", "s", " classified as ", "DEN"}], 
        Row[{"Precision = ", 0.9166666666666666}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "6", "\" example\"", "\"s\"", "\" classified as \"", "\"DOH\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{6, " example", "s", " classified as ", "DOH"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" classified as \"", "\"ILR\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.5`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " classified as ", "ILR"}], 
        Row[{"Precision = ", 0.5}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {7.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "0", "\" example\"", "\"\"", "\" classified as \"", "\"LIS\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{0, " example", "", " classified as ", "LIS"}], 
        Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {8.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" classified as \"", "\"MIN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " classified as ", "MIN"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {9.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "12", "\" example\"", "\"s\"", "\" classified as \"", "\"NYC\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{12, " example", "s", " classified as ", "NYC"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "7", "\" example\"", "\"s\"", "\" classified as \"", "\"SAC\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{7, " example", "s", " classified as ", "SAC"}], 
        Row[{"Precision = ", 0.8571428571428571}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {11.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" classified as \"", "\"SAN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.75`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " classified as ", "SAN"}], 
        Row[{"Precision = ", 0.75}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {12.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "5", "\" example\"", "\"s\"", "\" classified as \"", "\"SAO\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{5, " example", "s", " classified as ", "SAO"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {13.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "16", "\" example\"", "\"s\"", "\" classified as \"", "\"TOK\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.9375`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{16, " example", "s", " classified as ", "TOK"}], 
        Row[{"Precision = ", 0.9375}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {14.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" classified as \"", "\"VIE\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " classified as ", "VIE"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {15.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "6", "\" example\"", "\"s\"", "\" classified as \"", "\"ZRH\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8333333333333334`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{6, " example", "s", " classified as ", "ZRH"}], 
        Row[{"Precision = ", 0.8333333333333334}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{15.5, 
       FormBox[
        RotationBox["\"AKL\"", BoxRotation -> 0.], TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["\"BAL\"", BoxRotation -> 0.], TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["\"BER\"", BoxRotation -> 0.], TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["\"BOG\"", BoxRotation -> 0.], TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["\"DEN\"", BoxRotation -> 0.], TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["\"DOH\"", BoxRotation -> 0.], TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["\"ILR\"", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["\"LIS\"", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["\"MIN\"", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["\"NYC\"", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["\"SAC\"", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"SAN\"", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"SAO\"", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"TOK\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"VIE\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"ZRH\"", BoxRotation -> 0.], TraditionalForm]}}, {{15.5, 
       FormBox["2", TraditionalForm]}, {14.5, 
       FormBox["4", TraditionalForm]}, {13.5, 
       FormBox["6", TraditionalForm]}, {12.5, 
       FormBox["4", TraditionalForm]}, {11.5, 
       FormBox["11", TraditionalForm]}, {10.5, 
       FormBox["8", TraditionalForm]}, {9.5, 
       FormBox["4", TraditionalForm]}, {8.5, 
       FormBox["1", TraditionalForm]}, {7.5, 
       FormBox["1", TraditionalForm]}, {6.5, 
       FormBox["13", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {4.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["5", TraditionalForm]}, {2.5, 
       FormBox["15", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["6", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["12", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["12", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["16", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {15.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"AKL\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"BAL\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"BER\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"BOG\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"DEN\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["\"DOH\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["\"ILR\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["\"LIS\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["\"MIN\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["\"NYC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["\"SAC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["\"SAN\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["\"SAO\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["\"TOK\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["\"VIE\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {15.5, 
       FormBox[
        RotationBox["\"ZRH\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12.320281152964093`,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->386.54939813691055`,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.908989005885161*^9, 3.908989103457861*^9, 3.908989156677306*^9, {
   3.908989205324952*^9, 3.908989230310544*^9}, 3.9089893143570547`*^9, {
   3.908989418000437*^9, 3.908989490279271*^9}, 3.908989535054385*^9, {
   3.908989584632678*^9, 3.908989738199003*^9}, 3.908989877135881*^9, {
   3.908989999656287*^9, 3.90899004146647*^9}, {3.908990108573571*^9, 
   3.908990173055254*^9}, {3.9090689952758217`*^9, 3.909069043380352*^9}, {
   3.909069461141354*^9, 3.909069496795683*^9}, 3.9090695616317883`*^9, 
   3.9090696153405313`*^9, 3.9090696474598722`*^9, 3.9090708858092327`*^9, {
   3.909070923711465*^9, 3.9090710653142023`*^9}, 3.909071206639986*^9, 
   3.909071403473228*^9, 3.909071647470302*^9, 3.909071913372663*^9, 
   3.9090720040185823`*^9, {3.9090720742812643`*^9, 3.9090720864955072`*^9}, 
   3.9090721744089117`*^9, {3.909072251874522*^9, 3.90907227864613*^9}, 
   3.909072439257538*^9, 3.909072520223919*^9, 3.909072550581769*^9, 
   3.9090726224724197`*^9, 3.909072657627266*^9, {3.9090746749589252`*^9, 
   3.909074740262051*^9}, {3.909074772774955*^9, 3.9090748031119537`*^9}, {
   3.909075052269184*^9, 3.909075078570484*^9}, 3.909075143411179*^9, 
   3.909075209404737*^9, 3.909075779853346*^9, 3.909076111258622*^9, {
   3.9090761889290247`*^9, 3.909076238340777*^9}, {3.909076347336649*^9, 
   3.909076365334259*^9}, {3.909076499540956*^9, 3.9090765307936363`*^9}, {
   3.909076643624887*^9, 3.909076673479411*^9}, 3.909076852646929*^9, 
   3.9090769548518267`*^9, 3.909077184869422*^9, 3.909077392189324*^9, 
   3.909079546993222*^9, 3.909154639363864*^9, 3.909428294292786*^9, 
   3.9094799792508497`*^9, 3.9094812970335197`*^9, 3.9095933570902643`*^9, 
   3.909594412798491*^9, 3.909594541726989*^9, 3.909594691604661*^9, 
   3.909595348089056*^9, 3.909595542294526*^9, 3.909655113928092*^9, 
   3.9096574127770033`*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"422323d4-2086-4449-ab5f-8867e2a1c997"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"CL", ",", "LtestR", ",", 
   RowBox[{"{", "\"\<Accuracy\>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908989045069436*^9, 3.9089890580968237`*^9}, 
   3.9090724887446737`*^9, 3.909076198489102*^9},
 CellLabel->"In[241]:=",
 CellID->801286459,ExpressionUUID->"f4c3e6cc-c9b4-4e13-9e25-52fce44ee6c9"],

Cell[BoxData[
 RowBox[{"{", "0.8791208791208791`", "}"}]], "Output",
 CellChangeTimes->{{3.90898905259823*^9, 3.9089890587163563`*^9}, 
   3.908989116821003*^9, 3.9089891621396303`*^9, {3.908989209330024*^9, 
   3.908989235055271*^9}, 3.90898931456907*^9, {3.90898941821455*^9, 
   3.90898949048986*^9}, 3.9089895352657433`*^9, {3.908989587337289*^9, 
   3.908989706644307*^9}, 3.908989741974558*^9, 3.908989877361236*^9, {
   3.9089899998879547`*^9, 3.908990041674759*^9}, {3.908990108782062*^9, 
   3.908990173264811*^9}, {3.9090690199086514`*^9, 3.9090690470567007`*^9}, {
   3.909069463365355*^9, 3.909069478169176*^9}, 3.909070889463208*^9, 
   3.909070972870234*^9, {3.9090710401616297`*^9, 3.909071067498761*^9}, 
   3.909071209757613*^9, 3.9090714054582767`*^9, 3.9090716505102377`*^9, 
   3.9090719212683277`*^9, 3.909072007057378*^9, 3.909072088155964*^9, 
   3.909072282378035*^9, 3.909072489751281*^9, 3.9090726248064423`*^9, {
   3.9090746911129847`*^9, 3.909074705988017*^9}, {3.909074756351556*^9, 
   3.909074808126802*^9}, 3.909075080666202*^9, 3.909075145573312*^9, 
   3.909075211983127*^9, {3.909076195191966*^9, 3.90907624042446*^9}, 
   3.9090768581688967`*^9, 3.909077395388043*^9, 3.909079549384453*^9, 
   3.90915464215213*^9, 3.9094283005264764`*^9, 3.909479981596274*^9, 
   3.9094812988861637`*^9, 3.90959335925113*^9, 3.909594414802485*^9, 
   3.9095945433261766`*^9, 3.9095946934896193`*^9, 3.909595350804646*^9, 
   3.909595544062663*^9, 3.909655119390506*^9, 3.909657414417852*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"db1067f4-0518-45f7-89d9-ccaa860bfb59"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"auxGB", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{"dcl", ",", "Last"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.906213866829863*^9, 3.906213896080358*^9}, {
  3.906214570951935*^9, 3.9062145732005653`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"a8c20196-82af-4b21-a4c0-42520c8350e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"r", "=", "1"}], ",", 
    RowBox[{"r", "<=", "nC"}], ",", 
    RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"auxGB", "[", 
        RowBox[{"[", 
         RowBox[{"r", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"aux", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}],
   ";", 
  RowBox[{"SmoothHistogram", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"lf", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nC"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "COL"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"auxGB", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nC"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"2", "/", "4"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.90864157116123*^9, 3.9086415772071247`*^9}, {
   3.908647340328238*^9, 3.908647550176907*^9}, {3.908647586287353*^9, 
   3.908647588512681*^9}, {3.908647646000626*^9, 3.908647651124707*^9}, {
   3.9090714251239777`*^9, 3.909071429950388*^9}, {3.909071931541286*^9, 
   3.909071963724719*^9}, {3.90907488439459*^9, 3.9090748901606827`*^9}, 
   3.909656240399376*^9, {3.909656280062709*^9, 3.909656317241572*^9}, {
   3.90965673422479*^9, 3.90965676061825*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"80767d51-b3d2-47a0-bbdd-99e51fb64b30"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
a11dGshc005IVgpElaK6Z4MqNJjWn4s2ldqcjyplg1mWBteeXY7i5QvELTtG
ZSaFaEDx8w6fYA7EUpk7hwM5aKCxyBt8fS0AM7enx+XR02A5u98vZT4AJU6K
azstZ8Jdvhwvs8kAFMAloceb+ze9Rs+NbyQAHTOvkafeZYLBvp+OH/sC8Pnn
XTkNzzOBqe+qbeODADz2Peua1MNMeOoVYJnaFIApNV+0DZsz4eickKl5TQAS
Plcd5LmSCfaZLwz4zwXgFTGWxydPZwIf9xHCp6IAPHk8I7E7LxNGLxF1b2QF
IP/FxA91m8+rCq0VrbSEAKQXiXUyIGWCf2+jmgUpALens6oXe2SCrHuokoBP
APowLg+essiELzPiuybtA/Con1ChvW4m1Kf+t/OmcQC++3n8Qe+uTKByFEmm
7wvAXym9j1cEM0Gz0ljUUikAL8+lM33elgkrausCglIBeGf8w02p2Qxof9TM
M8UbgE/Cbxn+epIBGc6RnLeYA3CCqH/E/EoGGE7LbM9Y88ejf1qtpLIyYNvB
t0xW8/44psjlleGdAX2sJ+mFJv2RKCR4JEQnA46VW2xMvfbH0djeulHuDHBU
pv97q88f7XsSy95+TwcBbPuV8cAfVQkympSedHhjH71g1eSPtwKq/U5fSIfz
nxRmhWr80dB7mck1KR0C4se/fD7rj0rUeL6bdukgt61ssqnIH8n7JDJrFdJh
psx2PDPLH8N9XxKJdOlwXXHbO+uEzfgmR11TXqdBdPv918Ikf+SIvPbU63oa
aNkkDE17+2Mfu1TNdE4a/BlTet5s74+3m5rpJDbP447oqac0Y3/UstBeZFRL
AxpDRY/NPn8MJTVVXGBKA+MSp4ciSv44nlS758fbVGCRZ7v/RdIfrQyVB3/f
SIX+O4/aWnj90bxXprM9NxWKLVJaspg36zPoSDzgkQpO79Rv2q754ReR0tI8
5VQQJM/Ui8774fk733hL6VPh3b+LtV8/+eEpx1LeqP9SoPK4e/Xt136oq6r4
m+tqCgTK7KjM7tu0556Vy01LAfmWx+fsHvjhVnoi34BdCnwzyTwt1uSHlH2j
+7/LpEDjyN6TM1f8sL87R+bzcjLEkn4UtZ71Q+XPzfb3nyTD3rUr+TlFfsga
KeqVVJ4Mq0d9Dtln+eGevlMfBCjJcF+CP0s8wQ+f7VxPrTyQDFk3B9K+hfvh
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
F5IW1p4r+Rr8H/8/hlZY4A==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
06H/9/+K8Pnfj+U99HX///p/ANAIPhc=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
9f8DXe0thw==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5]], 
        LineBox[CompressedData["
1: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
4Voqk2VijZGGDXKD23fArWuvVf9TtsaK8E6TGgEh+Nk3o68ttp6PTcH8opgg
HBHmt7nIYY0P9XMzDBUFgOGk7jX+ywrvBUQcLDHeDm9yXEk6g1bY1G07fjaQ
H7Z/Soi79NIKmcp0mbrPbQM3weK0yftWWKZYR7Bt4IMS+7Yrutet0DBFcWD0
Fy/MZE+V5qRaIX3V9qWPIi+o9/A+nKZY4eDl7sSbtK2QyK/6XN/VCtXYOlwx
mgde2Th3XTW0QmOW4/PHRLhh24X4oVlFK9y3S3ia8ZILXLoKpw1FrPCu4VAo
axInFPG2/s1ls8LpfDOlWKPNMGU5sfnXjCWqzJ7SyxXiANXzPDuO9Vli2B1r
foGFjXCi49De/OeWmHdDLOPaADu85HZUWbhrif0XZeS+tLPBVvNYveNXLLHg
G4Hj4mtWcE4vsLrBsERVjdLV0C4WKHzz3ON3qCUuKygXiw8zwyTnWKiZoyXG
c0+E+64ygfLxLbE3dS3xjd941+RuJog9o3Tmj7wlTrI681LNNsCLNrscC0FL
lBY02e3EtqbNzRFdUsxkieL33E/cSVjVrjqvGfT7owV+aNrmZsn1V1uHJyXl
ZrkFsksGNCaULmt3p7+9YZFogYteGyM6rP5o+3IJNKzYWSD1S5+DFeeS9tIZ
975SWQuUZpKv3vp+UfsUR+mizZo5GuwC3nO3FrSFTs3wbeg2x8rn6VmWafPa
5ezqCuW3zJG+PZJ1IPqXtmZKwnHHOHMMNTb9Xh8+p93J0hbAam2OWT4PCFHx
P7U9k3iTq6TN/+9/kMiffzv2e+jq/H/+H5nxUBk=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        LineBox[CompressedData["
1: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
HSmOjIHiA5P7+5jgMdEWvDaKjMkNT1dZjzHhbVrr7atkMnZmbm6v/coEX5UW
YRsiGa+VdXcwl5nw/tkN/+lgMoYbxz9BfhaE0K83p/mT8dzr+p6IjSz4LNEo
qOBDRncprDsmxwLSnTqfTg8y5gh8yRVSZ8F335rrvu5kNN/Ns5rLgAXRvNWr
OZzZ/pO33QnYy4LF6srDxfZk3G2+PmyXPQsS91fUG+4jY77pyjWqOws45i9x
vTYnY23eaoOtPiw4mlt6IM6EjFNyhrFGwSxYbVR8VdyQjCLCTrGPI1mQPl6w
ckOPjK9XndN4HMUCobQ8F1dtMvJuk6k3SmRBpvKFyu/qZFx5dVpO/ggL1j/L
XjqrzM5v5/VnjGMsyKVl7dfYTsYXH9Q3Op9igZTE2bInsmR8YyNGKjzLguK2
07/CZdj116ESCdkskPM9aSsgScZ2yR8tJRdYcJnnRMmV9WTcGmsv7pnPAqXq
tB+WImSMmnzke6GQBTUOKVZTgmTc1n37hEsxCzR/sAqOribjUdUP57NKWHD9
AmNWlouMCq1fLruXsiAi9k8a8y8J/6jcmLnIxvS7P9XvzJNwm8SOW9FsnCAw
N7T4mYSMsyq5L9n7j7jMJOtOkrDhrOeRB2z7xwv/204bIeGI9m0dyyIWnJ2a
eFrfR8Lx2gMWhwpYcF79bfRMDwklVJzcVuWxoCjm1WYlJKGOt+gm8/MsKMcX
DwKbSTg4cPSA7DkWXOV/HnmpjoSxnvvGCjNYcM358cZ3FSRMfPdf9q2TLGgp
eNAuVURCtU8LfvHseuL7u0EHs0n4zWGf+QS73g/U7gjlnCShqNJ64/kkFjyJ
brnZd4SEvPnrCNdjWfCi47q3UDwJ7XJqO+VoLBjhq+e1pZDwk/C6kxYRLJhw
qq47FkLC49M+Y5vZ/Z/Or3C/70PCrvvNCtcILPg2WfqP4wAJz/H8t3+VBwsW
VAsvGzmw8zsqlCPmwoK/URcc4i1IWB/40OGDLQu4O7IWbhqSUE+C8p1pzgIB
vjPFP7RJaB+ilzplyAIxpxOWmiokDDTfuE9chwUS+SlfiXIkfLShvlRSjQVb
JhnnqyRJKBIwMzgrz4LtqgnGH0RIqGTxQatImgVqUdEf5PhIuCaWf1l+PQt2
tVPO+KxEotmsSVy6IAt2r47QLVyIRD0Ruc/PV7HAzDHk7fCXSPT4JJWxtMgE
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
//sfIXZu+Zmaj5nJ/+L/B9zBu8k=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[CompressedData["
1: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
fB2Y8WteWkxz/9//J/z827vt1L49/x//H8L4zsE=
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
9Dcy+F/8/wBNVElJ
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.7, 0.3, 0.7]], 
        LineBox[CompressedData["
1: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
gL03b+SA3cJQjnsSGXcdWP6tk5IDr4vd75yKJuOFL8SJj445YKk68ulNCBnb
7R9/rVPIgc5XxG1b/Mg453lO6vzfbDDxfW9o6UlGW1fFOy0vsuERHzkgi0zG
6tCldRxns8Gg5kP5E2cyjq52DQv0zQY0pnSttiXjgVsjOdt1suHw+OiirjkZ
qaW3f/zizYbmBKpMtDEZF57ttufrzwJ1yXHb27pknJd/XkqsyoL6u7TEX4dW
4qcteWnOLwuUnSdq96uQscWzIq1bKwuuztOHvBXIODitbz/PnQVyxR95a3aT
sfzauWNeLzLhogrj0IQ4GZcWbGoOnMiEXa8m6VLCZHw5JdtvQcyEsz6ehW6C
ZEyxIZo82ZsJYnyf75euJ2Oo+Yfks98zoPQS88d/XGQMdwzb864hA7YZfxHd
vEzC1uKFvoSIDCgcY5lYzJHw7+sw52LIAMGEr6GZP0i4mO4TJbo6A3IkvKse
T5KQKTKyXeTJSn9491s31wcSOhQlSRZmpkOqkw+H7lsSXjL7mJFrng6r57/v
i+oh4erkNKKgYDrEF/k6N3WR8GfInwbx12nw98BU2uwjEgq+cs2+U5gGkS/9
GpWRhIflTXl+2KbBb+/pUa/bJMwS/t13VygNgngDBC/VkXAoRPatwkr/PF09
ozN+mYSNP1ut9EpSwcco0GtnFQkDKaYpHPap8GX050nXMyQcDzr4xFcoFRjx
QY9PlpDQ5VM3q7A3BcbFf832sklYlp/8NLAwBUh3gqU2ZZDQwK5fezMhBYYc
5yzME0moEXxeOkwwBZx/h0RnRJHwP4L0u4svVuaVwt81j4JJOLy86+nF7GSw
PRDWt8qXhFXlu42jTZOh+8U8NzBI+F0+4ua+dclg7h2uEkki4XFqmF/royR4
tn6ReMtpJf6hFa9Uk5LgaHVEzk8CCQmevYrFeknw8MhSi5IZCb/5RPR//JsI
+qORn1hGJGwKbhFTupMI9+L+CFUDCZ3mm/X8wxNBWzzacEyDhBWWL5Lq1RKh
qWXZX/LAivzKffGlnwlw0DGm3EWehFueCYDZjQSom/vbeWIXCeOr1fmu+ySA
UmHsYo8YCQdV5yt2KyTAlf0cMoLbSGimVbO18VM8yL6IszUTWMl/QQ6LdjEe
qrw4E9PXkXBt856zGrR4kFqfUPtwFQnJn9kVqtLxUH5x1RDnHyIKvJy0cXsf
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
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[CompressedData["
1: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
jFO/hnkUp5Pghsax8LobZBzYwBk5/jwJ+Dc6O2tVEHqQYOupm0lwZTxQ92EZ
wc+no0a+cUkw3pQnYlBKxrAX9m9OM5LAJKXhb2cxGT1t3SI/GyVBHaX/7alC
Mq7eueGQsmwSiBxaaBjMI/jnuLpalTsJorZuyrLPIeOsLXl29nMifJuW8x7P
JKOyhrmW3ZNEsH5oeJqeTug7uPNIxNVEeJhFUppPIWNO43ZvUmgiyLiHbvJJ
ImOG9y57NsdESD1aNLcST8azubrlZpAIKztbXoTEkpHfu4nPbmciuHwfvM4Z
TcYby8JLRvMJ0NnxMyohgozfvyU9ML+eAGqFW8j8YWR8sdGgqNcpAQouKh7N
CSb2C3L+2r0jAdafMBYXDSRjwkq/pnFPPJzfTVtddoWMsTZROkbR8fDmd8QH
WT8yFjBtv3Yeigfdl6yWGh8y1t+UI71ZjIPrV+/nql8kY5R403fmjTjYfOX9
pRYPQh/lkE0pDnFw2XzJUu88GZNqQ8kGW+NgTEpQ7SmTjNY87M/TnsbCCTYV
flM6Gd1f7Ne47B8Lta9Pfu+jkNEhtauPbX8sCN9kdtuQyOjRVDcrMRYDESEx
t0acySidSV/8kREDX63K40iOZGyejA1xM4wBK4U22owdGcWOHjbJWo6G+xyj
Bh5nyfhZqULJpzIapN/9lfhtTcbcor3Sm+yjIeX2Do4ASzIOZdYbUDZFw1KU
+if2M4Rf3xm0hT2IAmf70w+izQk+DcY/0zyi4IXqhcKNJ8mYVr5ql6h4FKjw
JPinGxP1RssHK3ojIf/jddudRmSk6N65zRsWCesanhwoNiD8kr9w3EwlEtwS
xwQlj5Fxcv9ZS7+xCBhwXf3zph6hB5tMXkJaBOhoCfcp6RL5oXNNpx6JgGub
D96uBzK+/6UplvQjHPimLJNAi4w+Q/f2RpeGgx96ubUdIPyrZDkZdjocPqYn
nziuTkbuaz9soteGgxHjlky3ChmF1bMv5d0Ng7uHn3NaKBH13pdBm0sY7Nr+
eeKtAuHXb+vL1m0Ng/Cvax87ypNx5onTderjUJh7LMaalCHjfW9zvYWLoWCR
B8FMKTJG6151rpAIBfSwtV/YS8bbXsW/kgdCQMrQV/uSOBmpR80+3Y4KgSSR
9J1sYsS8su5ftVkzBP4s1vwJEyajS+Jj4drpYHB60TXAvYuMJ3Ni/xXnB8Oz
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
drqH/v/6fwBumXZx
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0.5, 1]], 
        LineBox[CompressedData["
1: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
UudNg5NTehxh0T6Yfn5xW9Fm/sgJdhB/En2wWfaTWEAIDfosjNuj3H1wV1Cj
IheJBjFHn+/5Y+WD9hcGLhRG0kC4yTw5Sc8HPxgtdS7H0ODx3MvRLWqb/j16
b3UgkQZBYjZqJ2V9cEhZaOhQKg22OQycZdvtgxecMiTZj9OgPtPhZw63DzJk
bN1VnU4D54dD5juYNtlo9R7/KRqsL7jcLFzxxpa91eLGOTS4um+MSfirN5YL
v845nEcDE3dP39IJb6w0euv64ywNfuS+fyg54I2CGipbfM7ToKDdd9fNDm9c
eXNhV85mvaa5OhVz4J430v9S8Iva3G8m5INe3632Rg5sreW+TIMTfl8UVMu8
0Vrjxj+/YhrsvxCafa/AGxe6WbyCS2jQ2/3tCyHDG1+7FnGKXaEBbQvZ8EmC
N5q/uRNwcpN3qS6UG5G8MfMx/XDRJj8Kidp44euNvS/z/7ltcuCV327Wjt74
+K1nRuemPY7Xsc2vTbxRrWmP1cTmeHWsf3ldtL3x5od/ulc2/XHSTqKMK3jj
g3qBKJZLNFijbPT4SHqjCmhw8V+kQXlFmuw0vzeGmhr79mzO1/gtQ3oIuzfq
dL3ukymgwZgox7PxNS+c1siY3L+p195MrtTpKS/0tspXHsimAXWBV+PHCy+8
4MieIppFg1Y3wYXlOi/sbre4yHWSBqztIrfpirywlmhErkijgZ28uP/WNC9k
KnnM9mEzviWFe0V4iF54TeRGOm7Gf5Zu/xshKy+satMQMaDSQCXk4BkJVS/0
azMUIIXRIHVA2VhOZNPekstbQiANXmipb1Fh9EKpjMnxBi8a8FVo3dOe88TK
LKfbfc408OU8EmnY74m+PE6T5zbXd3WsgZxViyfu1HikTG9Kg5UPJp+cSj2R
JfeVD78uDfTMLEu80z2R8agMvNncz3MabJ2CIzxRReJ3NSjSYFTEiYvq4InH
v82V2G/mq1S6W1e8licKfvbk4hOlAfmn19FjEp7IXmux7cROGtx38T98ms0T
0xfCq8rZacD8hPirYN4D12rUOclbaGArF15dPOyBjz7+9v6+uR8Xn6MEVrR5
IMvCy8HdX6NhZj1atKbCA5mdB27Sf4gGZWL8cFO2B77m3CF2aTAakvuS8zDK
A9UEqtK+dEXDc81jpl1uHsiU8174R2s08F5LZ+jX3eTH8vrVd6PBe9vpB6My
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
nV6P
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0.1, 0.1]], 
        LineBox[CompressedData["
1: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
HT6OHgwyNDPDGlm744s/yNBx5lqOiZoZugeHEI7cJENlydFac+l/eGHBZMiN
DCl/659ZHTJDn8JHRHp+Mng4yr+35TTDhtwf1jdHSKDf8uSXA70Ztl4TfPMm
jwQnBNT3EL6bYtcu7oIYAxLsjH0u4frBFF2O69dUMpNgacpYl/zaFKMuMqzo
t7vBgOobV4+npmglOsXjG+MGDVcdor0aTPF9S8kF9rNukM/w8T/fq6YYnTh+
/8QvVwhy87jrf94Uz9LylXQ0uoJVx1JvULwpvrauOTsa6AoKIsFzof6mOBxZ
502WcYV9KX/pI11MsUXe9L3ndxf4MxvPF2NmigKLk4fn7rjAuA7LqXg1U2wX
+n5n1M8FmmtyzJKkTfGOf+0sSLtA2Q4e79RDppivNLWT5wcR4jwvpWRwmuLD
p9b2jveI4NJz6Go2vSl6xVwb5Agmgrp4zZO87yb49tnLi9KniCCcfXLkwgcT
XM7892j9TQCmpfsrRa9NsJLjwbV7zQSYMz7LVvLUBBVmVK6zxxHg+e2nIqUN
JnjWyFC8R4MANzh0VcuvmmCWvOaNpe0EyPTvt684b4I+35cYA3udwWfQMrgq
3gQXZvtPWZ93BmPZ8dxafxM8QEfjU2TtDFIFLjfqXExw51HJCWk+Z+Bcn+u4
bWaC71h3XzbpcoJVK9+pu2ommPOie3Pe3AmGH6z9bpQ2QcF0cdLxaUd4sDeS
+9EhE/QtK3bn9XWE/8LoJZs5TfCI9Q2uW5sOEP4uVa+V3gTX7mc/nc90AHtF
dlL7d2NkVtZQ6TroAEqXCmI6PxjjSPyGh0adPfBvHrj4/LUxkmU1bZzBHmid
rt7reWqM09sIRJ5XdjDdItbf32CMRy/M7Ke42EG7QP3866vGKO1JtTdfs4WK
WLltb84bY6xKteJIqi0kTT/mH403xksc/rw/DtqCu5ra6XF/YzzwST+78o4N
6FzrNn/vYoxvtZ4krGjZwLFtxj4fzIyxeNFUYGjcGlhJw6mf1YwxYgehxyjA
Gr512F+bkzZG3qMBp112WEOfyIfmhUPG2NAWa81+1Qpup1DeLnIa49CNQRvr
M1aQN7f4fYXeGP3oH9YrDlrCbP7CgYUZIxwQmGdr8bKEGsufJiudRric/sxx
iskSvHkZkzcqjXD/iMaLinILODnK8Xgz2QirL3Y17FSygB8X+ZcZ3I2wt628
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
/i80blM1yv/3XyZk+U/fCSdV5f/F/w9IFt60
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9, 0.8, 0.1]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0., 0.7, 0.3]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[
       Rational[1, 2], 0.5], Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"AKL\"", "\"BER\"", "\"BOG\"", "\"DEN\"", "\"DOH\"", "\"ILR\"", 
       "\"LIS\"", "\"NYC\"", "\"SAC\"", "\"TOK\"", "\"BAL\"", "\"MIN\"", 
       "\"SAN\"", "\"SAO\"", "\"VIE\"", "\"ZRH\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0.3, 0.7]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0.3, 0.7]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0.1, 0.1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0.1, 0.1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.8, 0.1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.8, 0.1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7, 0.3, 0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4666666666666667, 0.2, 0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.7`", ",", "0.3`", ",", "0.7`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7, 0.3, 0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7, 0.3, 0.7], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0.1, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.06666666666666668, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.1`", ",", "0.1`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0.1, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0.1, 0.1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.8, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6000000000000001, 0.5333333333333334, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.8`", ",", "0.1`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.8, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.8, 0.1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4666666666666667, 0.2], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.7`", ",", "0.3`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.906215722680078*^9, 3.9062247964519653`*^9, 3.906226624486775*^9, 
   3.9062273646765213`*^9, 3.9062279198741083`*^9, 3.906228386185066*^9, 
   3.906229065204331*^9, 3.9086291446207323`*^9, 3.9086292910206013`*^9, 
   3.908629473520668*^9, 3.908629570139041*^9, 3.908634740604228*^9, 
   3.908634853029182*^9, 3.908634960810268*^9, 3.908635580775937*^9, 
   3.908638076303914*^9, 3.908638216999551*^9, 3.908638265805933*^9, 
   3.908638379037112*^9, {3.908638488176465*^9, 3.908638509708736*^9}, 
   3.908638633662323*^9, 3.9086391844660807`*^9, 3.90863929025747*^9, 
   3.90863934071677*^9, 3.908639393808324*^9, 3.908639471149242*^9, 
   3.908639722656452*^9, 3.90864009613905*^9, 3.90864015184678*^9, 
   3.908640198401396*^9, 3.908640308035242*^9, 3.908641340148388*^9, 
   3.908641407298511*^9, 3.908641500630617*^9, {3.9086415722295322`*^9, 
   3.908641577876704*^9}, 3.908641611558271*^9, 3.908641671597352*^9, 
   3.908641753505233*^9, 3.9086419671842813`*^9, 3.9086421008753557`*^9, {
   3.908642781903696*^9, 3.90864279675988*^9}, 3.9086428605115957`*^9, 
   3.9086433958969316`*^9, 3.9086436709118423`*^9, 3.908643726894021*^9, 
   3.908646026350342*^9, 3.908646073288615*^9, 3.908646176783719*^9, 
   3.908646229187436*^9, 3.908646533118073*^9, 3.908646611032638*^9, 
   3.908646690185912*^9, 3.908646763883307*^9, 3.9086469525506144`*^9, 
   3.908647000562512*^9, {3.908647200115212*^9, 3.9086472132219677`*^9}, 
   3.9086472872106743`*^9, {3.908647357424417*^9, 3.9086474485588617`*^9}, {
   3.9086474846915407`*^9, 3.908647550883206*^9}, 3.908647589773183*^9, 
   3.9086476518648148`*^9, 3.908648256700309*^9, 3.908648431979404*^9, 
   3.908648501818112*^9, 3.90864873810912*^9, 3.908648817059593*^9, 
   3.9086495327546377`*^9, 3.908649674674737*^9, 3.9086501591765614`*^9, 
   3.908650202886138*^9, 3.908650366795774*^9, 3.908650412846744*^9, 
   3.908650765776226*^9, 3.908651118177129*^9, 3.9086512387822447`*^9, 
   3.9086514103908587`*^9, 3.9086514761854*^9, 3.9086517184825163`*^9, 
   3.908653972800562*^9, 3.908709541856208*^9, 3.9087252645728683`*^9, 
   3.9088941213019876`*^9, 3.909071122152482*^9, 3.909071212207993*^9, {
   3.90907140848895*^9, 3.909071430719049*^9}, 3.909071654753215*^9, {
   3.90907193510186*^9, 3.9090719644479017`*^9}, 3.909072009882628*^9, {
   3.90907209124927*^9, 3.909072115254178*^9}, 3.909072285902362*^9, 
   3.9090723741631193`*^9, 3.9090726274150867`*^9, 3.9090748176214867`*^9, 
   3.909074891132073*^9, 3.909076868496675*^9, 3.909077398448503*^9, 
   3.909079553388505*^9, {3.909154647713537*^9, 3.909154670414198*^9}, 
   3.90942830544667*^9, 3.909479984691165*^9, 3.9094813049535847`*^9, 
   3.9095933617489634`*^9, 3.909594416968047*^9, 3.909594545312818*^9, 
   3.909594695646625*^9, 3.909595354126746*^9, 3.909595548760157*^9, 
   3.909655121898923*^9, 3.909655286391282*^9, 3.9096555624687967`*^9, 
   3.909655613404957*^9, 3.909656242139344*^9, {3.909656286070098*^9, 
   3.909656320324592*^9}, 3.90965651812327*^9, {3.90965673625806*^9, 
   3.9096567617314987`*^9}, 3.909656883208001*^9, 3.909657289519499*^9, 
   3.909657416504203*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"094b593a-8258-419b-8cea-213ac6ab6f1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"COL", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908648265907209*^9, 3.9086482911053658`*^9}, {
  3.908650173939611*^9, 3.908650190586137*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"fe1e7e9b-501b-45bd-b50c-bc773142ee49"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.6, 0.4, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 
        1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification])}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], NumberMarks -> 
     False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0.4, 0.2]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.6, 0.4, 0.2],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.908648274257367*^9, 3.908648291611809*^9}, 
   3.9086484340259542`*^9, 3.908648502807847*^9, 3.90864874015937*^9, 
   3.908648819574205*^9, 3.908649534117764*^9, 3.908649676082614*^9, {
   3.9086501605243177`*^9, 3.908650203805705*^9}, 3.9086503691451283`*^9, 
   3.908650412868705*^9, 3.9086507657970133`*^9, 3.9086511193154087`*^9, 
   3.908651239752535*^9, 3.908651413112358*^9, 3.908651476209569*^9, 
   3.908651719621296*^9, 3.908653972822764*^9, 3.908709544517045*^9, 
   3.9087252657751017`*^9, 3.908894122798484*^9, 3.9090711242226954`*^9, 
   3.909071217575926*^9, {3.9090714111013937`*^9, 3.909071433152504*^9}, {
   3.909071941775173*^9, 3.909071967030789*^9}, 3.909072012757077*^9, {
   3.909072094333603*^9, 3.9090721181282263`*^9}, 3.909072287111999*^9, 
   3.90907237592822*^9, 3.909072631833555*^9, 3.9090748189274187`*^9, 
   3.909076869467758*^9, 3.9090774000891027`*^9, 3.909079554225432*^9, {
   3.90915464899512*^9, 3.90915467158048*^9}, 3.909428308587109*^9, 
   3.909479986697772*^9, 3.909481306726677*^9, 3.90959336309409*^9, 
   3.909594419739636*^9, 3.909594547667747*^9, 3.909594697546307*^9, 
   3.909595355570155*^9, 3.909595550890053*^9, 3.9096551243555517`*^9, 
   3.9096552922885637`*^9, 3.909655617535487*^9, 3.9096572903670387`*^9, 
   3.909657421768691*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"f937a248-9ef6-44c4-aff6-db70bc833e70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", "14"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lf", "[", "aa", "]"}], ",", 
     RowBox[{"lf", "[", "bb", "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"COL", "[", 
       RowBox[{"[", "aa", "]"}], "]"}], ",", 
      RowBox[{"COL", "[", 
       RowBox[{"[", "bb", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"auxGB", "[", 
       RowBox[{"[", 
        RowBox[{"aa", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"auxGB", "[", 
       RowBox[{"[", 
        RowBox[{"bb", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/Yg5Wr5L6q1jgYSLHogO2zP3iZL8W8eHqkVvQfT+
f8vOKgPpIN7VYNpuSnisCpB+97U+DUTn3NecoQak/9WkzQHRckW6sepA+g8f
RzKInp3GvhZEvzN7CKYFXe/M0QDSEZMegOlrTef0vgHp8t3MpiDabHKEF4g+
2pDsDaLdDmR2gugv9/PA9Jsc70kgem5azmQQ/dq8ZT6IZvncD6ZFG56+kVN4
69jE9Oo9iOYMckwQVnzruMF6ajKIjjtqXgGi570rrQLRvRpfO0G0w+ZzvSA6
KePWdhD9/MNdMN0gd2Q3iP5ieBJMi7TM1RUB0psvqtiA6Db9r+EgutPJIBpE
AwDZOJzt
  "],
 CellLabel->
  "In[245]:=",ExpressionUUID->"6b212fd5-a182-4984-a561-59da153c49e8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
4skUm+/7C7r/t/4f6b0+FA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0.1, 0.1]], 
        LineBox[CompressedData["
1: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
klL/Fxq3qRrl//0v83/x/wOd/N6x
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-26.505501137763773`, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"BOG\"", "\"SAO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0.1, 0.1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0.1, 0.1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0.1, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.33333333333333337`, 0.06666666666666668, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0.1`", ",", "0.1`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0.1, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0.1, 0.1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.90622846854734*^9, 3.906228594629601*^9}, 
   3.906229068921832*^9, 3.908629147295775*^9, 3.908629292201927*^9, 
   3.908629475086288*^9, 3.908629570213171*^9, 3.908634746451317*^9, 
   3.908634855698187*^9, 3.9086349682148237`*^9, 3.9086355829726133`*^9, 
   3.9086380776746387`*^9, 3.908638220259121*^9, 3.908638267202948*^9, 
   3.908638382599903*^9, {3.908638490297418*^9, 3.9086385719802103`*^9}, 
   3.908638636120578*^9, 3.9086391868234253`*^9, 3.908639292450384*^9, 
   3.90863934185*^9, 3.908639394913868*^9, 3.9086394745131083`*^9, 
   3.908639724801065*^9, 3.908640100160088*^9, 3.908640153017045*^9, 
   3.9086402081765833`*^9, {3.908640337219365*^9, 3.908640365837638*^9}, 
   3.908641342217456*^9, 3.908641410613696*^9, {3.908641506127634*^9, 
   3.908641588415845*^9}, 3.908641621808371*^9, 3.908641673394423*^9, 
   3.908641759136401*^9, 3.9086419691940823`*^9, 3.908642799152828*^9, 
   3.908642861785087*^9, 3.908643397349777*^9, 3.908643672616914*^9, 
   3.9086437288350067`*^9, 3.908646028294932*^9, {3.908646074691791*^9, 
   3.908646115653936*^9}, 3.9086461782468147`*^9, 3.908646230304406*^9, 
   3.90864661260777*^9, 3.908646691485228*^9, 3.908646765689433*^9, 
   3.908646955004367*^9, 3.908647001622321*^9, 3.9086472146240664`*^9, 
   3.908647288343207*^9, {3.908647674925943*^9, 3.90864770483706*^9}, 
   3.9086482589850197`*^9, {3.9086482968596067`*^9, 3.9086483034374228`*^9}, 
   3.908648435032241*^9, 3.908648504224124*^9, 3.908648741068178*^9, 
   3.9086488210675983`*^9, 3.908649535322588*^9, 3.90864967715163*^9, 
   3.908650161580036*^9, {3.908650194874289*^9, 3.908650215532031*^9}, 
   3.908650370388218*^9, 3.908650412951647*^9, 3.908650765890134*^9, 
   3.908651120400902*^9, 3.908651241142626*^9, 3.9086514141701927`*^9, 
   3.908651476291754*^9, 3.908651720510706*^9, 3.908653972903986*^9, 
   3.9087095454765472`*^9, 3.9087252667491093`*^9, 3.908894123854233*^9, 
   3.9090711252292557`*^9, {3.909071218503212*^9, 3.90907127334739*^9}, {
   3.909071434120101*^9, 3.9090714515361013`*^9}, {3.909071943361536*^9, 
   3.9090719679622803`*^9}, {3.9090720140880823`*^9, 3.909072027964158*^9}, {
   3.9090721190100937`*^9, 3.909072125196405*^9}, 3.909072289457272*^9, 
   3.909072376876446*^9, 3.909072636088669*^9, 3.909074819910289*^9, 
   3.909077401036454*^9, 3.909079555158729*^9, {3.9091546499957438`*^9, 
   3.909154687808407*^9}, 3.9094283099864616`*^9, 3.909479987900713*^9, 
   3.909481308125299*^9, 3.9095933639293528`*^9, 3.909594420602075*^9, 
   3.9095945485213223`*^9, 3.9095946985181017`*^9, 3.9095953569762173`*^9, 
   3.909595551950609*^9, 3.909655125304906*^9, {3.9096552934649277`*^9, 
   3.9096553252335377`*^9}, {3.9096554908740396`*^9, 
   3.9096555085739822`*^9}, {3.9096556195084677`*^9, 3.909655663191307*^9}, 
   3.909655999421303*^9, 3.909656030725424*^9, {3.909656988202055*^9, 
   3.909657057603228*^9}, {3.909657280783606*^9, 3.9096573059149237`*^9}, 
   3.9096574227543497`*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"a507031e-04d9-4255-a8a2-0e21b2a047fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"r", "=", "1"}], ",", 
    RowBox[{"r", "<=", "nC"}], ",", 
    RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"aux", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "1", ",", "11"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"COL", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "11"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"auxGB", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nC"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.906213036745257*^9, 3.9062130662169447`*^9}, {
   3.906213137562542*^9, 3.9062131914394493`*^9}, {3.906213239568988*^9, 
   3.906213239950783*^9}, {3.906213590283944*^9, 3.906213595298428*^9}, {
   3.908639409099353*^9, 3.908639413681518*^9}, {3.908647738254854*^9, 
   3.908647750366053*^9}, {3.908647783869731*^9, 3.9086478194827013`*^9}, {
   3.9086480186248493`*^9, 3.9086480331288233`*^9}, {3.908648095730439*^9, 
   3.908648150224312*^9}, {3.909071975060418*^9, 3.909071975181408*^9}, {
   3.9090748709803*^9, 3.9090748732662973`*^9}, 3.909657076657179*^9},
 CellLabel->
  "In[248]:=",ExpressionUUID->"d1b3e901-627d-42c3-bf3e-0277453e97c2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         PointSize[0.02]], 
        PointBox[{{-158.2594724971338, -5.6654583845635536`}, \
{-176.0925325629281, -8.187332920483676}, {-177.33655622521346`, \
-35.01676483482308}, {-116.05425242890895`, -19.49368473478591}, \
{-175.24372882425115`, 15.929816811425297`}, {-74.99667953929416, 
         1.2041046229605943`}, {-77.61557105532833, 
         32.028332225515534`}, {-137.92754529584695`, 
         28.11922139585427}, {-164.02701424042345`, 
         21.447349374920687`}, {-62.29996045800923, 
         34.66931388589334}, {-214.4254548077729, -20.41780714993213}, \
{-136.66181627178833`, 
         0.75490946416177}, {-141.6532177609055, -1.196085710138906}, \
{-185.09594606592094`, -6.622978781480519}}]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.02]], 
        PointBox[{{-283.02498067448397`, -11.60587864888754}, \
{-260.43983599209247`, -12.937021501855455`}, {-291.5060133759562, \
-21.822607750133415`}, {-284.4317696379759, -20.333971210388206`}, \
{-238.48726673471344`, -9.439789492656772}, {-258.0013511805861, 
         12.030935480012957`}, {-152.6759701893974, -32.94562428024023}, \
{-171.46994560682052`, -23.211971771575527`}, {-153.6400613759631, \
-34.669268918595414`}, {-96.98548309336321, -18.24675045087377}, \
{-142.63584156063322`, -8.698451749961311}, {-146.49461384241283`, \
-26.983142655283032`}, {-191.21473820421846`, -34.0165327244126}, \
{-230.70903271606016`, -15.744736337642891`}, {-273.5007594050926, \
-0.14236699858442137`}}]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         PointSize[0.02]], 
        PointBox[{{-315.1313731898696, -10.69051637719047}, \
{-297.39299110879074`, -16.06579472091888}, {-297.78654586938757`, \
-15.812650966550919`}, {-311.8707470883647, -9.337058887885938}, \
{-333.622486112097, -29.328340398157465`}, {-311.79115903969387`, \
-17.705527094507246`}, {-308.20768695634865`, -15.08637942826708}, \
{-320.8111286870329, -21.794475797927717`}, {-323.78901691288667`, \
-1.9182541526967327`}, {-320.22591252245786`, -26.668016629464745`}, \
{-277.63906473771345`, -0.8943916654545419}, {-325.66515062986446`, \
-15.745910164488393`}, {-299.92288978322483`, -15.803618406286418`}, \
{-264.3924226579373, 
         9.97017950734952}, {-287.52404306423324`, -3.3312498520455236`}}]}, {
       
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         PointSize[0.02]], 
        PointBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAMGrf5X7CUcA0M1syW6szQLTHcJ9Z
i0zAxZR6aAFIKkDZi2tSmddXwBqFOkc4mDRAhuRtvsYrWMBAkGPwCeX8v5LB
nykmUlbANgDR18yDE0BYOhbtvFZXwPDritjX0hpA8vCOV1HwT8D+WPnWOvof
QGqROeM9MlTABaDN/boULkDiqpSAJYBQwMlt5L7KczRADrR8MBziVMCGft2s
aDkrQBx4qka3gVHACUIRtyQbLEA5xp5a+cxKwGUopiWYfjJAMsGxOdxhV8C8
PLcOboQyQIoHjUlD6VnArTrbfLTpLUBjgSbqPURQwN6GYEMFCChAOMAw9pwF
SMB15TtvApQuQOX0mbRYP1jAxXQgWXLPLUB/5vcNvVtUwLvNkpkciTVAPv2v
cqM0VcD9TSX921Y0QKQwIYh0t1HAN4Q3WAmuJUAwffmByyRMwPjpfDEajjNA
2WUu9AzxSMC6KQTTEzoxQEcMRferJ2XAkN/J2YtEPMBqqarkgBphwKOJl0T0
JUbA2+Qud8gUYcAbynp0Sq8+wD/2V/Qy1ljArIwM07LEOMDZ6vbTaBRlwCkr
OqQy6T3ADUKoAUD8ZcDb4kVi7rVHwGZ4wDzzpWHA6MmNroN7S8BJzsrLWvdg
wNh2bSY4i0LAfI0ASWgeYcDOJPmVlaBGwEgP8Vwzd2HA/hP3kYCNS8DIJp0Q
SM1UwDrcR8aCZSjAZ8qDSKoDYsDFLCvVOPlEwB851guZD17A7E9xXsckPcC1
7VF9DY5jwLY0zaFkGUjA3v9mAOdlYMAX4imENmFDwNcRygOIXGDAhZG2Zrkq
R8DBiOa8Yf9QwFkGF1ZKfy3AYoIfLt1iYcBUA1dpxIlFwN/JhWzyPlzADsL7
H/NhP8CW73jJ8N1iwKLijSksykjApVEdHgrJYsCF/FootSNHwBSLlw4sRWHA
Sa+zsNKMSsDLDF0y
         "]]}, {
        Directive[
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         PointSize[0.02]], 
        PointBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAcechNg3gUcDkOO4GCMMXQH7138bT
NljAgNvp5lMV4L9+hKkhILFZwBa7EgtHCTRATAXqqG7kYsDvUmv+//owwEXg
lYGf7lvAUHwkiDkZDsDQFOKsyuFfwBTSLo1gXjjADW0AUOvXYsCm2x+tiJ88
wCR+MuQsp2DAsMfUDbZhLsC2xaKDWHpZwCClsc9M2gJAKojPZB5zW8Cw8H6M
oXcIQOAJaHyJjVvAKtF97cQUJcDgMuZu0RBhwBwVPY6A+zDA0G+WhI3JXcCy
5uxxVpckwCAFvCpNWmPA+CoF0h8jScAgRk4pCx5rwBRjeuzymEjAm8A9f3YY
ZsC2z4bJw7BEwOlJPPkv4F3A0NHIv0vnB0C4UddsRHhkwLgO+9cp+0rAfvTp
85QQZcCCS1gGsqlDwCzMj7KdGGjA7t6auV0IPsDWGFwEi5NjwKk5oaiSZkbA
4ZRspDUxZcBmzrflDDZDwGTapVuD0mDARHcWSbn2Q8CTGRqrl5pnwMyjaRSs
jkvA4coBmN8FZsBA6+Zt1zA/wKQqOE95s2jAwteXP5NKRsDXcZXxWkJnwCJl
tAlgdUHAWrzd5w==
         "]]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         PointSize[0.02]], 
        PointBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAkc2A40gecMBgJFIDWEAIQJW0zUx9
rmLAe4PlGmuOR0BtJCv+3RJswLcdd9GACzhAVCjKsSWvaMBwRGoBXVwVQDHp
oLEh81rAnAyUqoDvO0CUW0YHT4NuwJDprzMI6EZAORMF5UAVZcBQOibL049C
QCTxunmuzGnAZIkqBJiLQkBw/uN12OtjwPYy4EhtmElAfplHysLLbsCIxqre
pnFKQPRUkwfr6G/ACJlPQoHAN8DEr0E1MXVjwHLIdSg6Jz5AQvoVA0yNcMDR
ikTsbLBKQHkE+DmUnnHAZRWeKnfGQECQD3tJBVVgwOLSLoA9sDdAledOcUN0
Z8Cw5uRfEuxEwDS2jXPREWLA5opWkabVQsC94j4nB0hxwIhjcd/aoiPAlThW
7znyasCSJnARa81JwJo5yIHheWvAqmmY4vu0OcBrURpHkq5vwCMRSCErdkXA
x5JVLlRnbMA28IoiMRJOwBdJ+oDBbGvA29wp+rv/TcDWst4MmzJowNVWxWKK
CkzAcFfYMzRZasDgL2XwkbJCwHjUXG+ZXm7AujU7//7IRsDjcb6dlRBowAwB
x44dTkrAJVZ9v+gibMDuE7Z8AylIwLil+1qzVmvAa617qsZIScCkgq1KMaxv
wH/EIVM22ULAyuyFxVnYbMCSc0ulsW1KwCBpT74Ph2zAeuFjXZwcScDNQ1is
NiNuwNwxE3G8wUjAYhcFOQ==
         "]]}, {
        Directive[
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         PointSize[0.02]], 
        PointBox[{{-102.96421092745302`, 
         33.792057615124214`}, {-40.85215808247168, 
         22.282630417962917`}, {-159.24215771139242`, 
         4.40563848243449}, {-159.6386966922351, 
         0.5603119256389206}, {-61.475517055349066`, 
         0.08896381824459532}, {-162.96527449267285`, 
         15.997329169013796`}, {-88.60612038117841, 
         38.55665203295487}, {-68.08055450733134, 
         26.309300533271717`}, {-83.92330342270668, 
         23.876072975707224`}, {-128.1622334733137, 
         27.075265762922136`}, {-60.527192052011074`, 
         21.934301348069788`}, {-38.66970141955528, 
         15.097293271100838`}, {-151.87219699713813`, -56.7138741650509}, \
{-77.25208162874965, -19.48882673800786}}]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1], 
         PointSize[0.02]], 
        PointBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAzKc23ZFWccBgbRSynz8KwBbxSpdn
pG7ArpD7zjKdR0DmbtZKP/trwOCC5RvNWAdAuIwCHlyzcMBSx1DUL+E1QON7
R3oU4HDA3DfVAiaPKsCwvvtVzCBpwBW9xu9S0DZAXCPrSeOyccAAFMLlLVal
v/qx/MFyYHDACBQ7xLiuGsDTXPy1d4BswGgM0x+BQShALIyUSu+kbcBAeD7m
ipAXwOE1SE1WwWrAwJ4NomMg8j8wdVWb54NwwNDmwUp5YxRAcainZUUfb8AK
p36jcrQ0QNqkdNdjD3DA2HUV2+pFE8Dg4d0YiAJwwBzoY9UiMiBACeVTkxb4
acBaCquhJqc8QOlTs3VdTG7AqLGffhCYGcBhkkINrUlwwIhlXl7tXhHAj/OO
v4fYZcAAfi+oUfbYvxK+sgSLgGjApIvLuSQ1HEBUcJOQTghtwCCRb9ERcwVA
yIg+79RTcMCoPnDHq5gRwLvgTNQb62vA0Ok59rihAcC7UQ9V+jlvwNoJV4Tl
8UhAUQOCgRSgcMAA/C3ek5DPvxslD+8BpHHAeFP9yddaG8AsI6IGdbVlwHYj
QTQyjkHA7UduYQLpaMCtmXRhPSQ2wCBIXqGNM2jA1r7buTdeQcCaYalE1j9q
wMR6s/OdakfAWtdnneiwasAk39y2cM46wGq3TxfvaGbA3H0V7x3lQ8CzDny3
UvpjwFpG22xqgkPAVM9o/Ky/bsCe5YD2NRpBwLCw/HLpa2nAQ+IOn2lMUcB9
QYM0i2FkwGZSWPcerUTAjjEaZR/FZ8CgJo5WcpE/wIPXlpG5CGfAqmCgrnqO
Q8C4cOPUsR1rwNCwHAQxbj3AHujMnyBvcMCQUeVpOaovwEjUM619cWPAu0jK
YdYsQsBqXVNxfChnwKDfofwYu0XAPUT3rRIqasAI8KhB+QVCwCP4OHjpbGzA
it4H8tAyRcAXCj46oLpnwNLWvrbsL0HAzgmWwmEwZcAzfC3CakhBwLiwdVQ=

         "]]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         PointSize[0.02]], 
        PointBox[{{-185.118150635141, -39.347446113537444`}, \
{-183.76239659277496`, -37.58693100662187}, {-181.03664124195362`, \
-32.13171370702819}, {-204.56746502066974`, -29.98826524479623}, \
{-188.69015918531784`, -30.27351492978632}, {-173.91407439338474`, \
-15.565815592334989`}, {-179.08293966027907`, -48.64756052209326}, \
{-208.8713890936928, -46.36615687451811}, {-170.83130798503018`, \
-20.6369971962418}, {-211.6852053055459, -43.45282930810413}, \
{-187.3826790959717, -39.19078086604756}, {-214.3408422425207, \
-46.07030622612406}, {-194.75023019157862`, -47.32363615341963}, \
{-172.1741300650228, -26.03878540245679}, {-187.54189338008499`, \
-47.44910895885652}, {-193.35137808277528`, -31.7304575706541}}]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         PointSize[0.02]], 
        PointBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAAhEokcCRTZcC4NpRBI4oFQMihFQfH
yG7AuJ7E6HSRIcDexr3K4CBrwHi668WSVSPAGMgx9Xe6a8CwlQZpqD4TwC7X
pKyrQHDANJpmkP9OLMCVPdJ75hxywAC7vyRfyi/ARk+NMZl+a8C4r70neXAx
wHIab8tCNGzAXIueJ4I2L8DQY3LAr45xwLZ+rvYxAjjAfRQxLPB2acBQy/eK
CWUjwAaOkJOlsW/AlKz34ShJJMAYldUMViVwwIT0I4FB1CvAvpR5zEp5csDC
tqUkUqowwCEf0lu/HWfASNgAFWQCN8ARYtz0mQFpwFADj4p4sQzAVHLvfXVu
csBqdZRq5i87wNw+0qFu72zAMCZ8yUa9HMDoMVUHo69xwK6E+jN3VjzAUK3B
XQxxacDY9dWD/ngkwLVDvqwo22fAjXnRmcGQQUB0amyUmq5rwGAifSywxxXA
Mhwh/NuOcMC4bvufybcUQOTqyZUXwnDA6FLzbCS1G8AVcKF7YpFuwMCh/vQN
WCrAXl+alRcsYsAUlY4VdOdJwGuQKOhi/WPAJtFF/A+7SsDglhIbl25nwGap
ieS0v0TA79yzC4w6Y8CblfpvSnBPwL9AJLcAH2TAR2PTU5LrScAwCLhflfNm
wApvHTHk6UfAYhQJ2KeeW8D5FSKzfYgtwIYb1bg2n2TAWEf4AuC5TcCIb0+z
ftBPwCPotHqeASnAPn/OdZ77Y8DE/g1XBZ5OwE+e4Oe8O2XAwozsmTaeQsBy
J3dJiXRdwHacexliQkDAKHagltaFYsA2qng0q/BFwG6hXD2SsmPAS3nM2MEZ
QsDoyu1yA+hjwBEXp5oXNE3Ao9Rn4U62YsCSReJvgtBKwBI3BG7B8mbAKPVX
4tz6SsAWKpbRdURjwN4dBlhYFUnAZfb0NTldYsBFmuyFofhIwIeY3h287GHA
9oyPrZAgScAahfBqO39lwKamuLMFtUjAY3P8GMACV8AyDaWk24ctwCJJiALF
eWPAzltZioHET8DB3guTdWlfwJI6fgNZbkLAE9GkNOCSZsB6fGGSU2NNwAR5
kNk=
         "]]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0.7, 0.3, 0.7], 
         PointSize[0.02]], 
        PointBox[{{-153.5275654115713, -39.13741223422937}, \
{-135.96025752023348`, -38.15613627194902}, {-180.8257973036424, \
-40.60261988290714}, {-154.36969457885934`, -43.29755076423771}, \
{-162.94882477498635`, -31.78574269039964}, {-161.19035198709074`, \
-33.409811903511596`}, {-198.4665309583932, -23.919442984953143`}, \
{-95.05854556120292, -32.34074972217246}, {-146.23766679559367`, \
-55.49319457952079}, {-146.08483403122153`, -53.67647063614136}, \
{-168.9490553772972, -50.060972814496886`}, {-188.55815187369205`, \
-47.7856852085095}, {-174.3039446040423, -53.0738747667939}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-32.52485173846067, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-333.622486112097, -38.66970141955528}, \
{-69.19394661382198, 53.37832406374731}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"AKL\"", "\"BER\"", "\"BOG\"", "\"DEN\"", "\"DOH\"", "\"ILR\"", 
       "\"LIS\"", "\"NYC\"", "\"SAC\"", "\"TOK\"", "\"BAL\"", "\"MIN\"", 
       "\"SAN\"", "\"SAO\"", "\"VIE\"", "\"ZRH\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0.3, 0.7], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0.3, 0.7], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7, 0.3, 0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4666666666666667, 0.2, 0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.7`", ",", "0.3`", ",", "0.7`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7, 0.3, 0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7, 0.3, 0.7], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9062130515592537`*^9, 3.9062130666593313`*^9}, {
   3.906213138332141*^9, 3.906213192007258*^9}, 3.906213240337636*^9, 
   3.9062135958203783`*^9, 3.906213841463469*^9, 3.906213899449459*^9, 
   3.906214578591296*^9, 3.9062157227116623`*^9, 3.906224804388811*^9, 
   3.906226626154619*^9, 3.906227366208997*^9, 3.906227922055966*^9, 
   3.906229070336219*^9, 3.9086291495398417`*^9, 3.9086292935792847`*^9, 
   3.9086294855685043`*^9, 3.908629570258325*^9, 3.9086347514503813`*^9, 
   3.908634857272665*^9, 3.9086349709900618`*^9, 3.908635584623761*^9, 
   3.9086380815689297`*^9, 3.908638222841168*^9, 3.908638271623929*^9, 
   3.908638384368143*^9, 3.908638493703884*^9, 3.908638574900817*^9, 
   3.908638637779344*^9, 3.90863918877915*^9, 3.9086392937141314`*^9, 
   3.908639343031014*^9, {3.9086393969681673`*^9, 3.908639414181576*^9}, 
   3.908639475816539*^9, 3.908639730014153*^9, 3.908640102692771*^9, 
   3.908640154762972*^9, 3.90864021568652*^9, 3.908641344338049*^9, 
   3.90864141515009*^9, 3.9086415895042677`*^9, 3.9086416237988453`*^9, 
   3.9086416751215897`*^9, 3.908641762019237*^9, 3.908641972583618*^9, 
   3.908642800724531*^9, 3.908642863277714*^9, 3.908643398950858*^9, 
   3.9086436738200283`*^9, 3.908643737244342*^9, 3.908646032288904*^9, 
   3.908646116912348*^9, 3.908646179995343*^9, 3.90864623141619*^9, 
   3.9086466141398363`*^9, 3.908646692634647*^9, 3.9086467716045017`*^9, 
   3.9086469581462584`*^9, 3.9086470031298313`*^9, 3.908647215829756*^9, 
   3.9086472894384747`*^9, 3.908647739697064*^9, {3.908647794331923*^9, 
   3.908647820098221*^9}, {3.9086480245183*^9, 3.9086480334985743`*^9}, {
   3.9086481216018877`*^9, 3.908648150628964*^9}, 3.908648321591537*^9, 
   3.908648436717147*^9, 3.9086485065086403`*^9, 3.908648742708947*^9, 
   3.908648822457141*^9, 3.908649536665491*^9, 3.908649679608062*^9, 
   3.908650164558803*^9, 3.908650219229965*^9, 3.908650372133815*^9, 
   3.908650412993517*^9, 3.908650765934984*^9, 3.9086511221767683`*^9, 
   3.908651242506768*^9, 3.90865142156325*^9, 3.908651476338215*^9, 
   3.908651721994928*^9, 3.9086539729453697`*^9, 3.9087095475206223`*^9, 
   3.908725267768412*^9, 3.908894125362636*^9, 3.909071126985029*^9, 
   3.90907197562882*^9, 3.9090721268777657`*^9, 3.909072291049686*^9, 
   3.909072378243609*^9, 3.909072638629183*^9, 3.909074821032898*^9, 
   3.909074874038341*^9, 3.909077402078017*^9, 3.909079556000084*^9, 
   3.909154651015345*^9, 3.909428314066989*^9, 3.9094799890822563`*^9, 
   3.909481309554689*^9, 3.9095933651870337`*^9, 3.909594422641981*^9, 
   3.909594550136883*^9, 3.909594699672555*^9, 3.909595358517828*^9, 
   3.909595553092499*^9, 3.909655127751399*^9, 3.9096570779330482`*^9, 
   3.9096574255830193`*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"708df428-1454-48cc-9c9b-f9ffae4124ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"r", "=", "1"}], ",", 
    RowBox[{"r", "<=", "nC"}], ",", 
    RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "3"}], "]"}], "]"}]}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"aux", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "1", ",", "nC"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"COL", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "11"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"auxGB", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nC"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.906213001759775*^9, 3.90621301673643*^9}, {
   3.906213202419537*^9, 3.906213234454795*^9}, 3.906213448685424*^9, {
   3.908639486630927*^9, 3.908639489616702*^9}, {3.908647838262442*^9, 
   3.908647841826652*^9}, {3.908648174686203*^9, 3.908648187962133*^9}, {
   3.909071980990038*^9, 3.909071981102585*^9}, {3.909072320983275*^9, 
   3.90907232108902*^9}, {3.909074854764702*^9, 3.909074864369454*^9}, {
   3.909657096464871*^9, 3.909657096549754*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"0ce503a5-6ad7-4365-9902-e32247231697"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{{{
        Directive[
         RGBColor[1, 0, 0], 
         PointSize[0.02]], {
         Point3DBox[{-158.2594724971338, -5.6654583845635536`, 
          1.3001515062840294`}], 
         Point3DBox[{-176.0925325629281, -8.187332920483676, \
-3.387538629064638}], 
         Point3DBox[{-177.33655622521346`, -35.01676483482308, \
-15.805090379416926`}], 
         Point3DBox[{-116.05425242890895`, -19.49368473478591, \
-21.293438903577293`}], 
         Point3DBox[{-175.24372882425115`, 
          15.929816811425297`, -73.47685835291472}], 
         Point3DBox[{-74.99667953929416, 
          1.2041046229605943`, -12.396511418414473`}], 
         Point3DBox[{-77.61557105532833, 
          32.028332225515534`, -67.02397779125884}], 
         Point3DBox[{-137.92754529584695`, 
          28.11922139585427, -71.12187058835602}], 
         Point3DBox[{-164.02701424042345`, 
          21.447349374920687`, -74.72782271903293}], 
         Point3DBox[{-62.29996045800923, 
          34.66931388589334, -32.649296474180474`}], 
         Point3DBox[{-214.4254548077729, -20.41780714993213, \
-97.03202483052846}], 
         Point3DBox[{-136.66181627178833`, 
          0.75490946416177, -71.19446046493512}], 
         Point3DBox[{-141.6532177609055, -1.196085710138906, \
-74.00536382978025}], 
         Point3DBox[{-185.09594606592094`, -6.622978781480519, \
-63.09604599643728}]}}, {
        Directive[
         RGBColor[0, 0, 1], 
         PointSize[0.02]], {
         Point3DBox[{-283.02498067448397`, -11.60587864888754, \
-16.45863841423648}], 
         Point3DBox[{-260.43983599209247`, -12.937021501855455`, \
-6.004941498906408}], 
         Point3DBox[{-291.5060133759562, -21.822607750133415`, \
-15.230994594411683`}], 
         Point3DBox[{-284.4317696379759, -20.333971210388206`, \
-12.02640467754767}], 
         Point3DBox[{-238.48726673471344`, -9.439789492656772, \
-13.679542653149834`}], 
         Point3DBox[{-258.0013511805861, 
          12.030935480012957`, -45.392498261649735`}], 
         Point3DBox[{-152.6759701893974, -32.94562428024023, \
-17.335133572159148`}], 
         Point3DBox[{-171.46994560682052`, -23.211971771575527`, \
-11.986829184302445`}], 
         Point3DBox[{-153.6400613759631, -34.669268918595414`, \
-12.262545287922945`}], 
         Point3DBox[{-96.98548309336321, -18.24675045087377, \
-9.638438422768184}], 
         Point3DBox[{-142.63584156063322`, -8.698451749961311, \
-12.481870748711875`}], 
         Point3DBox[{-146.49461384241283`, -26.983142655283032`, \
-15.637782431338662`}], 
         Point3DBox[{-191.21473820421846`, -34.0165327244126, \
-14.052749229111782`}], 
         Point3DBox[{-230.70903271606016`, -15.744736337642891`, \
-13.631334171407623`}], 
         Point3DBox[{-273.5007594050926, -0.14236699858442137`, \
-19.500158949597488`}]}}, {
        Directive[
         RGBColor[0, 1, 0], 
         PointSize[0.02]], {
         Point3DBox[{-315.1313731898696, -10.69051637719047, \
-24.842248060340715`}], 
         Point3DBox[{-297.39299110879074`, -16.06579472091888, \
-20.66109334771513}], 
         Point3DBox[{-297.78654586938757`, -15.812650966550919`, \
-22.005448595722218`}], 
         Point3DBox[{-311.8707470883647, -9.337058887885938, \
-22.740096000064895`}], 
         Point3DBox[{-333.622486112097, -29.328340398157465`, \
-13.899041982985246`}], 
         Point3DBox[{-311.79115903969387`, -17.705527094507246`, \
-16.52916211026731}], 
         Point3DBox[{-308.20768695634865`, -15.08637942826708, \
-20.87823344323029}], 
         Point3DBox[{-320.8111286870329, -21.794475797927717`, \
-19.093649536460216`}], 
         Point3DBox[{-323.78901691288667`, -1.9182541526967327`, \
-28.209893629956056`}], 
         Point3DBox[{-320.22591252245786`, -26.668016629464745`, \
-16.76639443920686}], 
         Point3DBox[{-277.63906473771345`, -0.8943916654545419, \
-18.67276100593636}], 
         Point3DBox[{-325.66515062986446`, -15.745910164488393`, \
-22.025254668461564`}], 
         Point3DBox[{-299.92288978322483`, -15.803618406286418`, \
-13.288297179911822`}], 
         Point3DBox[{-264.3924226579373, 
          9.97017950734952, -27.951541531099473`}], 
         Point3DBox[{-287.52404306423324`, -3.3312498520455236`, \
-22.009528908575806`}]}}, {
        Directive[
         RGBColor[0.6, 0.4, 0.2], 
         PointSize[0.02]], {
         Point3DBox[{-71.03899523561336, 19.669360301271084`, 
          0.7727970807998883}], 
         Point3DBox[{-57.088672571247486`, 
          13.140635743106381`, -1.848029789490493}], 
         Point3DBox[{-95.36873302939001, 20.59460873774251, 
          3.8158784206683976`}], 
         Point3DBox[{-96.68400536281305, -1.8059176817123586`, \
-8.045972963176727}], 
         Point3DBox[{-89.28357925988374, 
          4.878711101657293, -9.696071556122744}], 
         Point3DBox[{-93.3552811352796, 
          6.70590151164923, -19.04719481185503}], 
         Point3DBox[{-63.877482361598496`, 
          7.994365080803844, -17.731512900753977`}], 
         Point3DBox[{-80.7850273191631, 15.040489131308286`, 
          0.33957653920917075`}], 
         Point3DBox[{-66.00228895681678, 20.452312403458368`, 
          3.6628551077221374`}], 
         Point3DBox[{-83.53297054460583, 13.612126733816023`, 
          4.4665881730694}], 
         Point3DBox[{-70.02681128165608, 
          14.053014489037212`, -26.51153963875411}], 
         Point3DBox[{-53.60135967972423, 
          18.494509079995982`, -6.999687066945499}], 
         Point3DBox[{-93.52906648978094, 
          18.517304343925147`, -23.518405694067333`}], 
         Point3DBox[{-103.64473189136893`, 14.95645513702524, 
          4.52091815316985}], 
         Point3DBox[{-65.06627897033972, 
          12.015665154965458`, -12.023589199905363`}], 
         Point3DBox[{-48.043852590374115`, 15.289081073819696`, 
          0.6557079814295506}], 
         Point3DBox[{-96.98978915247751, 14.905169282161646`, 
          3.1243344364542676`}], 
         Point3DBox[{-81.433413974848, 
          21.535592649784785`, -11.568656803259874`}], 
         Point3DBox[{-84.82247607408951, 
          20.33929426346548, -0.5778371229754669}], 
         Point3DBox[{-70.86648753396236, 
          10.839915043618118`, -1.7257796833116128`}], 
         Point3DBox[{-56.2874605625351, 
          19.555087178227012`, -8.43416512076049}], 
         Point3DBox[{-49.88320781960983, 
          17.226864994541508`, -3.161118372140054}], 
         Point3DBox[{-169.23974193082742`, -28.267758952889892`, \
-10.562227911043818`}], 
         Point3DBox[{-136.8282340367544, -44.296516965859404`, \
-22.406926323686015`}], 
         Point3DBox[{-136.64947089346865`, -30.68472984311857, \
-6.686215670457962}], 
         Point3DBox[{-99.3468600138667, -24.76835364395508, \
-15.61552808395319}], 
         Point3DBox[{-168.63779638505983`, -29.9109289781583, \
-19.44672827751599}], 
         Point3DBox[{-175.88281329024213`, -47.4213373986474, \
-21.312535934460893`}], 
         Point3DBox[{-141.18594205467087`, -54.964956111176264`, \
-29.088895967809975`}], 
         Point3DBox[{-135.72983350382336`, -37.08765106530126, \
-11.75637175141629}], 
         Point3DBox[{-136.95023012264198`, -45.254564997341376`, \
-25.42402529696036}], 
         Point3DBox[{-139.72501990396472`, -55.10548615040169, \
-29.335749171632823`}], 
         Point3DBox[{-83.207523492306, -12.19826335551453, 
          0.791197074002806}], 
         Point3DBox[{-144.11453653087958`, -41.947046896058545`, \
-16.738285442845395`}], 
         Point3DBox[{-120.24371620102146`, -29.143667128242598`, \
-15.858139254380696`}], 
         Point3DBox[{-156.43914667131108`, -48.19838354606456, \
-31.91429624343934}], 
         Point3DBox[{-131.18444843403898`, -38.75947620434834, \
-12.937367072697631`}], 
         Point3DBox[{-130.8916033693956, -46.33378299631571, \
-25.196126350167162`}], 
         Point3DBox[{-67.99034044755082, -14.748614015875477`, \
-1.5402604342156545`}], 
         Point3DBox[{-139.08949953226244`, -43.07630650280649, \
-18.05073756349877}], 
         Point3DBox[{-112.98354638161935`, -31.38261604210316, \
-16.647117894973988`}], 
         Point3DBox[{-150.93564294452943`, -49.579472727088856`, \
-31.372621581047277`}], 
         Point3DBox[{-150.2824850628505, -46.27896599238105, \
-17.904303915538968`}], 
         Point3DBox[{-138.16162805174156`, -53.10017975591342, \
-23.58789151474803}]}}, {
        Directive[
         GrayLevel[0], 
         PointSize[0.02]], {
         Point3DBox[{-71.50080636321015, 
          5.940460308351451, -10.186523560689672`}], 
         Point3DBox[{-96.85667583342544, -0.5026034841565519, \
-16.29081748330482}], 
         Point3DBox[{-102.76758615068863`, 
          20.036240284035635`, -19.990017819568237`}], 
         Point3DBox[{-151.13850827891508`, -16.980468655779017`, \
-15.829307929065607`}], 
         Point3DBox[{-111.7284854854234, -3.762316764462902, \
-13.36814006559219}], 
         Point3DBox[{-127.52799532011272`, -24.368660758906188`, \
-12.217779125400137`}], 
         Point3DBox[{-150.7474746712036, -28.623179264333565`, \
-15.182863373461732`}], 
         Point3DBox[{-133.22422990667212`, -15.190842087005734`, \
-11.641393202234843`}], 
         Point3DBox[{-101.91165247817739`, 
          2.356591818436428, -14.955435310945166`}], 
         Point3DBox[{-109.79873008982455`, 
          3.058413598655612, -17.05580663383463}], 
         Point3DBox[{-110.21151647720353`, -10.540564939125563`, \
-12.927855653146846`}], 
         Point3DBox[{-136.52556557617845`, -16.982430353081426`, \
-12.74396609729297}], 
         Point3DBox[{-119.14926256838885`, -10.295581398171041`, \
-15.61365600989248}], 
         Point3DBox[{-154.82191979143772`, -50.27440858127915, \
-30.373808688383953`}], 
         Point3DBox[{-216.93886246955753`, -49.19491344428948, \
-17.113391594355065`}], 
         Point3DBox[{-176.76446497021684`, -41.38097495157801, \
-30.1005058915699}], 
         Point3DBox[{-119.50292807471818`, 
          2.987937448802974, -10.965261452688285`}], 
         Point3DBox[{-163.75835268072638`, -53.962214467608135`, \
-36.968533580672016`}], 
         Point3DBox[{-168.51818271345468`, -39.32574538527753, \
-30.6821119283789}], 
         Point3DBox[{-192.76925018392046`, -30.03268013030077, \
-20.966284961636514`}], 
         Point3DBox[{-156.6107198523302, -44.801350668643245`, \
-30.970656278046654`}], 
         Point3DBox[{-169.53779813010536`, -38.42226859545626, \
-24.004004838007475`}], 
         Point3DBox[{-134.57853491204435`, -39.92752946469275, \
-24.432118164333883`}], 
         Point3DBox[{-188.8310142049564, -55.11462645681567, \
-33.094458610808104`}], 
         Point3DBox[{-176.18354416227433`, -31.190787190319725`, \
-31.890282216383163`}], 
         Point3DBox[{-197.60855828256638`, -44.58261866487693, \
-23.061377503522277`}], 
         Point3DBox[{-186.07360152424255`, -34.9169933443866, \
-26.06354538832408}]}}, {
        Directive[
         RGBColor[1, 0.5, 0.5], 
         PointSize[0.02]], {
         Point3DBox[{-257.89279508889837`, 
          3.0314178714220787`, -36.241178702223955`}], 
         Point3DBox[{-149.4527954118427, 
          47.1126435871765, -17.32544416483171}], 
         Point3DBox[{-224.58959873605946`, 
          24.04493436010463, -72.32105503824776}], 
         Point3DBox[{-197.47335137828725`, 
          5.340198537932437, -24.546960036277362`}], 
         Point3DBox[{-107.79893151010471`, 
          27.935557042260015`, -32.10361002111539}], 
         Point3DBox[{-244.1033970235991, 
          45.81275030221434, -69.581199474644}], 
         Point3DBox[{-168.66417170516232`, 
          37.12365092627135, -64.63390284248737}], 
         Point3DBox[{-206.39629827987767`, 
          37.090576668519844`, -68.724074301684}], 
         Point3DBox[{-159.37017340211924`, 
          51.1908351034853, -5.74093160301096}], 
         Point3DBox[{-246.36752809509557`, 
          52.887904961954575`, -85.98821214863872}], 
         Point3DBox[{-255.27869013572456`, -23.75197233622842, \
-37.34627425792088}], 
         Point3DBox[{-155.66225684003268`, 
          30.153231171374905`, -75.08969746498123}], 
         Point3DBox[{-264.8310576303958, 
          53.37832406374731, -69.19870742349032}], 
         Point3DBox[{-281.9111880958731, 
          33.550511672200436`, -69.12983539370269}], 
         Point3DBox[{-130.65689538989363`, 
          23.68843842642935, -51.608381778588985`}], 
         Point3DBox[{-187.63323274050768`, -41.84431074787915, \
-14.815883232307016`}], 
         Point3DBox[{-144.55681779554436`, -37.66914574361526, \
-20.310525730239142`}], 
         Point3DBox[{-276.5017464119408, -9.818076117125898, \
-31.068934968037528`}], 
         Point3DBox[{-215.56957213249248`, -51.60482995964152, \
-26.28009528145912}], 
         Point3DBox[{-219.80877770525404`, -25.706968462190765`, \
-24.653180773490682`}], 
         Point3DBox[{-253.4553561700844, -42.923191223324714`, \
-26.372948901951254`}], 
         Point3DBox[{-227.22902600015206`, -60.14212447914217, \
-27.71602057165286}], 
         Point3DBox[{-219.39862107166184`, -59.99792410892561, \
-30.71011342095205}], 
         Point3DBox[{-193.58142703529182`, -56.082348200184846`, \
-24.381269511540747`}], 
         Point3DBox[{-210.7876223779126, -37.39507870617649, \
-23.40283174038113}], 
         Point3DBox[{-242.95622985964633`, -45.57028189078433, \
-31.396520129604422`}], 
         Point3DBox[{-192.51826369472755`, -52.61027703015324, \
-25.69923211013028}], 
         Point3DBox[{-225.09091162185464`, -48.320418919472885`, \
-13.626825285179295`}], 
         Point3DBox[{-218.70939397001143`, -50.56856280363976, \
-19.89296387562568}], 
         Point3DBox[{-253.38101705445035`, -37.69697035931403, \
-17.47508231746162}], 
         Point3DBox[{-230.76095844418734`, -52.85698381599572, \
-12.814998416469042`}], 
         Point3DBox[{-228.2206718016614, -50.223521875162035`, \
-15.1767396045076}], 
         Point3DBox[{-241.1004239772723, -49.51356328427548, \
-13.129241846268869`}]}}, {
        Directive[
         GrayLevel[0.5], 
         PointSize[0.02]], {
         Point3DBox[{-102.96421092745302`, 
          33.792057615124214`, -39.427754984532555`}], 
         Point3DBox[{-40.85215808247168, 
          22.282630417962917`, -26.782492395522155`}], 
         Point3DBox[{-159.24215771139242`, 
          4.40563848243449, -67.02173014510727}], 
         Point3DBox[{-159.6386966922351, 
          0.5603119256389206, -60.8365003356207}], 
         Point3DBox[{-61.475517055349066`, 
          0.08896381824459532, -31.37578947283085}], 
         Point3DBox[{-162.96527449267285`, 
          15.997329169013796`, -88.36315826561436}], 
         Point3DBox[{-88.60612038117841, 
          38.55665203295487, -45.18578757599213}], 
         Point3DBox[{-68.08055450733134, 
          26.309300533271717`, -43.120733709633996`}], 
         Point3DBox[{-83.92330342270668, 
          23.876072975707224`, -52.19035077579841}], 
         Point3DBox[{-128.1622334733137, 
          27.075265762922136`, -57.45919053286185}], 
         Point3DBox[{-60.527192052011074`, 
          21.934301348069788`, -7.731624597756672}], 
         Point3DBox[{-38.66970141955528, 
          15.097293271100838`, -11.110559068848296`}], 
         Point3DBox[{-151.87219699713813`, -56.7138741650509, \
-10.380813980958814`}], 
         Point3DBox[{-77.25208162874965, -19.48882673800786, \
-9.711566325026833}]}}, {
        Directive[
         RGBColor[1, 0, 1], 
         PointSize[0.02]], {
         Point3DBox[{-277.41061135625637`, -3.2810663139804745`, \
-20.272277905274372`}], 
         Point3DBox[{-245.13764538418826`, 
          47.22811305316405, -45.75412250253214}], 
         Point3DBox[{-223.85147611505016`, 
          2.9183599643150586`, -16.264367705020348`}], 
         Point3DBox[{-267.2099895572278, 
          21.879636068078362`, -34.092061847728786`}], 
         Point3DBox[{-270.004999427065, -13.279586876418698`, \
-17.34674627895586}], 
         Point3DBox[{-201.0249433438198, 
          22.813765512485663`, -32.85612215701816}], 
         Point3DBox[{-283.18049041605786`, -0.04167312078156016, \
-15.66900864312126}], 
         Point3DBox[{-262.0280170317561, -6.670626703363276, \
-14.221645267623138`}], 
         Point3DBox[{-228.0146131447751, 
          12.1279382653358, -21.06145113174126}], 
         Point3DBox[{-237.15421036732857`, -5.8911548591259475`, \
-15.839935305715645`}], 
         Point3DBox[{-214.04178489783865`, 
          1.1329075174525514`, -12.45306770519171}], 
         Point3DBox[{-264.244044622249, 
          5.097142379841628, -19.643483653924406`}], 
         Point3DBox[{-248.9772213244028, 
          20.704874246998806`, -23.840670918111897`}], 
         Point3DBox[{-256.9618753963856, -4.818278716263613, \
-18.551512646365786`}], 
         Point3DBox[{-256.15822683975966`, 
          8.097922008939399, -17.57090627498378}], 
         Point3DBox[{-207.75275579820325`, 
          28.65293322015564, -28.5229927020307}], 
         Point3DBox[{-242.38640866303402`, -6.398500421997973, \
-17.356380050093726`}], 
         Point3DBox[{-260.60474897389037`, -4.342702364455711, \
-20.55124738140669}], 
         Point3DBox[{-174.76657083435245`, -0.39003411697737533`, \
-9.62735076571829}], 
         Point3DBox[{-196.0169700137199, 
          7.051897910164289, -12.489697642115527`}], 
         Point3DBox[{-232.2595904235519, 
          2.6811863290951266`, -14.333529282525863`}], 
         Point3DBox[{-261.23948597362005`, -4.399092785097004, \
-19.71732960522394}], 
         Point3DBox[{-223.3471471311112, -2.203966067926764, \
-18.768382199584465`}], 
         Point3DBox[{-249.8118081378178, 
          49.8898168015473, -36.10343212479727}], 
         Point3DBox[{-266.0050063208228, -0.24659965847601484`, \
-18.01872770463753}], 
         Point3DBox[{-282.25047212520593`, -6.838713794791026, \
-15.007824752179982`}], 
         Point3DBox[{-173.67053538958987`, -35.11090710812179, \
-37.89140555064693}], 
         Point3DBox[{-199.28154059924364`, -22.141561594931478`, \
-13.93162884955794}], 
         Point3DBox[{-193.6110388604584, -34.73607562284239, \
-17.263828950942145`}], 
         Point3DBox[{-209.99490578729893`, -46.832945311199666`, \
-38.55941673878334}], 
         Point3DBox[{-213.52839536935318`, -26.806407383846036`, \
-26.0266780583103}], 
         Point3DBox[{-179.27918592042562`, -39.78997601079365, \
-34.54472998353568}], 
         Point3DBox[{-159.8225972578999, -39.01887283999231, \
-37.00928560676162}], 
         Point3DBox[{-245.98986645193747`, -34.20477181714817, \
-41.104209648528645`}], 
         Point3DBox[{-203.37224721292068`, -69.19394661382198, \
-36.17704469034341}], 
         Point3DBox[{-163.04824281345273`, -41.352507513166344`, \
-29.22879699924388}], 
         Point3DBox[{-190.1600823890298, -31.568150911049656`, \
-24.016908980382453`}], 
         Point3DBox[{-184.27265243016527`, -39.11311896162927, \
-35.77291826357184}], 
         Point3DBox[{-216.92795795843062`, -29.43043542576271, \
-25.5800478830165}], 
         Point3DBox[{-262.9454648975533, -15.832469281428331`, \
-31.347467550292347`}], 
         Point3DBox[{-155.54659137843032`, -36.35029241921571, \
-35.03701422484679}], 
         Point3DBox[{-185.2651907566281, -43.461700037994206`, \
-39.77838352997654}], 
         Point3DBox[{-209.31478021902322`, -36.046669204224656`, \
-44.197584833483695`}], 
         Point3DBox[{-227.40349970938504`, -42.3970015085625, \
-37.68276902862165}], 
         Point3DBox[{-189.8320590221126, -34.3744114333946, \
-40.77213400481724}], 
         Point3DBox[{-169.5119336061893, -34.5657580110641, \
-32.2806735677657}]}}, {
        Directive[
         RGBColor[0, 1, 1], 
         PointSize[0.02]], {
         Point3DBox[{-185.118150635141, -39.347446113537444`, \
-18.355536964796336`}], 
         Point3DBox[{-183.76239659277496`, -37.58693100662187, \
-20.14832669503458}], 
         Point3DBox[{-181.03664124195362`, -32.13171370702819, \
-21.746372476773665`}], 
         Point3DBox[{-204.56746502066974`, -29.98826524479623, \
-24.069650625791525`}], 
         Point3DBox[{-188.69015918531784`, -30.27351492978632, \
-23.376553717356174`}], 
         Point3DBox[{-173.91407439338474`, -15.565815592334989`, \
-27.09584133249323}], 
         Point3DBox[{-179.08293966027907`, -48.64756052209326, \
-24.641440259273832`}], 
         Point3DBox[{-208.8713890936928, -46.36615687451811, \
-22.831395791548545`}], 
         Point3DBox[{-170.83130798503018`, -20.6369971962418, \
-15.675852977551425`}], 
         Point3DBox[{-211.6852053055459, -43.45282930810413, \
-25.08008071879705}], 
         Point3DBox[{-187.3826790959717, -39.19078086604756, \
-20.03619933811904}], 
         Point3DBox[{-214.3408422425207, -46.07030622612406, \
-26.929154533638172`}], 
         Point3DBox[{-194.75023019157862`, -47.32363615341963, \
-25.057117452530182`}], 
         Point3DBox[{-172.1741300650228, -26.03878540245679, \
-28.31815734287436}], 
         Point3DBox[{-187.54189338008499`, -47.44910895885652, \
-25.02428789848176}], 
         Point3DBox[{-193.35137808277528`, -31.7304575706541, \
-24.247383176481623`}]}}, {
        Directive[
         RGBColor[1, 0.5, 0], 
         PointSize[0.02]], {
         Point3DBox[{-170.59819800460912`, 
          2.692450058303475, -9.32975334584626}], 
         Point3DBox[{-246.27429537034027`, -8.784095071793999, \
-13.74010148413549}], 
         Point3DBox[{-217.02744042459284`, -9.66713541510147, \
-13.827745438083852`}], 
         Point3DBox[{-221.82714328501675`, -4.811189309145831, \
-8.939959113820507}], 
         Point3DBox[{-260.0419126929363, -14.154293549084379`, \
-10.26138780461013}], 
         Point3DBox[{-289.806270428898, -15.895257137684439`, \
-15.307599723166575`}], 
         Point3DBox[{-219.956200386043, -17.439348682222516`, \
-9.107829997796305}], 
         Point3DBox[{-225.63315364551414`, -15.60646175203663, \
-17.619523669388364`}], 
         Point3DBox[{-280.9179081409793, -24.008574884034452`, \
-15.296774092469828`}], 
         Point3DBox[{-203.71681794725365`, -9.697338431118311, \
-14.607105864664465`}], 
         Point3DBox[{-253.551461965879, -10.142890035136851`, \
-11.117203138656151`}], 
         Point3DBox[{-258.33350833349823`, -13.914562259329848`, \
-16.496417531947394`}], 
         Point3DBox[{-295.58076140873516`, -16.66531590505361, \
-9.640896845265942}], 
         Point3DBox[{-184.92960921325087`, -23.009339630800497`, \
-16.249433864844654`}], 
         Point3DBox[{-200.05004351657456`, -3.586655695428284, 
          1.1800393208683424`}], 
         Point3DBox[{-294.9036845544226, -27.187109624142444`, \
-0.7482444481950594}], 
         Point3DBox[{-231.4822548967703, -7.1848403436684265`, \
-4.332452786365447}], 
         Point3DBox[{-282.9773019149711, -28.337756394063653`, \
-2.862624514251955}], 
         Point3DBox[{-203.53275955035724`, -10.23631679522343, \
-7.583611904671251}], 
         Point3DBox[{-190.84871518288642`, 
          35.130908229143735`, -12.978462671268154`}], 
         Point3DBox[{-221.45636960196464`, -5.445007987153616, \
-16.33702654627755}], 
         Point3DBox[{-264.9287072461476, 
          5.179480075570318, -11.106078746075443`}], 
         Point3DBox[{-268.1307580840496, -6.926896765090284, \
-19.004505377587364`}], 
         Point3DBox[{-244.54327184229683`, -13.171981483538616`, \
-13.696301435148097`}], 
         Point3DBox[{-145.3778789534653, -51.808230108852655`, \
-21.650179247876398`}], 
         Point3DBox[{-159.9183235924023, -53.46142533692391, \
-24.96890176668245}], 
         Point3DBox[{-187.45594552641614`, -41.49770790788425, \
-26.65226326651348}], 
         Point3DBox[{-153.82959542397973`, -62.87727164969984, \
-25.31257577050126}], 
         Point3DBox[{-160.96883732872627`, -51.8404030592124, \
-24.25440715196288}], 
         Point3DBox[{-183.6119841188788, -47.827276362773844`, \
-20.85123955040862}], 
         Point3DBox[{-110.47899437796289`, -14.766584012900227`, \
-6.29035277860403}], 
         Point3DBox[{-164.97542993185579`, -59.45214879153235, \
-30.01371927546453}], 
         Point3DBox[{-63.628866590296695`, -12.50316222627959, \
-5.176062798028067}], 
         Point3DBox[{-159.86309328395322`, -61.23453796561583, \
-25.24039480025899}], 
         Point3DBox[{-169.8668097865179, -37.23604129839215, \
-29.453637023076993`}], 
         Point3DBox[{-117.82087933193341`, -32.51861876044943, \
-13.604326887157466`}], 
         Point3DBox[{-148.18244487133165`, -43.8802247609314, \
-23.964594804723795`}], 
         Point3DBox[{-157.58035152522956`, -36.2012282370002, \
-27.994752013292327`}], 
         Point3DBox[{-159.25042101329677`, -58.40697034033486, \
-24.217950441069732`}], 
         Point3DBox[{-149.69712896613518`, -53.62898062275339, \
-25.525570217898284`}], 
         Point3DBox[{-183.58611203025117`, -53.95986584944541, \
-21.27982769786199}], 
         Point3DBox[{-154.13938216523155`, -50.166758540140776`, \
-21.62556197106888}], 
         Point3DBox[{-146.91323373646006`, -49.942429295090314`, \
-20.930584649036824`}], 
         Point3DBox[{-143.3979634616446, -50.25441522130306, \
-14.243823502280087`}], 
         Point3DBox[{-171.97600314117955`, -49.41423651233826, \
-20.661691377040935`}], 
         Point3DBox[{-92.04297470715896, -14.765347619197744`, \
-8.170859664128052}], 
         Point3DBox[{-155.80529905908867`, -63.53520326007093, \
-30.146020217641215`}], 
         Point3DBox[{-125.6478011718673, -36.862091480860855`, \
-15.71980957245022}], 
         Point3DBox[{-180.58986885252725`, -58.775987908936216`, \
-23.55386539669602}]}}, {
        Directive[
         RGBColor[0.7, 0.3, 0.7], 
         PointSize[0.02]], {
         Point3DBox[{-153.5275654115713, -39.13741223422937, \
-22.711579613974493`}], 
         Point3DBox[{-135.96025752023348`, -38.15613627194902, \
-20.951078453155315`}], 
         Point3DBox[{-180.8257973036424, -40.60261988290714, \
-27.696002353409572`}], 
         Point3DBox[{-154.36969457885934`, -43.29755076423771, \
-31.21338023835712}], 
         Point3DBox[{-162.94882477498635`, -31.78574269039964, \
-27.662478001133426`}], 
         Point3DBox[{-161.19035198709074`, -33.409811903511596`, \
-26.17197006295042}], 
         Point3DBox[{-198.4665309583932, -23.919442984953143`, \
-42.85486470752727}], 
         Point3DBox[{-95.05854556120292, -32.34074972217246, \
-19.31613067048763}], 
         Point3DBox[{-146.23766679559367`, -55.49319457952079, \
-29.06343580819021}], 
         Point3DBox[{-146.08483403122153`, -53.67647063614136, \
-28.02905902837703}], 
         Point3DBox[{-168.9490553772972, -50.060972814496886`, \
-31.424507388155963`}], 
         Point3DBox[{-188.55815187369205`, -47.7856852085095, \
-38.399170235856616`}], 
         Point3DBox[{-174.3039446040423, -53.0738747667939, \
-26.240737428660942`}]}}, {
        Directive[
         RGBColor[1, 0, 0], 
         PointSize[0.02]], {
         Point3DBox[{-205.4476927218785, -62.54009202998962, \
-36.30352282418758}], 
         Point3DBox[{-210.73016298123986`, -68.17148093234508, \
-31.676757875706052`}], 
         Point3DBox[{-213.87176381398595`, -63.68535295963568, \
-36.7290817003924}], 
         Point3DBox[{-226.95892557960315`, -56.44556787572871, \
-38.43078016764481}], 
         Point3DBox[{-197.63824390906484`, -68.77947954470113, \
-38.524429531201406`}], 
         Point3DBox[{-216.07243642115802`, -62.5150893725301, \
-40.38101886082012}]}}, {
        Directive[
         RGBColor[0, 0, 1], 
         PointSize[0.02]], {
         Point3DBox[{-188.12697845751845`, -56.75922741941167, \
-25.415404482203343`}], 
         Point3DBox[{-203.45370381487078`, -59.32223457814537, \
-30.310086592179488`}], 
         Point3DBox[{-72.46301116652192, -19.1265278528517, \
-4.40955971471016}], 
         Point3DBox[{-123.2401365823388, -35.435788804205345`, \
-11.232841867348391`}], 
         Point3DBox[{-187.1214791723346, -61.439714978265414`, \
-30.69815943698309}], 
         Point3DBox[{-190.9782213267198, -45.87444177002543, \
-20.169686388043612`}], 
         Point3DBox[{-143.18981592555065`, -45.81945947371859, \
-11.520438740746808`}], 
         Point3DBox[{-118.93707138450691`, -34.21444478530833, \
-13.29060715625432}], 
         Point3DBox[{-222.86966461337505`, -67.47205907486813, \
-28.81890782143682}], 
         Point3DBox[{-88.10856946603916, -39.551000454605685`, \
-9.813733042113006}], 
         Point3DBox[{-137.78069730047335`, -36.315879893733346`, \
-11.679839844131799`}], 
         Point3DBox[{-142.80922843943995`, -33.88575714551692, \
-11.497441327906973`}], 
         Point3DBox[{-95.17598725906467, -19.50081468597293, \
-2.056390875639421}], 
         Point3DBox[{-196.3163669964649, -43.52577327042419, \
-23.877928741230996`}], 
         Point3DBox[{-199.86380663121287`, -50.56117665680034, \
-26.6803521512396}], 
         Point3DBox[{-209.3341660939021, -55.864924306948524`, \
-29.24274874947443}]}}, {
        Directive[
         RGBColor[0, 1, 0], 
         PointSize[0.02]], {
         Point3DBox[{-139.27130948719383`, -58.65085150492289, \
-30.706971734500108`}], 
         Point3DBox[{-170.00958286869724`, -52.014083735702336`, \
-30.08012044836888}], 
         Point3DBox[{-145.89072950226375`, -60.637746608598704`, \
-27.99225782907137}], 
         Point3DBox[{-131.47238934701363`, -17.112994680336957`, \
-25.003342898535983`}], 
         Point3DBox[{-113.47879925727207`, -50.449211557797234`, \
-26.829362563036604`}], 
         Point3DBox[{-133.7463318591843, -49.23415996244921, \
-30.9182442553826}], 
         Point3DBox[{-116.78267864669992`, -59.19508473451346, \
-27.062987732311782`}], 
         Point3DBox[{-133.84379462490242`, -62.41895829543526, \
-21.662583697010326`}], 
         Point3DBox[{-145.30370345919394`, -51.44945301597353, \
-31.18351637344326}], 
         Point3DBox[{-131.77125954481247`, -37.371668511456974`, \
-19.555736775781703`}], 
         Point3DBox[{-134.87206675400887`, -57.40181419281653, \
-31.925809108864314`}], 
         Point3DBox[{-139.69963834413724`, -34.45408675674875, \
-14.125374898560938`}], 
         Point3DBox[{-164.41767624820778`, -47.39919542935644, \
-18.488984358401666`}], 
         Point3DBox[{-95.79199335619877, -50.32524428900645, \
-24.92467709228849}], 
         Point3DBox[{-152.44860934421496`, -18.23822227237584, \
-12.814471608996268`}], 
         Point3DBox[{-89.2491459362095, -51.61104097577081, \
-23.439562043636272`}], 
         Point3DBox[{-108.7687971791087, -39.67476541774473, \
-20.340968019088663`}], 
         Point3DBox[{-162.14894171416, -55.034340166576165`, \
-29.044626226925885`}], 
         Point3DBox[{-200.49277565443353`, -52.30369061907827, \
-27.00341657348782}], 
         Point3DBox[{-70.77208857514346, -39.06690599404019, \
-15.699594542404453`}], 
         Point3DBox[{-94.62611684202355, -49.180183933649104`, \
-22.621929591522942`}], 
         Point3DBox[{-146.08042608195512`, -51.5238907240776, \
-34.53782314765178}], 
         Point3DBox[{-161.64896936691449`, -64.2556430743866, \
-34.77198146788546}], 
         Point3DBox[{-141.44092959427607`, -64.8112170507651, \
-31.269284740138964`}], 
         Point3DBox[{-154.77551115993873`, -45.22048464478911, \
-14.85976065198615}]}}, {
        Directive[
         RGBColor[0.6, 0.4, 0.2], 
         PointSize[0.02]], {
         Point3DBox[{-170.88583026610337`, -33.29159970329557, \
-25.667835938137465`}], 
         Point3DBox[{-236.09460761738924`, -47.57126427254428, \
-21.841668565992215`}], 
         Point3DBox[{-173.6989647435427, -50.80809629632011, \
-22.995009733261867`}], 
         Point3DBox[{-218.84243539599785`, -49.577661539140365`, \
-30.492694683631846`}], 
         Point3DBox[{-183.00234408715014`, -55.906252262011876`, \
-31.77622074581877}], 
         Point3DBox[{-120.97321395965635`, -32.5463310208156, \
-22.033902645391166`}], 
         Point3DBox[{-207.91414992552313`, -44.260360455208755`, \
-29.314629300015014`}], 
         Point3DBox[{-177.99007299244767`, -35.3305519717325, \
-24.50737360757571}], 
         Point3DBox[{-174.2315843559258, -47.47376877528625, \
-27.516519020154714`}], 
         Point3DBox[{-172.76928074988786`, -44.1504278065253, \
-25.063401173903017`}], 
         Point3DBox[{-196.18771631033263`, -44.00654614752564, \
-26.005004527846843`}], 
         Point3DBox[{-216.13693017745055`, -40.58246007216718, \
-25.331690740753512`}], 
         Point3DBox[{-154.3786363892037, -32.70405902592586, \
-22.291344294222945`}], 
         Point3DBox[{-216.6856013221803, -43.848416883273245`, \
-21.28711350245907}], 
         Point3DBox[{-223.54049326786196`, -35.53590999181214, \
-40.6169323431232}], 
         Point3DBox[{-158.6296381930988, -38.75528719539848, \
-27.661801856393733`}]}}, {
        Directive[
         GrayLevel[0], 
         PointSize[0.02]], {
         Point3DBox[{-176.9948926740962, -32.48766035082198, \
-31.581943637484063`}], 
         Point3DBox[{-128.62155239584175`, -28.147594209102273`, \
-19.676738547002618`}], 
         Point3DBox[{-161.5030555088789, -45.01553628982228, \
-14.582630475986585`}], 
         Point3DBox[{-201.98151326406568`, -3.770387351025196, \
-13.575702760642749`}], 
         Point3DBox[{-173.46190385701033`, -43.68888337478021, \
-17.88836985249448}], 
         Point3DBox[{-178.15355754190165`, -41.819205947755236`, \
-21.87422076437324}], 
         Point3DBox[{-183.53954034373965`, -35.77246200519767, \
-23.263204287506213`}], 
         Point3DBox[{-145.05924734921751`, -27.570063455051127`, \
-24.03959470292116}], 
         Point3DBox[{-130.43185357787507`, -56.490826996327876`, \
-30.049237703674816`}], 
         Point3DBox[{-183.61470936712965`, -37.51494072850399, \
-26.805073192177993`}], 
         Point3DBox[{-151.46046622227266`, -27.02602038918384, \
-30.101142550071955`}], 
         Point3DBox[{-228.72701826046654`, -43.176345817311514`, \
-21.342067168528658`}], 
         Point3DBox[{-222.4604971602371, -44.11248794171687, \
-31.652003787372607`}], 
         Point3DBox[{-187.09453293247796`, -19.313776961937045`, \
-33.81383245725579}], 
         Point3DBox[{-191.8614647606699, -23.526025089284346`, \
-21.31168407327114}], 
         Point3DBox[{-159.03014872993722`, -29.677734080447202`, \
-26.653192632743988`}]}}}, {}, {}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic, Automatic}, 
     FaceGrids -> None, Ticks -> {Automatic, Automatic, Automatic}, 
     AxesLabel -> {None, None, None}, Axes -> True, 
     PlotRange -> {All, All, All}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Lighting -> {{"Ambient", 
        GrayLevel[0.5]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{0, 2, 2}]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{2, 0, 2}]}}, FaceGridsStyle -> Automatic, 
     BoxRatios -> {1, 1, 0.4}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"AKL\"", "\"BER\"", "\"BOG\"", "\"DEN\"", "\"DOH\"", "\"ILR\"", 
       "\"LIS\"", "\"NYC\"", "\"SAC\"", "\"TOK\"", "\"BAL\"", "\"MIN\"", 
       "\"SAN\"", "\"SAO\"", "\"VIE\"", "\"ZRH\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0.3, 0.7], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0.3, 0.7], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7, 0.3, 0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4666666666666667, 0.2, 0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.7`", ",", "0.3`", ",", "0.7`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7, 0.3, 0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7, 0.3, 0.7], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.906213018174905*^9, 3.9062130757495832`*^9, {3.906213205953195*^9, 
   3.9062132351052313`*^9}, 3.906213449296815*^9, 3.9062138419422493`*^9, 
   3.90621458003583*^9, 3.9062157227919693`*^9, 3.9062160158946123`*^9, 
   3.906224810913542*^9, 3.906226629468759*^9, 3.90622736837565*^9, 
   3.90622792395335*^9, 3.906229071952466*^9, 3.9086291527367268`*^9, 
   3.9086292953627033`*^9, 3.9086294966744633`*^9, 3.908634755992539*^9, 
   3.908634863809436*^9, 3.908634974978476*^9, 3.9086355892872753`*^9, 
   3.90863808336108*^9, 3.908638224393903*^9, 3.908638278059806*^9, 
   3.908638386282092*^9, 3.90863857707959*^9, 3.908638640476308*^9, 
   3.90863919106325*^9, 3.9086392975699472`*^9, 3.908639344662857*^9, {
   3.90863939948835*^9, 3.908639418568796*^9}, {3.908639480016717*^9, 
   3.9086394901147118`*^9}, 3.9086397423624496`*^9, 3.908640156393757*^9, 
   3.9086413537069893`*^9, 3.9086416274438753`*^9, 3.908641680938295*^9, 
   3.9086417646736403`*^9, 3.9086419746382847`*^9, 3.908642803730681*^9, 
   3.908642865518087*^9, 3.908643408632677*^9, 3.908643675630602*^9, 
   3.9086437389781113`*^9, 3.90864603529552*^9, 3.9086461185935183`*^9, 
   3.9086461832658653`*^9, 3.908646233710874*^9, 3.90864661584737*^9, 
   3.908646695462412*^9, 3.908646774879958*^9, 3.90864696267505*^9, 
   3.908647004474358*^9, 3.908647219514974*^9, 3.9086472905051928`*^9, 
   3.908647842601624*^9, {3.9086481770328913`*^9, 3.9086481888883142`*^9}, 
   3.908648338301115*^9, 3.908648438516077*^9, 3.908648508107602*^9, 
   3.90864874512646*^9, 3.9086488263031597`*^9, 3.9086495446602507`*^9, 
   3.9086496832340403`*^9, 3.908650223037335*^9, 3.9086503739869213`*^9, 
   3.908650413099022*^9, 3.908650766041499*^9, 3.908651123555943*^9, 
   3.908651243689486*^9, 3.908651424390414*^9, 3.9086514764498*^9, 
   3.908651723331122*^9, 3.908653973050315*^9, 3.90870954966243*^9, 
   3.9087252687763863`*^9, 3.9088941277785397`*^9, 3.909071321228529*^9, 
   3.909071981829954*^9, 3.909072131596521*^9, {3.909072296137884*^9, 
   3.909072322116475*^9}, 3.909072381755999*^9, 3.909074823198926*^9, {
   3.909074857937295*^9, 3.909074865642083*^9}, 3.909077403581702*^9, 
   3.909079556871131*^9, 3.909428324696884*^9, 3.909479990503566*^9, 
   3.9094813176362877`*^9, 3.909593367529854*^9, 3.9095944271553917`*^9, 
   3.9095945521706057`*^9, 3.9095947019846087`*^9, 3.9095953621316833`*^9, 
   3.909595555148468*^9, 3.909655129548439*^9, 3.9096571079657097`*^9, 
   3.9096574356397743`*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"c9462402-cf16-4200-a010-8ad58862191c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NEi", "=", "75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "NEi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"dcl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"L", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", 
      RowBox[{"LAB", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"tt", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Ltrai", "=", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"dcl", ",", "tam"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Ltest", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"dcl", ",", "Ltrai"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"CL", "=", 
         RowBox[{"Classify", "[", 
          RowBox[{"Ltrai", ",", 
           RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CL", "[", 
              RowBox[{"Ltest", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "==", 
             RowBox[{"Ltest", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
            RowBox[{"sum", "=", 
             RowBox[{"sum", "+", "1"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "Ltest", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vP", "[", "k", "]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{"sum", "/", 
           RowBox[{"Length", "[", "Ltest", "]"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "tt"}], "}"}]}], "]"}], ";", 
     RowBox[{"VPnuevo", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"vP", "[", "k", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "tt"}], "}"}]}], "]"}]}]}], ",", "k"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mean", "=", 
  RowBox[{"Mean", "[", "VPnuevo", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8949788316189103`*^9, 3.894978859287382*^9}, {
   3.894978895185464*^9, 3.894978944555928*^9}, {3.8949790097177863`*^9, 
   3.8949790976002407`*^9}, {3.8949791547638226`*^9, 
   3.8949792580760736`*^9}, {3.8949793860840917`*^9, 
   3.8949794111909866`*^9}, {3.8949794797432823`*^9, 
   3.8949794834305134`*^9}, {3.8949795247429667`*^9, 3.894979524914893*^9}, {
   3.894979587763938*^9, 3.8949795883264318`*^9}, {3.8949796472547235`*^9, 
   3.894979647614079*^9}, {3.894979704146827*^9, 3.8949797041936793`*^9}, {
   3.8949797496893005`*^9, 3.8949797510173407`*^9}, {3.8949798074612155`*^9, 
   3.8949798096485605`*^9}, {3.8949798535381975`*^9, 
   3.8949798663242702`*^9}, {3.894980001487886*^9, 3.8949800021441307`*^9}, {
   3.894980144143813*^9, 3.894980144784401*^9}, {3.894980301219108*^9, 
   3.894980301678956*^9}, {3.8949813421206107`*^9, 3.8949813424361205`*^9}, 
   3.8949818833778133`*^9, {3.894982032517945*^9, 3.8949820339233575`*^9}, 
   3.8949822130783095`*^9, {3.8949885358955345`*^9, 3.8949885384411154`*^9}, {
   3.894989468591077*^9, 3.894989476229909*^9}, {3.894990042219657*^9, 
   3.8949900493871913`*^9}, 3.89499022583594*^9, 3.8949915638422675`*^9, {
   3.8950595780560923`*^9, 3.8950595785993357`*^9}, {3.895059631628573*^9, 
   3.895059638295333*^9}, {3.895059671092025*^9, 3.895059671663073*^9}, {
   3.895059807673111*^9, 3.895059808173921*^9}, {3.895059950720077*^9, 
   3.8950599513730164`*^9}, {3.905861901097456*^9, 3.905861901195717*^9}, {
   3.905862064602585*^9, 3.905862065104252*^9}, {3.90587067200401*^9, 
   3.905870676288975*^9}, 3.9058712028704147`*^9, {3.905871497283296*^9, 
   3.905871497625836*^9}, {3.9061348118320208`*^9, 3.906134819612175*^9}, {
   3.906139454040904*^9, 3.906139454143137*^9}, {3.906141006737885*^9, 
   3.906141007008278*^9}, {3.906227384919491*^9, 3.906227384987859*^9}, {
   3.906227932766869*^9, 3.906227933324482*^9}, 3.9086284910556297`*^9, 
   3.908637941543219*^9, {3.908638195574253*^9, 3.9086381962841167`*^9}, {
   3.908641713685011*^9, 3.908641731267026*^9}, {3.9086418022239103`*^9, 
   3.90864181324623*^9}, 3.908641853813788*^9, {3.908641916426139*^9, 
   3.908641923869121*^9}, {3.908648886581188*^9, 3.908648886649884*^9}, {
   3.908650376604548*^9, 3.90865037674584*^9}, {3.90865044146672*^9, 
   3.908650441536771*^9}, {3.9086514273062*^9, 3.9086514274632387`*^9}, {
   3.908653434945394*^9, 3.9086534382236557`*^9}, {3.9086540394842463`*^9, 
   3.908654039682045*^9}, 3.908654596085536*^9, 3.9087095579731092`*^9, 
   3.9087253167608557`*^9, {3.908725757305729*^9, 3.908725759000033*^9}, 
   3.9088941337424707`*^9, {3.909077469261338*^9, 3.909077476119327*^9}, {
   3.909079566765274*^9, 3.909079566874531*^9}, {3.909428349537141*^9, 
   3.9094283727572117`*^9}, {3.909480040107112*^9, 3.909480050920042*^9}, {
   3.909481372344655*^9, 3.9094813724383*^9}, {3.909595378065968*^9, 
   3.9095953798715973`*^9}, {3.909595451681217*^9, 3.909595455390712*^9}, {
   3.909655157932292*^9, 3.909655158451207*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"6025d1cc-a3b1-4ea2-83ab-e731e3eaf5ba"],

Cell[BoxData["0.8668131868131872`"], "Output",
 CellChangeTimes->{
  3.9086418718960333`*^9, 3.908641942443466*^9, 3.908641993418921*^9, 
   3.9086428220630217`*^9, 3.908642883566269*^9, 3.90864342591784*^9, 
   3.908643694778062*^9, 3.908643756465293*^9, 3.908646055588442*^9, 
   3.90864621181558*^9, 3.908646250655963*^9, 3.9086466336211853`*^9, 
   3.908646712724411*^9, 3.908646826806013*^9, 3.908646979931835*^9, 
   3.9086470216352*^9, 3.9086472370905647`*^9, 3.9086473074407463`*^9, 
   3.908647886882942*^9, 3.908648356992642*^9, 3.908648455873763*^9, 
   3.9086485261719017`*^9, 3.908648762601397*^9, 3.908648844288908*^9, 
   3.9086489672410994`*^9, 3.908649080037641*^9, 3.9086492107546*^9, 
   3.9086493221010227`*^9, 3.90864943510227*^9, 3.908649630658113*^9, 
   3.908649770921729*^9, 3.9086503079496193`*^9, 3.908650394070456*^9, 
   3.908650427382389*^9, 3.908650527748384*^9, 3.9086508486537113`*^9, 
   3.908651078935691*^9, 3.908651211075029*^9, 3.908651330429762*^9, 
   3.90865144438669*^9, 3.908651490863706*^9, {3.9086517407448273`*^9, 
   3.908651764930979*^9}, 3.908653454969119*^9, 3.908653986949169*^9, 
   3.908654124043973*^9, 3.9086545812405977`*^9, 3.908655009385165*^9, 
   3.908709599944068*^9, 3.9087253102141027`*^9, 3.908725734705606*^9, 
   3.908726600917817*^9, 3.908894215874877*^9, 3.909077573555572*^9, 
   3.9090795645646772`*^9, 3.909079659132504*^9, 3.909156463941474*^9, 
   3.909428549457177*^9, 3.909480035062448*^9, 3.9094800925862713`*^9, 
   3.9094813648046227`*^9, 3.90948249842202*^9, 3.909593425622129*^9, 
   3.90959447798437*^9, 3.909594598968021*^9, 3.909594744016058*^9, 
   3.909595422916347*^9, 3.909595499189999*^9, 3.90959560270743*^9, 
   3.9096552018740892`*^9, 3.90965726358171*^9, 3.909657483542088*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"7044b866-b82f-4a80-8147-26c9491631bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", "VPnuevo", "]"}]], "Input",
 CellChangeTimes->{{3.908726755280204*^9, 3.908726768668448*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"c2513603-9f25-4054-b59a-bb0fff29df9d"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.19605693430634064`, 0.782967032967033}, {
     2.1960569343063403`, 0.9642857142857143}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{0.8039430656936596, 0.9010989010989011}, {
              1.1960569343063403`, 0.9010989010989011}, {1.1960569343063403`, 
              0.8351648351648352}, {0.8039430656936596, 
              0.8351648351648352}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{1.1960569343063403`, 0.8681318681318682}, {
               0.8039430656936597, 0.8681318681318682}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1., 0.8351648351648352}, {1., 
               0.7912087912087912}}, {{1., 0.9010989010989011}, {1., 
               0.9560439560439561}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1.0980284671531702`, 0.7912087912087912}, {
               0.9019715328468298, 0.7912087912087912}}, {{
               1.0980284671531702`, 0.9560439560439561}, {0.9019715328468298, 
               0.9560439560439561}}}]}, {}}]},
          
          ImageSizeCache->{{246.5857864376269, 
           324.4142135623731}, {-133.4142135623731, 125.4142135623731}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], 
             "0.9560439560439561`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             "0.9010989010989011`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "0.8681318681318682`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], 
             "0.8351648351648352`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             "0.7912087912087912`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 0.9560439560439561}, {
            Style["75%", Bold], 0.9010989010989011}, {
            Style["median", Bold], 0.8681318681318682}, {
            Style["25%", Bold], 0.8351648351648352}, {
            Style["min", Bold], 0.7912087912087912}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.7843373722630256, 0.782967032967033},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.8039430656936596, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      1.1960569343063403`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.8039430656936596, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      1.1960569343063403`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.8039430656936596, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     1.1960569343063403`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.9090775840461473`*^9, 3.909079668259829*^9, 
  3.909156480199594*^9, 3.9094285595273485`*^9, 3.9094813752646313`*^9, 
  3.909482501934966*^9, 3.909593427320936*^9, 3.909594479996355*^9, 
  3.909594601992371*^9, 3.9095947463094463`*^9, 3.909595424585484*^9, 
  3.909595502940892*^9, 3.909595607801978*^9, 3.9096552145783157`*^9, 
  3.9096572670114594`*^9, 3.9096574971386414`*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"cd98bb1d-a58f-4fa8-86df-b159687c114f"]
}, Open  ]]
},
WindowSize->{1222, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"97dee855-fd14-4fa4-a0ba-eb46ebeb829a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 380, 6, 45, "Input",ExpressionUUID->"ef8d7c0c-e17d-4cbe-9404-0e137e686c14"],
Cell[963, 30, 257, 3, 51, "Output",ExpressionUUID->"e79b448e-8f8a-4dfd-8deb-f77569466213"]
}, Open  ]],
Cell[1235, 36, 329, 7, 45, "Input",ExpressionUUID->"55ab8c92-536d-44aa-ba10-4829ce3f2b42"],
Cell[CellGroupData[{
Cell[1589, 47, 1834, 31, 78, "Input",ExpressionUUID->"08fd9bd6-017d-4b78-9fbf-65ef9332faa9"],
Cell[3426, 80, 2515, 37, 51, "Output",ExpressionUUID->"5b76fe93-333a-4a91-91d1-00b617794b10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5978, 122, 473, 10, 78, "Input",ExpressionUUID->"50dcaef8-e1a0-4d3c-8f67-3a0ced498966"],
Cell[6454, 134, 627, 9, 51, "Output",ExpressionUUID->"85d91c55-ad19-49d8-9db8-67b1e724a87a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7118, 148, 901, 20, 78, "Input",ExpressionUUID->"9c445371-238e-4c8c-8160-0e610dcb1cf6"],
Cell[8022, 170, 18399, 250, 171, "Output",ExpressionUUID->"20c270b5-5cb6-4cd4-a3e5-7fcdb9b451d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26458, 425, 364, 8, 45, "Input",ExpressionUUID->"66425a67-1ee4-4df7-b899-951025234994"],
Cell[26825, 435, 669, 9, 51, "Output",ExpressionUUID->"9399909d-5cf9-4918-98e0-dfd604b6fe3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27531, 449, 747, 17, 78, "Input",ExpressionUUID->"7b23ef7a-85cb-4859-ac1b-42094a80eb94"],
Cell[28281, 468, 3332, 66, 84, "Output",ExpressionUUID->"e9b3d6e8-f21e-4242-9dee-b800a9d40de4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31650, 539, 230, 4, 45, "Input",ExpressionUUID->"0ce0b1b8-c7df-41ed-8ebb-82466205b914"],
Cell[31883, 545, 363, 5, 51, "Output",ExpressionUUID->"960fdbaf-32b1-42be-ac69-60996dcc7804"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32283, 555, 343, 7, 45, "Input",ExpressionUUID->"8c7ee518-e048-48cd-b713-d94aff08e93e"],
Cell[32629, 564, 1809, 49, 51, "Output",ExpressionUUID->"6f8d586d-a61d-4b40-b67b-48ffcd9f115b"]
}, Open  ]],
Cell[34453, 616, 7390, 111, 142, "Input",ExpressionUUID->"853d7cd6-a108-4313-ae09-19fd49b9b9c6"],
Cell[41846, 729, 1171, 23, 45, "Input",ExpressionUUID->"9f8391bc-12c8-4aa6-85df-26209a638092"],
Cell[CellGroupData[{
Cell[43042, 756, 740, 14, 78, "Input",ExpressionUUID->"8da77169-9f34-4eef-918c-9db44120aa75"],
Cell[43785, 772, 246, 4, 51, "Output",ExpressionUUID->"942754b5-6ead-4aeb-b635-4ce68d55e7a6"]
}, Open  ]],
Cell[44046, 779, 703, 20, 78, "Input",ExpressionUUID->"bca2d396-a0a4-4089-9234-1dc3d9c5568c"],
Cell[44752, 801, 219, 5, 45, "Input",ExpressionUUID->"c4cdcbf5-cbee-4eb5-9401-349aabcff744"],
Cell[44974, 808, 547, 13, 78, "Input",ExpressionUUID->"e5856cb1-9673-48a3-9eee-e0ae0ffb18b8"],
Cell[45524, 823, 442, 11, 45, "Input",ExpressionUUID->"1e7058e4-542b-4f6f-b87f-58b8d9b364a4"],
Cell[CellGroupData[{
Cell[45991, 838, 1135, 26, 78, "Input",ExpressionUUID->"53eba45e-c706-468f-b797-546ab0e7b24e"],
Cell[47129, 866, 5359, 99, 362, "Output",ExpressionUUID->"6836ab05-63de-42ad-9d24-d735ccda3fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52525, 970, 1143, 24, 72, "Input",ExpressionUUID->"35060fb4-fbbf-4131-b5ac-20d032813d49"],
Cell[53671, 996, 2416, 34, 51, "Output",ExpressionUUID->"cacdbbdc-51f6-416b-970f-62cf7a509484"]
}, Open  ]],
Cell[56102, 1033, 606, 16, 78, "Input",ExpressionUUID->"6b7da122-491d-47d9-a87c-cb1e7251f21b"],
Cell[56711, 1051, 362, 10, 45, "Input",ExpressionUUID->"7235d6b6-32a5-469d-98d1-515630d6f93e"],
Cell[CellGroupData[{
Cell[57098, 1065, 451, 9, 45, "Input",ExpressionUUID->"3c87471f-f17b-4fb9-8a26-e697a4ab23c4"],
Cell[57552, 1076, 2935, 42, 51, "Output",ExpressionUUID->"30aa7b7c-6955-48a0-b561-ba507c55f28f"]
}, Open  ]],
Cell[60502, 1121, 6771, 107, 110, "Input",ExpressionUUID->"52260343-387d-41e4-994f-49cdf22c7db8"],
Cell[67276, 1230, 685, 15, 78, "Input",ExpressionUUID->"236a93cb-ab3e-41c8-9ffc-8b5d4b11f4a7"],
Cell[CellGroupData[{
Cell[67986, 1249, 4594, 84, 142, "Input",ExpressionUUID->"91325cc6-b7a8-414c-9f4b-035e9053a7fd"],
Cell[72583, 1335, 96275, 1698, 93, "Output",ExpressionUUID->"48776210-6bf4-4058-aa39-6f9cef8d008f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168895, 3038, 1212, 31, 110, "Input",ExpressionUUID->"edf3b692-4a99-48a5-810a-214fa2840c28"],
Cell[170110, 3071, 8623, 118, 51, "Output",ExpressionUUID->"34bec59b-7133-4d64-a73b-f338bcb609c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178770, 3194, 338, 7, 45, "Input",ExpressionUUID->"ff1c9f60-37d8-4d41-847f-324c8a00d4b6",
 CellID->1521394769],
Cell[179111, 3203, 309314, 7906, 612, "Output",ExpressionUUID->"422323d4-2086-4449-ab5f-8867e2a1c997"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488462, 11114, 371, 7, 45, "Input",ExpressionUUID->"f4c3e6cc-c9b4-4e13-9e25-52fce44ee6c9",
 CellID->801286459],
Cell[488836, 11123, 1596, 23, 51, "Output",ExpressionUUID->"db1067f4-0518-45f7-89d9-ccaa860bfb59"]
}, Open  ]],
Cell[490447, 11149, 337, 8, 45, "Input",ExpressionUUID->"a8c20196-82af-4b21-a4c0-42520c8350e2"],
Cell[CellGroupData[{
Cell[490809, 11161, 1969, 49, 174, "Input",ExpressionUUID->"80767d51-b3d2-47a0-bbdd-99e51fb64b30"],
Cell[492781, 11212, 330101, 5724, 412, "Output",ExpressionUUID->"094b593a-8258-419b-8cea-213ac6ab6f1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[822919, 16941, 279, 6, 45, "Input",ExpressionUUID->"fe1e7e9b-501b-45bd-b50c-bc773142ee49"],
Cell[823201, 16949, 2980, 65, 51, "Output",ExpressionUUID->"f937a248-9ef6-44c4-aff6-db70bc833e70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[826218, 17019, 1492, 39, 174, "Input",ExpressionUUID->"6b212fd5-a182-4984-a561-59da153c49e8"],
Cell[827713, 17060, 47598, 834, 361, "Output",ExpressionUUID->"a507031e-04d9-4255-a8a2-0e21b2a047fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[875348, 17899, 2478, 64, 174, "Input",ExpressionUUID->"d1b3e901-627d-42c3-bf3e-0277453e97c2"],
Cell[877829, 17965, 57298, 1165, 376, "Output",ExpressionUUID->"708df428-1454-48cc-9c9b-f9ffae4124ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[935164, 19135, 2415, 64, 174, "Input",ExpressionUUID->"0ce503a5-6ad7-4365-9902-e32247231697"],
Cell[937582, 19201, 95209, 2035, 544, "Output",ExpressionUUID->"c9462402-cf16-4200-a010-8ad58862191c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1032828, 21241, 5950, 124, 430, "Input",ExpressionUUID->"6025d1cc-a3b1-4ea2-83ab-e731e3eaf5ba"],
Cell[1038781, 21367, 1852, 27, 51, "Output",ExpressionUUID->"7044b866-b82f-4a80-8147-26c9491631bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040670, 21399, 223, 4, 45, "Input",ExpressionUUID->"c2513603-9f25-4054-b59a-bb0fff29df9d"],
Cell[1040896, 21405, 6133, 152, 350, "Output",ExpressionUUID->"cd98bb1d-a58f-4fa8-86df-b159687c114f"]
}, Open  ]]
}
]
*)

