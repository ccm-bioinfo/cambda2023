(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    949782,      19678]
NotebookOptionsPosition[    942203,      19544]
NotebookOutlinePosition[    942673,      19562]
CellTagsIndexPosition[    942630,      19559]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\</home/ebg/Documents/2_Latex/CAMDA\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.895055908530644*^9, 3.895055920801714*^9}, 
   3.8950559642877913`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"ef8d7c0c-e17d-4cbe-9404-0e137e686c14"],

Cell[BoxData["\<\"/home/ebg/Documents/2_Latex/CAMDA\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAuL4hLRmG9a3jnMn/phkB6TNJQ1Yrku+dfwwKWzGLSB9
ZpP/hNtA+ssRBpG7QDrwpsQGEC3nd0CRXeqtY4S0xEQOIM1a2Z6iC6S5FrIt
jgbSRbYsX0H0YtZqnlggzbGnKDMOSFvol1c1AOlfh/88aALSx8p2nG0G0rsO
XhPsANIhf+/8kJUHikedMVYA0hPrLdeD6GTX0y6KQJovt7dWCUjvy+hZpQKk
XZzrdoNon18i5apAuuiPfB+Idl3931UNSH+qftehAaRfZfkVagFpK1nmHlcg
neBua+0LpHcdEhacD6RNJZKjQbRFzqbPp4D0G+ddU84A6UU1N1rOAWmepQbM
X4F0tbf/XxAt3XSr9BuQDhH64PwdSKdbuHeB6Dl//+n+BNJpQv+eyCm8dXyn
F8TrCKTlLhQUOwHpMn69GGcgfSei7RyINrJns/UC0lm/jpQeAtIAOpG2rQ==

  "],
 CellLabel->"Out[1]=",ExpressionUUID->"89fbdd20-8323-4ed5-8267-453b464b7911"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat00", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<CAMDA(v).dat\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nOTU", "=", 
  RowBox[{
   RowBox[{"Length", "[", "dat00", "]"}], "-", "1"}]}]}], "Input",
 CellChangeTimes->{{3.6527172833271027`*^9, 3.652717292779166*^9}, 
   3.652731652380665*^9, {3.654892473150094*^9, 3.6548924976660433`*^9}, {
   3.656431580704546*^9, 3.656431588192583*^9}, {3.657631872573925*^9, 
   3.6576318880661287`*^9}, {3.659366197664484*^9, 3.6593661978051414`*^9}, {
   3.660927300334984*^9, 3.660927300588992*^9}, {3.686328432033252*^9, 
   3.686328448611578*^9}, {3.717163895367484*^9, 3.717163928013256*^9}, {
   3.886852417924981*^9, 3.8868524342993307`*^9}, {3.88685750513479*^9, 
   3.886857510238229*^9}, {3.886861229575047*^9, 3.886861236421146*^9}, {
   3.886862050908229*^9, 3.886862051538643*^9}, {3.8872055522807837`*^9, 
   3.887205555584903*^9}, {3.887288944685817*^9, 3.887288947132513*^9}, {
   3.8938680718494043`*^9, 3.893868078010755*^9}, {3.893947215674856*^9, 
   3.893947216346718*^9}, {3.893947269933972*^9, 3.893947278985733*^9}, {
   3.893947845800207*^9, 3.893947851403371*^9}, 3.89394805480436*^9, 
   3.894367558934143*^9, 3.894802101999634*^9, {3.908642311484008*^9, 
   3.908642316448557*^9}, {3.9086431357884502`*^9, 3.908643250480362*^9}, {
   3.9086459122174873`*^9, 3.9086459138433037`*^9}, {3.908892817340321*^9, 
   3.9088928186008263`*^9}, {3.909068830912364*^9, 3.90906884756796*^9}, 
   3.9090717605754633`*^9, {3.909073508537643*^9, 3.90907353381295*^9}, {
   3.909224559252617*^9, 3.909224559412629*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[2]:=",ExpressionUUID->"08fd9bd6-017d-4b78-9fbf-65ef9332faa9"],

Cell[BoxData["20448"], "Output",
 CellChangeTimes->{
  3.8938680812021923`*^9, 3.893869051072381*^9, 3.893933227481276*^9, 
   3.893942220701165*^9, 3.8939466273273497`*^9, 3.893947220246881*^9, 
   3.893947281786994*^9, 3.893947853759091*^9, 3.893948057789495*^9, 
   3.894120182762225*^9, 3.894121177682858*^9, 3.89412674023361*^9, 
   3.894129456275652*^9, {3.894367540178335*^9, 3.894367561233283*^9}, 
   3.8948016931449814`*^9, 3.894802110768095*^9, 3.8948027769614196`*^9, 
   3.89480501322112*^9, 3.89480978309576*^9, 3.894809972960515*^9, 
   3.894815915493869*^9, 3.894822740213278*^9, 3.8949704369069433`*^9, 
   3.8949715715447416`*^9, 3.894971703098917*^9, 3.89497312444026*^9, 
   3.8949753745029182`*^9, 3.8949775431579475`*^9, 3.8949884733246675`*^9, 
   3.8949892984392157`*^9, 3.895059486255745*^9, 3.895063706506686*^9, 
   3.9058616681621428`*^9, 3.905868997208913*^9, 3.905870981597728*^9, 
   3.905874082495132*^9, 3.9058753306260242`*^9, 3.9059602077627583`*^9, 
   3.9059631465260468`*^9, 3.906038566697742*^9, 3.906133275101117*^9, 
   3.906133931663748*^9, 3.906136166810417*^9, 3.9061389576679153`*^9, 
   3.906208725569409*^9, 3.906213641616145*^9, 3.906215535582432*^9, 
   3.9062242731252117`*^9, 3.908628425582921*^9, 3.908629967855928*^9, 
   3.90863299320149*^9, 3.90863398044184*^9, 3.908635176983717*^9, 
   3.908637682304529*^9, 3.908640964717696*^9, 3.908642135291527*^9, 
   3.9086422711408873`*^9, {3.9086431805545063`*^9, 3.908643221589904*^9}, 
   3.908643253410976*^9, 3.9086432984156437`*^9, 3.908643771255453*^9, 
   3.908643956226473*^9, 3.908645338513363*^9, 3.908645426398735*^9, 
   3.9086459182976437`*^9, 3.908646426591402*^9, 3.908646458319619*^9, 
   3.908650061489732*^9, 3.908653964251355*^9, 3.9087094753762903`*^9, 
   3.908725212982942*^9, {3.908892812548737*^9, 3.9088928217465477`*^9}, 
   3.908893405940547*^9, 3.9089860245195627`*^9, 3.908989992468398*^9, {
   3.909068832606329*^9, 3.909068852345503*^9}, 3.909069273904029*^9, 
   3.909069380202817*^9, 3.909069420604189*^9, 3.90907082761523*^9, 
   3.909071384807362*^9, 3.909071761861876*^9, 3.909071792727037*^9, 
   3.909073444699065*^9, 3.909073534732896*^9, 3.90907400349938*^9, 
   3.909077361388232*^9, 3.909154601521014*^9, 3.909224564023304*^9, 
   3.909227425423831*^9, 3.909229286375577*^9, 3.909230201115993*^9, 
   3.9092433740776587`*^9, 3.909489587108118*^9},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"Out[3]=",ExpressionUUID->"536ee8dd-dc13-4cfe-b6c4-eb51dbc3919c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"borrar", "=", 
   RowBox[{"Transpose", "[", "dat00", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nCTY", "=", 
  RowBox[{
   RowBox[{"Length", "[", "borrar", "]"}], "-", "1"}]}]}], "Input",
 CellChangeTimes->{{3.908893435679976*^9, 3.9088934596059437`*^9}, {
  3.90906887335236*^9, 3.909068874503429*^9}, {3.909073541103141*^9, 
  3.909073550324849*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"50dcaef8-e1a0-4d3c-8f67-3a0ced498966"],

Cell[BoxData["365"], "Output",
 CellChangeTimes->{
  3.9088934603487997`*^9, 3.908986026486709*^9, 3.908989992615837*^9, {
   3.909068858117276*^9, 3.9090688838512583`*^9}, 3.909069276328537*^9, 
   3.909069381209407*^9, 3.909069421577849*^9, 3.909070828727107*^9, 
   3.909071385723271*^9, 3.9090717967938957`*^9, 3.909073551077269*^9, 
   3.909074004479993*^9, 3.909077362292885*^9, 3.9091546027402267`*^9, 
   3.909224570707481*^9, 3.909227426946546*^9, 3.909229287876995*^9, 
   3.9092302024277277`*^9, 3.909243375443281*^9, 3.909489588543036*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"fbfb767f-2ebb-430f-a959-719809506419"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"dat00", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"nCTY", "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "dat", "]"}]}], "Input",
 CellChangeTimes->{{3.9086450738593473`*^9, 3.9086451889745502`*^9}, {
  3.90864532334225*^9, 3.9086453626612177`*^9}, {3.9086454326525087`*^9, 
  3.908645477338532*^9}, {3.908646445232856*^9, 3.908646445447913*^9}, {
  3.9088934731620197`*^9, 3.908893473258831*^9}, {3.9090688793521423`*^9, 
  3.9090688809517508`*^9}, {3.909073568205853*^9, 3.9090735746693077`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"9c445371-238e-4c8c-8160-0e610dcb1cf6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"ID\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", \
"\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", \
"\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", "\<\"AKL\"\>", \
"\<\"AKL\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", \
"\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", \
"\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", "\<\"BER\"\>", \
"\<\"BER\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", \
"\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", \
"\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", "\<\"BOG\"\>", \
"\<\"BOG\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", \
"\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", \
"\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", "\<\"LIS\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", \
"\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", \
"\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"SAC\"\>", \
"\<\"SAC\"\>", "\<\"SAC\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", \
"\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", \
"\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"BAL\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", "\<\"DEN\"\>", \
"\<\"DEN\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", "\<\"DOH\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", \
"\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"ILR\"\>", "\<\"MIN\"\>", "\<\"MIN\"\>", \
"\<\"MIN\"\>", "\<\"MIN\"\>", "\<\"MIN\"\>", "\<\"MIN\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", \
"\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"NYC\"\>", "\<\"SAN\"\>", \
"\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", \
"\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", \
"\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", "\<\"SAN\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", "\<\"SAO\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", "\<\"TOK\"\>", \
"\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", \
"\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", \
"\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", "\<\"VIE\"\>", \
"\<\"VIE\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", \
"\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", \
"\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", "\<\"ZRH\"\>", \
"\<\"ZRH\"\>", "\<\"ZRH\"\>"},
    {"468", "1756", "785", "29", "5", "57", "7", "6", "2", "336", "3", "22", 
     "5", "5", "7", "2228", "373", "1072", "626", "1358", "3021", "113", 
     "121", "55", "62", "845", "58", "37", "397", "3878", "1872", "1271", 
     "2813", "1709", "2909", "1792", "2072", "4050", "5156", "1520", "1178", 
     "2776", "1810", "2339", "1687", "18", "7", "18", "10", "28", "73", "44", 
     "397", "6", "8", "142", "3", "277", "17", "18", "5", "13", "56", "20", 
     "275", "31", "6", "374", "268", "805", "104", "91", "77", "84", "88", 
     "106", "87", "120", "86", "76", "3778", "44", "4189", "22", "2315", 
     "1327", "30", "521", "61", "5841", "1593", "75", "173", "218", "2694", 
     "338", "148", "1985", "226", "379", "136", "776", "273", "135", "160", 
     "797", "124", "862", "44", "841", "9768", "1211", "11614", "487", 
     "18120", "1612", "911", "9698", "582", "511", "7199", "24039", "751", 
     "15001", "15015", "655", "2429", "131", "522", "1649", "595", "389", 
     "3526", "2318", "1668", "14", "10", "20", "92", "24", "73", "11", "37", 
     "43", "112", "14", "13", "13", "34", "11", "74", "197", "1586", "1411", 
     "911", "1524", "777", "625", "1138", "916", "654", "773", "2235", "1097",
      "196", "245", "1454", "581", "1374", "175", "58", "1903", "872", "1912",
      "2311", "39", "27", "152", "67", "176", "159", "215", "17", "18", "37", 
     "52", "76", "31", "25", "20", "5", "8", "49", "28", "18", "9", "39", "8",
      "5", "8", "36", "69", "5", "28", "2", "14", "39", "44", "15", "285", 
     "63", "993", "119", "1216", "84", "88", "2952", "58", "104", "72", "54", 
     "950", "77", "260", "179", "39", "1939", "43", "346", "407", "61", "45", 
     "57", "286", "144", "64", "281", "172", "605", "388", "335", "422", "18",
      "9", "56", "9", "13", "22", "33", "87", "48", "65", "463", "58", "42", 
     "697", "36", "57", "140", "53", "1029", "720", "77", "53", "49", "114", 
     "86", "89", "33", "19", "9", "36", "32", "31", "16", "26", "3", "2", "6",
      "17", "16", "56", "50", "134", "10", "55", "12", "193", "9", "22", "3", 
     "13", "36", "26", "11", "80", "26", "5", "1396", "1", "45", "45", "30", 
     "2", "13", "47", "14", "3", "75", "45", "201", "512", "65", "210", "14", 
     "0", "9", "1", "21", "364", "125", "145", "130", "116", "64", "16", 
     "142", "100", "376", "44", "1", "20", "4", "40", "122", "45", "28", "54",
      "86", "29", "210", "162", "102", "64", "64", "438", "141", "168", 
     "1134", "69", "141", "152", "17", "1101", "20", "530", "299", "112", 
     "10", "161", "182", "235", "152", "87", "511", "149"},
    {"469", "379030", "10803", "3202", "487", "1720", "354", "591", "482", 
     "12710", "643", "432", "457", "434", "530", "85706", "15092", "47368", 
     "33698", "69970", "89993", "3263", "8530", "2398", "3276", "194866", 
     "2951", "2108", "18347", "150544", "87879", "60755", "85066", "123429", 
     "49768", "96884", "80078", "235789", "326507", "49734", "77456", 
     "166756", "192948", "185335", "94943", "1887", "1191", "2235", "1422", 
     "2241", "10155", "6572", "64065", "1102", "1397", "28921", "2130", 
     "51995", "1914", "3226", "817", "1522", "10269", "2381", "1632", "5185", 
     "1486", "2397", "5798", "2547", "4461", "4222", "1803", "2877", "4178", 
     "4073", "4745", "4541", "3468", "4981", "396394", "6616", "638240", 
     "1368", "4211", "132908", "1775", "33341", "3402", "1190934", "4652", 
     "14592", "2721", "111045", "546254", "72888", "640", "630987", "32994", 
     "1197", "41016", "157894", "88906", "46475", "30863", "285666", "700", 
     "1100", "712", "47820", "1166640", "28834", "1208360", "17468", 
     "2804675", "68573", "35204", "2287334", "19062", "52919", "1158290", 
     "4607408", "31973", "2029504", "2540912", "29434", "269538", "5936", 
     "47853", "205583", "31243", "13249", "439616", "145589", "135539", "574",
      "633", "828", "6354", "1857", "7345", "724", "2048", "2893", "6457", 
     "500", "799", "959", "3470", "801", "10768", "6828", "28179", "40300", 
     "67265", "33209", "59105", "33346", "25097", "75476", "14905", "13940", 
     "35166", "37388", "4726", "9234", "76381", "16344", "74783", "7489", 
     "13032", "25472", "26904", "35832", "38293", "1477", "1027", "5061", 
     "2744", "5332", "9340", "16060", "808", "1229", "1386", "1694", "2960", 
     "1206", "740", "2114", "315", "519", "2345", "932", "401", "524", "1617",
      "355", "292", "626", "4743", "1854", "422", "1345", "161", "446", 
     "3748", "1558", "387", "569", "1795", "13310", "3950", "74605", "7173", 
     "2667", "8122", "1788", "2601", "1970", "2135", "28141", "3790", "6317", 
     "4661", "2475", "142173", "2356", "20198", "15486", "4110", "2904", 
     "2214", "13104", "11270", "2692", "5901", "6100", "19289", "4915", 
     "6867", "8940", "349", "267", "2141", "301", "339", "521", "3782", 
     "3380", "1334", "1802", "9499", "2052", "1116", "8220", "1120", "1101", 
     "2468", "2000", "6146", "79371", "2597", "696", "1838", "3530", "1934", 
     "1340", "729", "555", "271", "1111", "2738", "2046", "578", "950", "135",
      "148", "354", "864", "365", "1644", "3241", "1146", "477", "2591", 
     "1077", "17814", "687", "968", "448", "545", "2983", "1631", "661", 
     "8413", "3063", "300", "35295", "108", "2953", "2701", "3425", "260", 
     "274", "3074", "904", "378", "5730", "1022", "3334", "14359", "382", 
     "2284", "481", "135", "679", "34", "490", "15327", "10414", "9582", 
     "1785", "1057", "1201", "807", "1731", "1460", "12437", "507", "101", 
     "736", "110", "1331", "5681", "1772", "1937", "2560", "2665", "1178", 
     "8099", "16223", "5404", "2595", "3106", "6234", "9658", "5225", "53454",
      "3073", "11688", "4733", "811", "80216", "1197", "14946", "6523", 
     "9212", "1313", "7540", "12125", "4459", "9864", "5467", "23752", "9958"},
    {"28090", "510775", "845", "627", "372", "2166", "284", "519", "363", 
     "2338", "472", "294", "370", "328", "431", "22978", "4571", "18840", 
     "12277", "25360", "15763", "2028", "1838", "708", "1216", "3726", "781", 
     "615", "5936", "36427", "51690", "20415", "73919", "67080", "13684", 
     "15410", "16378", "299655", "327485", "32661", "19551", "73285", "13080",
      "21861", "17517", "979", "411", "1419", "482", "1009", "6866", "4548", 
     "30644", "594", "702", "21878", "692", "37142", "1092", "643", "360", 
     "889", "6117", "976", "646", "2932", "661", "882", "1729", "984", "1744",
      "1456", "607", "962", "1951", "1230", "2328", "1461", "1356", "2261", 
     "28551", "444", "37029", "168", "520", "11299", "216", "2170", "215", 
     "58435", "985", "774", "221", "1794", "42278", "70596", "211", "1121", 
     "5033", "278", "70340", "142978", "11277", "2084", "29281", "654524", 
     "236", "202", "222", "10556", "454148", "9571", "1705339", "9407", 
     "637232", "27531", "15585", "3372470", "7125", "40047", "1665217", 
     "3134871", "11368", "2574553", "3330223", "7805", "348176", "1558", 
     "15918", "265558", "7190", "4902", "25377", "80962", "155146", "331", 
     "442", "396", "5858", "765", "5349", "344", "2130", "1832", "8638", 
     "314", "475", "543", "3287", "703", "4488", "1171", "5902", "28643", 
     "7983", "6290", "44278", "9461", "5853", "51031", "2709", "2201", "8072",
      "32572", "453", "1484", "8796", "2212", "6631", "1043", "2011", "3862", 
     "4034", "6907", "7625", "302", "126", "563", "488", "618", "1447", 
     "1014", "134", "135", "229", "264", "796", "183", "99", "743", "48", 
     "93", "484", "211", "57", "45", "313", "46", "63", "121", "212", "144", 
     "30", "240", "30", "102", "166", "117", "41", "60", "276", "926", "327", 
     "593", "587", "306", "783", "337", "206", "439", "372", "1100", "345", 
     "329", "212", "96", "3833", "186", "969", "536", "274", "270", "380", 
     "532", "655", "348", "434", "326", "801", "342", "374", "548", "72", 
     "69", "745", "52", "93", "106", "448", "2269", "467", "872", "4276", 
     "379", "310", "1376", "369", "676", "1020", "582", "3068", "4205", "507",
      "159", "255", "2214", "909", "508", "248", "169", "28", "368", "121", 
     "607", "242", "355", "13", "40", "86", "428", "135", "789", "2737", 
     "412", "32", "399", "133", "550", "57", "82", "27", "32", "423", "204", 
     "48", "1013", "426", "52", "1167", "26", "273", "648", "511", "16", "20",
      "303", "94", "33", "1025", "268", "165", "4904", "55", "882", "121", 
     "3", "65", "13", "125", "6688", "864", "6510", "121", "79", "259", "318",
      "310", "625", "9791", "136", "2", "143", "10", "149", "1497", "127", 
     "210", "769", "713", "384", "2700", "747", "1650", "530", "404", "1098", 
     "3866", "891", "16109", "646", "4798", "127", "66", "739", "48", "349", 
     "309", "2704", "193", "2948", "3200", "1667", "3787", "1791", "7039", 
     "3649"},
    {"2708348", "49367", "123", "47", "48", "104", "25", "41", "28", "347", 
     "36", "19", "27", "38", "35", "813", "185", "682", "445", "976", "617", 
     "136", "80", "24", "42", "142", "38", "33", "199", "1080", "4256", 
     "1125", "6685", "5063", "1138", "1245", "1061", "26100", "26832", "3100",
      "1210", "4207", "602", "858", "929", "82", "27", "122", "33", "82", 
     "171", "139", "601", "64", "79", "542", "58", "973", "102", "47", "26", 
     "75", "221", "76", "54", "109", "57", "55", "125", "76", "138", "104", 
     "39", "74", "166", "83", "153", "91", "103", "138", "2767", "43", "3965",
      "8", "15", "619", "19", "190", "29", "5189", "17", "66", "12", "102", 
     "3387", "3234", "14", "46", "386", "17", "6024", "6263", "440", "61", 
     "3090", "53542", "19", "10", "12", "868", "41429", "828", "141635", 
     "864", "56906", "2772", "1317", "335750", "638", "3361", "148313", 
     "564767", "1016", "234848", "318231", "731", "30380", "159", "1674", 
     "27365", "658", "474", "1829", "7755", "11538", "22", "39", "31", "459", 
     "72", "404", "28", "165", "148", "779", "25", "47", "52", "230", "53", 
     "390", "83", "373", "2127", "434", "329", "2399", "490", "284", "2991", 
     "140", "158", "334", "2337", "35", "94", "740", "116", "543", "69", 
     "192", "182", "332", "405", "403", "23", "18", "19", "16", "49", "59", 
     "58", "11", "13", "11", "14", "52", "19", "3", "20", "2", "6", "22", 
     "14", "5", "4", "6", "6", "2", "12", "9", "6", "2", "9", "3", "13", "4", 
     "8", "1", "8", "22", "53", "14", "18", "33", "15", "27", "29", "22", 
     "28", "26", "85", "16", "19", "14", "5", "398", "16", "38", "45", "25", 
     "31", "27", "31", "50", "31", "39", "30", "64", "22", "30", "29", "2", 
     "8", "51", "9", "11", "9", "35", "247", "54", "75", "376", "27", "37", 
     "78", "21", "57", "110", "45", "319", "239", "41", "9", "23", "295", 
     "85", "64", "31", "16", "0", "26", "10", "49", "15", "37", "2", "2", "7",
      "46", "12", "72", "241", "30", "8", "13", "6", "10", "2", "1", "0", "1",
      "16", "6", "2", "52", "32", "1", "21", "1", "10", "30", "35", "2", "1", 
     "20", "1", "4", "52", "11", "4", "310", "2", "24", "7", "0", "2", "4", 
     "1", "462", "35", "249", "6", "5", "15", "14", "23", "47", "392", "12", 
     "0", "5", "1", "16", "49", "9", "7", "47", "44", "9", "87", "24", "59", 
     "19", "22", "39", "212", "36", "609", "29", "260", "5", "2", "34", "3", 
     "13", "14", "99", "9", "117", "99", "121", "174", "95", "276", "132"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9086451801829443`*^9, 3.9086451894148493`*^9}, {
   3.908645316179039*^9, 3.90864536319902*^9}, {3.9086454361223583`*^9, 
   3.908645477866001*^9}, 3.908645924931634*^9, {3.908646438983241*^9, 
   3.908646459356765*^9}, 3.9086500628930473`*^9, 3.908653964853262*^9, 
   3.908709476807722*^9, 3.908725213954108*^9, 3.908892845337552*^9, 
   3.908893407946513*^9, 3.908893474684676*^9, 3.908986027548518*^9, 
   3.908989992715844*^9, 3.9090688848156347`*^9, 3.909069277279224*^9, 
   3.909069382709938*^9, 3.909069422334268*^9, 3.9090708315278*^9, 
   3.909071386469109*^9, 3.909071804869845*^9, 3.9090735756967783`*^9, 
   3.909074005359351*^9, 3.9090773631970463`*^9, 3.909154603609251*^9, 
   3.909224573991672*^9, 3.9092274280338993`*^9, 3.909229289152309*^9, 
   3.909230204096685*^9, 3.9092433765060883`*^9, 3.909489589467188*^9},
 CellLabel->
  "Out[7]//TableForm=",ExpressionUUID->"eacbb7b9-f4ad-46dd-919a-a5eb6688c489"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Drop", "[", 
   RowBox[{
    RowBox[{"dat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908893092441716*^9, 3.908893106805811*^9}, {
  3.90889331847128*^9, 3.908893322915854*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"66425a67-1ee4-4df7-b899-951025234994"],

Cell[BoxData["365"], "Output",
 CellChangeTimes->{{3.908893096795019*^9, 3.908893107238719*^9}, 
   3.908893323437045*^9, 3.9088934792616587`*^9, 3.9089860284293423`*^9, 
   3.908989992735195*^9, 3.909068894337537*^9, 3.909069279387188*^9, 
   3.909069386487863*^9, 3.909069423107593*^9, 3.909070832648202*^9, 
   3.909071387235149*^9, 3.90907181241031*^9, 3.909073580956362*^9, 
   3.90907400656316*^9, 3.909077364099074*^9, 3.909154604531727*^9, 
   3.909227429220222*^9, 3.909229290183305*^9, 3.909230206390946*^9, 
   3.909243377668007*^9, 3.9094895904498453`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"9030c645-9af1-4d46-a41d-4ea1e9bff83d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LAB", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"dat", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aux", "=", 
  RowBox[{"Tally", "[", "LAB", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8941294653060102`*^9, 3.894129492406818*^9}, {
   3.894817497408789*^9, 3.894817499502797*^9}, 3.908643355900638*^9, {
   3.90864359002199*^9, 3.9086436069087353`*^9}, {3.908645295327044*^9, 
   3.908645295740901*^9}, {3.908645938621961*^9, 3.908645943580654*^9}, {
   3.9088931134059258`*^9, 3.90889312393367*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[9]:=",ExpressionUUID->"7b23ef7a-85cb-4859-ac1b-42094a80eb94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"AKL\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BER\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BOG\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DEN\"\>", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DOH\"\>", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ILR\"\>", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LIS\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NYC\"\>", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAC\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TOK\"\>", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BAL\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MIN\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAN\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAO\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VIE\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZRH\"\>", ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.894129479924568*^9, 3.8941294935505323`*^9}, 
   3.8941297422895107`*^9, 3.894367563516974*^9, 3.894370414055108*^9, 
   3.8948016990221157`*^9, 3.894802779055049*^9, 3.8948050368288517`*^9, 
   3.8948097844733667`*^9, 3.894809976056006*^9, 3.894815919003872*^9, 
   3.894817501668404*^9, 3.8948227415256853`*^9, 3.8949704395422044`*^9, 
   3.8949715718259716`*^9, 3.894971714031168*^9, 3.89497312615889*^9, 
   3.8949753768777514`*^9, 3.894977544767212*^9, 3.8949884748450093`*^9, 
   3.8949892998594666`*^9, 3.895059487740103*^9, 3.895063707543589*^9, 
   3.9058616698688917`*^9, 3.905868998295273*^9, 3.9058710017924337`*^9, 
   3.905874082550158*^9, 3.905875330666833*^9, 3.9059602078029327`*^9, 
   3.9059631465618877`*^9, 3.906038566737763*^9, 3.906133276153377*^9, 
   3.906133933281708*^9, 3.906136168177724*^9, 3.9061389577086487`*^9, 
   3.906208725611919*^9, 3.906213641656592*^9, 3.9062155356231813`*^9, 
   3.906224274092312*^9, 3.908628426596469*^9, 3.908629969070986*^9, 
   3.908634042332343*^9, 3.908634333475219*^9, 3.908635181169973*^9, 
   3.908637850032877*^9, 3.908640965768394*^9, 3.908642136267188*^9, 
   3.9086433572191153`*^9, 3.908643486059019*^9, 3.908643607934498*^9, 
   3.908643779220229*^9, 3.908643973021226*^9, {3.90864530016148*^9, 
   3.908645350213071*^9}, {3.908645454671278*^9, 3.908645472917775*^9}, 
   3.908645944155527*^9, 3.908646460637417*^9, 3.908647120181035*^9, 
   3.9086500637609653`*^9, 3.90865396497801*^9, 3.90870948095221*^9, 
   3.908725214708213*^9, 3.908893136201871*^9, 3.908893491481023*^9, 
   3.908986030013464*^9, 3.908989992750682*^9, 3.90906889781982*^9, 
   3.9090692819167147`*^9, {3.909069389271577*^9, 3.909069423821679*^9}, 
   3.909070833439212*^9, 3.909071387948855*^9, 3.909071814113599*^9, 
   3.909073588436645*^9, 3.9090740073810053`*^9, 3.90907736516998*^9, 
   3.909154605292964*^9, 3.909224643446941*^9, 3.909227430271016*^9, 
   3.909229291088656*^9, 3.909230207317588*^9, 3.9092433786069202`*^9, 
   3.909489591286998*^9},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"Out[10]=",ExpressionUUID->"43e71e37-1875-4cc5-8e74-9cf93ba7cec9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nC", "=", 
  RowBox[{"Length", "[", "aux", "]"}]}]], "Input",
 CellChangeTimes->{{3.909073619824552*^9, 3.909073641891952*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"0ce0b1b8-c7df-41ed-8ebb-82466205b914"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.909073644291965*^9, 3.909074008255066*^9, 
  3.9090773660906267`*^9, 3.909154606196797*^9, 3.9092246900441628`*^9, 
  3.9092274313567867`*^9, 3.909229292000222*^9, 3.9092302082300167`*^9, 
  3.9092433803665257`*^9, 3.909489592365056*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c718991f-bd36-4734-9886-b2cc1539643d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"II", "=", "nCTY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JJ", "=", "5000"}], ";", 
  RowBox[{"COL", "=", 
   RowBox[{"{", 
    RowBox[{
    "Red", ",", "Blue", ",", "Green", ",", "Brown", ",", "Black", ",", "Pink",
      ",", "Gray", ",", "Magenta", ",", "Cyan", ",", "Orange", ",", "Yellow", 
     ",", "LightBlue", ",", "LightPurple", ",", "LightBrown", ",", 
     "LightOrange", ",", "LightRed"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8943706362511263`*^9, 3.894370667894084*^9}, {
   3.894801827116887*^9, 3.894801828460537*^9}, {3.8948018687017326`*^9, 
   3.8948018692641892`*^9}, {3.8948032755377045`*^9, 3.894803277584434*^9}, {
   3.8948055582296495`*^9, 3.8948055654478316`*^9}, {3.894805785018027*^9, 
   3.894805822437315*^9}, {3.8948074664658155`*^9, 3.894807466590807*^9}, {
   3.8948075203621993`*^9, 3.894807520471551*^9}, {3.894807603942154*^9, 
   3.8948076049264584`*^9}, {3.894807684198481*^9, 3.8948076844640517`*^9}, {
   3.8948080771129503`*^9, 3.894808083643796*^9}, 3.8948081512582417`*^9, {
   3.894808189436656*^9, 3.894808189592928*^9}, {3.8948087767013264`*^9, 
   3.8948087830602536`*^9}, {3.8948088186449327`*^9, 
   3.8948088193011346`*^9}, {3.89480884945854*^9, 3.8948088499585648`*^9}, {
   3.894808880488456*^9, 3.894808904535088*^9}, {3.894808948934066*^9, 
   3.894808952670001*^9}, {3.8948089862702746`*^9, 3.894808991020012*^9}, {
   3.8948090227153187`*^9, 3.8948090227933874`*^9}, {3.894809061615671*^9, 
   3.8948090616937895`*^9}, {3.8948091207245626`*^9, 3.894809121104696*^9}, {
   3.894809196026246*^9, 3.894809206124655*^9}, {3.8948092423696365`*^9, 
   3.894809242416513*^9}, {3.894809359314746*^9, 3.894809359929757*^9}, 
   3.8948095514120064`*^9, 3.894809592022604*^9, {3.894809677528784*^9, 
   3.8948096782474737`*^9}, {3.8948097095693464`*^9, 3.894809709897521*^9}, {
   3.8948100617266083`*^9, 3.894810090166418*^9}, {3.894810247577938*^9, 
   3.8948102690677557`*^9}, {3.894815864753319*^9, 3.894815890189739*^9}, {
   3.8948160104399476`*^9, 3.8948160131546516`*^9}, {3.8948161642058897`*^9, 
   3.894816166678239*^9}, {3.894817147546957*^9, 3.894817174416996*^9}, {
   3.8948172312370863`*^9, 3.894817231307565*^9}, {3.8948172652621665`*^9, 
   3.8948172935874014`*^9}, {3.8948173888672943`*^9, 
   3.8948173902177677`*^9}, {3.8948180292239623`*^9, 
   3.8948180332641015`*^9}, {3.894818146659932*^9, 3.8948181469849973`*^9}, {
   3.8948182045752735`*^9, 3.8948182051252017`*^9}, {3.8948186877351627`*^9, 
   3.894818694113308*^9}, {3.894819060363267*^9, 3.894819060603157*^9}, {
   3.8948190939237385`*^9, 3.894819105433728*^9}, {3.8948192591399016`*^9, 
   3.8948192592850747`*^9}, {3.894819332785037*^9, 3.8948193373356357`*^9}, 
   3.8948194105945845`*^9, {3.8948194928366137`*^9, 3.8948194974969273`*^9}, 
   3.8948196959775686`*^9, {3.8948197519677553`*^9, 3.894819752517677*^9}, {
   3.8948198070881214`*^9, 3.894819813028471*^9}, {3.894822752571861*^9, 
   3.894822769613944*^9}, {3.894822832295257*^9, 3.8948228357950144`*^9}, {
   3.894822872065631*^9, 3.8948228723155766`*^9}, 3.894822940969141*^9, {
   3.8948248575553384`*^9, 3.8948248581959176`*^9}, {3.894825093255149*^9, 
   3.894825094942584*^9}, {3.894825465406954*^9, 3.8948254724533215`*^9}, {
   3.8948257061691732`*^9, 3.894825717184001*^9}, {3.8948257551969805`*^9, 
   3.8948257557906537`*^9}, {3.8948258083297405`*^9, 3.894825808470388*^9}, {
   3.894825855060867*^9, 3.8948258551076994`*^9}, {3.894975392635106*^9, 
   3.8949753927913885`*^9}, {3.894976133769287*^9, 3.894976140065733*^9}, {
   3.8949775652421675`*^9, 3.894977565679573*^9}, {3.894980445059249*^9, 
   3.8949804453593597`*^9}, 3.894988489238701*^9, 3.89498859795804*^9, 
   3.894989309015525*^9, {3.8949896619945726`*^9, 3.894989662157364*^9}, {
   3.894989812696677*^9, 3.894989813082387*^9}, 3.8949899376801443`*^9, {
   3.8949902738628054`*^9, 3.894990275004385*^9}, {3.8949905800474615`*^9, 
   3.894990580765749*^9}, {3.895059496559561*^9, 3.895059501791045*^9}, {
   3.895059734726017*^9, 3.895059736148788*^9}, {3.895059845285911*^9, 
   3.8950598468441753`*^9}, {3.8950637154690247`*^9, 3.895063715844648*^9}, {
   3.906136180774873*^9, 3.906136182758326*^9}, {3.906141017110941*^9, 
   3.906141046174398*^9}, {3.90614185812543*^9, 3.906141858526496*^9}, {
   3.906224266722131*^9, 3.9062242675213137`*^9}, {3.908628434878978*^9, 
   3.908628436614232*^9}, {3.908634237194463*^9, 3.9086342376943283`*^9}, 
   3.908634871749435*^9, 3.9086349989805317`*^9, {3.908637865822584*^9, 
   3.908637867021596*^9}, 3.908638172355998*^9, 3.908638593792383*^9, {
   3.908639206395911*^9, 3.908639232553463*^9}, {3.908639429283114*^9, 
   3.908639432384307*^9}, {3.90863968298523*^9, 3.9086396834544353`*^9}, {
   3.908640060502152*^9, 3.9086400606562862`*^9}, {3.90864013528557*^9, 
   3.908640135538939*^9}, {3.908640178261475*^9, 3.908640178450549*^9}, {
   3.9086402632530117`*^9, 3.908640264218128*^9}, {3.9086412026230383`*^9, 
   3.908641203969953*^9}, {3.908641473051445*^9, 3.908641474645816*^9}, {
   3.908643367439793*^9, 3.908643368270494*^9}, {3.908645962509025*^9, 
   3.9086459627002363`*^9}, {3.908646000939835*^9, 3.9086460012676888`*^9}, {
   3.908646462720601*^9, 3.9086464908946733`*^9}, {3.908646566575778*^9, 
   3.908646566941762*^9}, {3.908646888725131*^9, 3.908646890042796*^9}, {
   3.908647064651458*^9, 3.908647065425074*^9}, {3.908647171787343*^9, 
   3.9086471719678783`*^9}, {3.908647626343566*^9, 3.9086476355078077`*^9}, {
   3.908648376977553*^9, 3.908648378188895*^9}, {3.90864853841593*^9, 
   3.9086485438515377`*^9}, {3.9086494959702377`*^9, 3.908649498529934*^9}, {
   3.908649797706119*^9, 3.908649799469589*^9}, {3.908650041121591*^9, 
   3.908650048994862*^9}, {3.908651092935049*^9, 3.9086510947681103`*^9}, {
   3.9088933302200727`*^9, 3.9088933306436577`*^9}, {3.9088936152731*^9, 
   3.9088936157370853`*^9}, 3.908986037795216*^9, 3.9089890752906322`*^9, {
   3.9090689097355747`*^9, 3.9090689269033546`*^9}, {3.909069315031383*^9, 
   3.9090693243899307`*^9}, {3.909069402774691*^9, 3.909069410437347*^9}, {
   3.909071358679454*^9, 3.909071376726318*^9}, {3.909071688477652*^9, 
   3.909071742121518*^9}, 3.909071818901597*^9, {3.9090720454609528`*^9, 
   3.909072047317885*^9}, {3.9090721017039433`*^9, 3.909072102711548*^9}, {
   3.909072350541589*^9, 3.909072365143858*^9}, {3.90907365198072*^9, 
   3.90907368157472*^9}, {3.9090740970723467`*^9, 3.9090741048427153`*^9}, {
   3.90922482303765*^9, 3.9092248263144693`*^9}, {3.909243274860848*^9, 
   3.909243279020105*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[12]:=",ExpressionUUID->"853d7cd6-a108-4313-ae09-19fd49b9b9c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dat0", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"dat00", ",", "1"}], "]"}], ",", "JJ"}], "]"}], "]"}], ",", 
      "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9086341566871367`*^9, 3.9086341591271048`*^9}, {
   3.908635285543046*^9, 3.908635334693664*^9}, 3.9086354675824823`*^9, {
   3.908638318292225*^9, 3.9086383287937517`*^9}, {3.908638450410726*^9, 
   3.908638461320383*^9}, 3.9086391235169992`*^9, 3.908639201660718*^9, {
   3.9086429772669983`*^9, 3.9086430211598043`*^9}, {3.908645972805496*^9, 
   3.90864597742492*^9}, {3.908651354789197*^9, 3.908651368014598*^9}, {
   3.908651554362318*^9, 3.908651570933153*^9}, {3.908651653613847*^9, 
   3.908651658868795*^9}, {3.9086516903576937`*^9, 3.908651699524119*^9}, {
   3.908893929752508*^9, 3.908893972477972*^9}, {3.908894011262257*^9, 
   3.9088940436453743`*^9}, {3.909073714580182*^9, 3.90907372107555*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9f8391bc-12c8-4aa6-85df-26209a638092"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"Transpose", "[", "dat0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"Transpose", "[", "x", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.90862993134897*^9, 3.90862994716473*^9}, {
  3.908629990656089*^9, 3.908629995446803*^9}, {3.908634192025166*^9, 
  3.908634195494688*^9}, {3.908634359801667*^9, 3.908634374837175*^9}, {
  3.908634633524576*^9, 3.908634641123056*^9}, {3.908641298171732*^9, 
  3.908641309665421*^9}, {3.908641390154951*^9, 3.908641390224802*^9}, {
  3.908641447201645*^9, 3.9086414473567944`*^9}, {3.908646577967555*^9, 
  3.908646583078199*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8da77169-9f34-4eef-918c-9db44120aa75"],

Cell[BoxData["5000"], "Output",
 CellChangeTimes->{{3.90863436449155*^9, 3.9086343754156723`*^9}, 
   3.908634642366118*^9, 3.9086347697838297`*^9, 3.908634875959899*^9, 
   3.908635002508462*^9, 3.908635469851474*^9, 3.9086378952086077`*^9, 
   3.9086381755239677`*^9, 3.908638330808957*^9, 3.9086384166214657`*^9, 
   3.908638462732649*^9, 3.908638596169129*^9, 3.9086391254365873`*^9, {
   3.908639210476528*^9, 3.908639235918363*^9}, 3.90863943469238*^9, 
   3.90863968855403*^9, 3.908640062653905*^9, 3.908640137610677*^9, 
   3.9086401807424917`*^9, 3.908640266721683*^9, 3.9086412101702347`*^9, 
   3.908641310743486*^9, 3.908641390710669*^9, {3.908641447779499*^9, 
   3.908641477275648*^9}, 3.9086421405638857`*^9, 3.908643371039349*^9, 
   3.9086435032637663`*^9, 3.908643612598674*^9, 3.908643795697772*^9, {
   3.9086459793783216`*^9, 3.908646004384962*^9}, {3.908646473827936*^9, 
   3.908646492993072*^9}, 3.9086465840995417`*^9, 3.9086466590803003`*^9, 
   3.908646892510614*^9, 3.908647067698592*^9, 3.908647124252242*^9, 
   3.908647174235351*^9, 3.908648380464944*^9, 3.908648546231286*^9, 
   3.908649501051577*^9, 3.90864980296065*^9, 3.908650066367732*^9, 
   3.9086510977554007`*^9, 3.90865138550136*^9, 3.908651466768569*^9, 
   3.908651575744137*^9, 3.908651613521092*^9, 3.908651661010879*^9, 
   3.90865170131713*^9, 3.9086539651115217`*^9, 3.908709492479417*^9, 
   3.9087252172570972`*^9, 3.908894084977016*^9, 3.9089860421552687`*^9, 
   3.908989077492782*^9, 3.90898999284522*^9, 3.909068933113492*^9, 
   3.9090693955846148`*^9, 3.909069426312017*^9, 3.909070836559252*^9, 
   3.909071390498908*^9, 3.909071830176519*^9, 3.909072052428852*^9, 
   3.909074110224955*^9, 3.909077371003788*^9, 3.909154617372437*^9, 
   3.9092248321096563`*^9, 3.9092274349458227`*^9, 3.909229296478758*^9, 
   3.909230211169106*^9, 3.9092433840869837`*^9, 3.9094895958764553`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"16e3529c-de33-4c9d-831c-d9c52d0c8898"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", "1.0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "JJ"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", "X0", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.908634253051508*^9, 3.908634255479335*^9}, {
  3.908640254104775*^9, 3.908640258794993*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"bca2d396-a0a4-4089-9234-1dc3d9c5568c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "=", "X0"}], ";"}]], "Input",
 CellChangeTimes->{{3.906208993583805*^9, 3.9062089965062103`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"c4cdcbf5-cbee-4eb5-9401-349aabcff744"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"Correlation", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "c", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8948080146435404`*^9, 3.8948194318661346`*^9, {3.905870443514635*^9, 
   3.9058704469373827`*^9}, {3.905874095239604*^9, 3.9058741053972483`*^9}, {
   3.906133401501116*^9, 3.906133405106762*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[20]:=",ExpressionUUID->"e5856cb1-9673-48a3-9eee-e0ae0ffb18b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ei", "=", 
   RowBox[{"Eigenvalues", "[", "c", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8948162840956144`*^9, {3.905870449665101*^9, 3.9058704539845037`*^9}, {
   3.905874109686253*^9, 3.9058741381218987`*^9}, {3.906133407643888*^9, 
   3.9061334090347958`*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[22]:=",ExpressionUUID->"1e7058e4-542b-4f6f-b87f-58b8d9b364a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ee", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ei", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"JJ", ",", "150"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"ee", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.894818355196305*^9, 3.8948183782367945`*^9}, {
  3.894975418928136*^9, 3.894975424881665*^9}, {3.894976116060651*^9, 
  3.8949761163886847`*^9}, {3.894980522638934*^9, 3.8949805229891033`*^9}, {
  3.905870520361787*^9, 3.90587052321621*^9}, {3.905874141470099*^9, 
  3.9058741837412767`*^9}, {3.9061334319153214`*^9, 3.9061334426520243`*^9}, {
  3.9061415601517*^9, 3.906141573626292*^9}, {3.90863924514338*^9, 
  3.908639252330151*^9}, {3.908650094933032*^9, 3.90865011082684*^9}, {
  3.909068945320622*^9, 3.90906894750336*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[23]:=",ExpressionUUID->"53eba45e-c706-468f-b797-546ab0e7b24e"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 150.}, {0, 2829.797948653393}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.906141567334587*^9, 3.906141574073827*^9}, 
   3.906141933039898*^9, 3.9062087479153757`*^9, 3.906209021553321*^9, 
   3.906213655984642*^9, 3.906215550785222*^9, 3.90622430728192*^9, 
   3.9086284499579906`*^9, 3.9086346655393887`*^9, 3.9086347792913218`*^9, 
   3.908634889382921*^9, 3.908635023729374*^9, 3.908635489471333*^9, 
   3.908637915460702*^9, 3.9086381792588778`*^9, 3.908638334666892*^9, 
   3.908638420214916*^9, 3.908638466960404*^9, 3.908638599731914*^9, 
   3.908639129311019*^9, 3.908639214502236*^9, 3.908639252986294*^9, 
   3.908639438975397*^9, 3.908639692492681*^9, 3.908640066275264*^9, 
   3.908640140918199*^9, 3.908640184588748*^9, 3.9086402704566793`*^9, 
   3.9086413276025763`*^9, 3.908641395549594*^9, {3.9086414543908863`*^9, 
   3.9086414828546267`*^9}, 3.908642148417446*^9, 3.908643381567748*^9, 
   3.908643510677953*^9, 3.908643616884194*^9, 3.908643803124954*^9, 
   3.9086460096040916`*^9, 3.908646514327304*^9, 3.9086465923635693`*^9, 
   3.9086466653644876`*^9, 3.908646910289455*^9, 3.908647128302843*^9, 
   3.908647178738593*^9, 3.908648397609734*^9, 3.9086485695394993`*^9, 
   3.908649505615179*^9, 3.9086498318026543`*^9, {3.9086500908620787`*^9, 
   3.908650111495219*^9}, 3.9086511039033813`*^9, 3.908651391363295*^9, 
   3.908651470489999*^9, 3.908651581146*^9, 3.908651620940741*^9, 
   3.908651667009615*^9, 3.908651706095096*^9, 3.908653967311741*^9, 
   3.908709500912663*^9, 3.9087252230772543`*^9, 3.9088940995962973`*^9, 
   3.908986049107396*^9, 3.908989082527142*^9, 3.908989994547427*^9, {
   3.909068939323082*^9, 3.909068948204558*^9}, 3.909069434238039*^9, 
   3.909070841983123*^9, 3.909071393966139*^9, 3.9090718373268967`*^9, 
   3.909072056829401*^9, 3.909074118285452*^9, 3.9090773755424633`*^9, 
   3.9091546225669947`*^9, 3.909224840373852*^9, 3.909227444489332*^9, 
   3.909229303530876*^9, 3.90923021818014*^9, 3.909243407488797*^9, 
   3.909489617496105*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"34dd8bf4-11eb-4dc5-bfed-d20fbb8ed3f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"ei", "[", 
     RowBox[{"[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "80"}], "}"}]}], "]"}], 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"ei", "[", 
     RowBox[{"[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "JJ"}], "}"}]}], "]"}]]], "Input",
 CellChangeTimes->{{3.906142525668046*^9, 3.906142620032568*^9}, {
   3.906142653265492*^9, 3.9061426534199533`*^9}, {3.906142786680311*^9, 
   3.9061427870590143`*^9}, {3.906143114637808*^9, 3.9061431332281847`*^9}, {
   3.906224536210473*^9, 3.9062245467440557`*^9}, {3.906224857111877*^9, 
   3.906224857612924*^9}, {3.9062265801356373`*^9, 3.906226580403524*^9}, {
   3.9086284636664543`*^9, 3.9086284648145523`*^9}, {3.9086348964620037`*^9, 
   3.908634902651335*^9}, 3.908643517383771*^9, 3.908647184658621*^9, {
   3.908709525742971*^9, 3.908709526220104*^9}, {3.909068957616847*^9, 
   3.909068957968008*^9}, {3.909229312368104*^9, 3.9092293126851463`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"35060fb4-fbbf-4131-b5ac-20d032813d49"],

Cell[BoxData["0.9249854362066318`"], "Output",
 CellChangeTimes->{{3.906142562230577*^9, 3.906142620879911*^9}, 
   3.9061426537916203`*^9, 3.9061427875621033`*^9, {3.906143116356414*^9, 
   3.9061431336461763`*^9}, 3.906208747936016*^9, 3.906209021576819*^9, 
   3.906213656010582*^9, 3.906215550815712*^9, 3.906224312297348*^9, {
   3.9062245368052692`*^9, 3.9062245471772633`*^9}, 3.906224859817466*^9, 
   3.906226580995427*^9, {3.9086284624357452`*^9, 3.908628465880954*^9}, 
   3.908634667079741*^9, 3.9086347806927156`*^9, {3.908634892634676*^9, 
   3.908634903233039*^9}, 3.9086350257003403`*^9, 3.908635491279297*^9, 
   3.908637916534421*^9, 3.9086381816552343`*^9, 3.908638336950008*^9, 
   3.908638422445671*^9, 3.9086384681838293`*^9, 3.908638601292026*^9, 
   3.908639134027665*^9, 3.9086392222681837`*^9, 3.908639254889032*^9, 
   3.908639440402171*^9, 3.908639695528254*^9, 3.908640067463643*^9, 
   3.9086401421165667`*^9, 3.908640186295636*^9, 3.908640271766162*^9, 
   3.908641328909939*^9, 3.90864139658139*^9, {3.908641455787744*^9, 
   3.9086414843016653`*^9}, 3.908642150595243*^9, 3.908643382730023*^9, 
   3.908643517959989*^9, 3.908643617985174*^9, 3.908643804250709*^9, 
   3.908646011012233*^9, 3.908646515553409*^9, 3.908646593648417*^9, 
   3.908646666784791*^9, 3.908646912944366*^9, 3.908647130225511*^9, 
   3.908647185315886*^9, 3.90864840016171*^9, 3.908648571442491*^9, 
   3.908649507532818*^9, 3.908649837429723*^9, 3.908650121376425*^9, 
   3.908651105103435*^9, 3.9086513929940147`*^9, 3.9086514705234823`*^9, 
   3.908651583469709*^9, 3.908651622355122*^9, 3.908651668229651*^9, 
   3.908651707157506*^9, 3.908653967334216*^9, {3.908709503983124*^9, 
   3.9087095268214808`*^9}, 3.908725224494444*^9, 3.908894101336891*^9, 
   3.908986050590967*^9, 3.90898908345299*^9, 3.90898999459664*^9, 
   3.909068958584978*^9, 3.909069435976265*^9, 3.909070844261475*^9, 
   3.909071394759738*^9, 3.9090718412092257`*^9, 3.909072057672638*^9, 
   3.9090741216412077`*^9, 3.909077376964036*^9, 3.9091546244337387`*^9, 
   3.9092248432240133`*^9, 3.9092274469320307`*^9, {3.909229306540649*^9, 
   3.90922931335706*^9}, 3.909230220155775*^9, 3.909243409494691*^9, 
   3.9094896205493383`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"75569669-ed0d-4b09-b5c9-42f2755272da"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"-", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Eigenvectors", "[", "c", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "U", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.894816385545452*^9, 3.8948194426661425`*^9, {3.905870527220895*^9, 
   3.905870530816264*^9}, {3.906133445027534*^9, 3.9061334474578943`*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[26]:=",ExpressionUUID->"6b7da122-491d-47d9-a87c-cb1e7251f21b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"-", 
    RowBox[{"X", ".", "U"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.905870533929429*^9, 3.9058705373281*^9}, {
  3.9061334738262453`*^9, 3.906133475610029*^9}},
 FontFamily->"Source Code Pro",
 FontWeight->"Bold",
 CellLabel->"In[28]:=",ExpressionUUID->"7235d6b6-32a5-469d-98d1-515630d6f93e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tam", "=", 
  RowBox[{"Round", "[", 
   RowBox[{"II", "*", "0.75"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.894974177796876*^9, 3.894974205270395*^9}, {
  3.9086402967394*^9, 3.908640298361527*^9}, {3.908989564335638*^9, 
  3.908989564694284*^9}, {3.9089896155758123`*^9, 3.908989615637001*^9}, {
  3.908989714760294*^9, 3.9089897171317*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"3c87471f-f17b-4fb9-8a26-e697a4ab23c4"],

Cell[BoxData["274"], "Output",
 CellChangeTimes->{{3.8949741882698755`*^9, 3.8949742071783576`*^9}, 
   3.8949746948872013`*^9, 3.8949754879625597`*^9, 3.8949777565058403`*^9, 
   3.8949810330664654`*^9, 3.894988507808277*^9, 3.8949893306414337`*^9, 
   3.8949896902759743`*^9, 3.8949898295141926`*^9, 3.894989957721465*^9, 
   3.894990368067534*^9, 3.894991363159618*^9, 3.8950595500794907`*^9, 
   3.8950597821028852`*^9, 3.895059903073785*^9, 3.895063765017673*^9, 
   3.905861737251657*^9, 3.9058690538105707`*^9, 3.905871023976914*^9, 
   3.905874243323838*^9, 3.905875335017441*^9, 3.905960212063442*^9, 
   3.905963151078691*^9, 3.90603857117633*^9, 3.9061334774074507`*^9, 
   3.906134015773971*^9, 3.906136303477253*^9, 3.906139037450651*^9, 
   3.906141100106777*^9, 3.906141599602633*^9, 3.906142027474903*^9, 
   3.9061426773176603`*^9, 3.906208768187368*^9, 3.906209037234374*^9, 
   3.9062136725110283`*^9, 3.906215567751519*^9, 3.906224494721426*^9, 
   3.908628473037303*^9, 3.908634673268402*^9, 3.9086347850529423`*^9, 
   3.9086349059151*^9, 3.9086350541210127`*^9, 3.908635510695294*^9, 
   3.908637922167782*^9, 3.908638185716981*^9, 3.908638339650651*^9, 
   3.908638424955949*^9, 3.9086384709313087`*^9, 3.9086386065621758`*^9, 
   3.9086391370062943`*^9, 3.9086392629967337`*^9, 3.908639443324067*^9, 
   3.908639699562851*^9, 3.908640069767557*^9, 3.908640144160673*^9, 
   3.908640188433052*^9, {3.9086402742935333`*^9, 3.908640299050271*^9}, 
   3.908641331956716*^9, 3.9086413990199337`*^9, 3.908641459412333*^9, 
   3.908641491135611*^9, 3.9086421542722*^9, 3.9086433871370363`*^9, 
   3.9086435238325043`*^9, 3.908643622015629*^9, 3.9086438083823833`*^9, 
   3.908646015424082*^9, 3.908646519967268*^9, 3.9086465977988367`*^9, 
   3.908646669624061*^9, 3.908646933624673*^9, 3.9086471335406017`*^9, 
   3.908647189675289*^9, 3.908648421281917*^9, 3.908648729324798*^9, 
   3.9086495120074873`*^9, 3.90865014599233*^9, 3.9086511088058147`*^9, 
   3.908651397805357*^9, 3.908651474123999*^9, 3.908651588812245*^9, 
   3.908651629967553*^9, 3.908651672843542*^9, 3.908651710388056*^9, 
   3.9086539690074987`*^9, 3.9087095122639637`*^9, 3.908725229435259*^9, 
   3.9088941061973248`*^9, 3.908986053796299*^9, 3.9089890860132627`*^9, 
   3.9089895653588343`*^9, {3.908989620611916*^9, 3.908989637455743*^9}, 
   3.908989718347517*^9, 3.908989996139031*^9, 3.909068962038554*^9, 
   3.909069440079225*^9, 3.909070847496361*^9, 3.909071396854665*^9, 
   3.9090718475373783`*^9, 3.909072060162675*^9, 3.909074127678423*^9, 
   3.90907738020891*^9, 3.909154626925263*^9, 3.909224848228286*^9, 
   3.909227452413925*^9, 3.9092293186492567`*^9, 3.9092302249812403`*^9, 
   3.9092434372309103`*^9, 3.9094896479870863`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"bcfad637-c48d-4fa3-8d75-7ae74618c0da"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NEi", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "NEi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"dcl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"L", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", 
      RowBox[{"LAB", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.894975613372037*^9, 3.894975703647992*^9}, {
   3.894975960464261*^9, 3.8949759605736294`*^9}, {3.8949760338554535`*^9, 
   3.894976033949211*^9}, {3.894976074534523*^9, 3.8949760746126366`*^9}, {
   3.894976308285455*^9, 3.8949763859388914`*^9}, {3.8949764912384825`*^9, 
   3.8949764913790555`*^9}, {3.894976556657398*^9, 3.8949765567355013`*^9}, {
   3.8949778548548117`*^9, 3.8949778549328938`*^9}, {3.894978019313586*^9, 
   3.8949780833864417`*^9}, {3.894978437075186*^9, 3.8949784372002163`*^9}, {
   3.894978504609423*^9, 3.8949785087708344`*^9}, {3.8949785801792297`*^9, 
   3.8949786309039235`*^9}, {3.8949786697097664`*^9, 
   3.8949786972549334`*^9}, {3.8949813487032604`*^9, 
   3.8949813492732296`*^9}, {3.8949813927262964`*^9, 
   3.8949813928224697`*^9}, {3.8949814279310675`*^9, 3.894981428111515*^9}, {
   3.8949814900315247`*^9, 3.894981509421505*^9}, {3.8949815401117277`*^9, 
   3.8949815416517506`*^9}, {3.8949816949474087`*^9, 3.894981695192412*^9}, {
   3.894981759532383*^9, 3.8949817596124425`*^9}, {3.8949818117631454`*^9, 
   3.894981811882924*^9}, 3.894989035329754*^9, {3.894989440642629*^9, 
   3.8949894412915*^9}, {3.8949899850163965`*^9, 3.894990020646209*^9}, {
   3.894990204226383*^9, 3.8949902043578663`*^9}, {3.894990429234985*^9, 
   3.8949904293508825`*^9}, {3.8949905013226547`*^9, 
   3.8949905013916845`*^9}, {3.894991379197612*^9, 3.8949913795678463`*^9}, {
   3.905870597361404*^9, 3.905870601624254*^9}, {3.9061334805818653`*^9, 
   3.9061334835863047`*^9}, {3.9061417967153263`*^9, 3.906141816135417*^9}, {
   3.90614203850359*^9, 3.9061420386451807`*^9}, {3.9061426325731907`*^9, 
   3.9061426334238586`*^9}, {3.906142681398848*^9, 3.9061426815750027`*^9}, {
   3.906142731990088*^9, 3.906142740918543*^9}, {3.906143138703514*^9, 
   3.9061431390992327`*^9}, {3.9062245313447227`*^9, 3.906224556455332*^9}, {
   3.906224863559203*^9, 3.906224863868585*^9}, {3.906224897935643*^9, 
   3.9062249195240107`*^9}, {3.906225113966354*^9, 3.906225133321929*^9}, {
   3.906225802487496*^9, 3.90622580257883*^9}, {3.906226286729611*^9, 
   3.906226344557189*^9}, {3.908634800058752*^9, 3.908634801162022*^9}, {
   3.908635065077132*^9, 3.908635099568074*^9}, {3.908635531309944*^9, 
   3.9086355314049788`*^9}, {3.908637927838686*^9, 3.908637927941759*^9}, {
   3.90863804386178*^9, 3.908638058269505*^9}, {3.9086382381002398`*^9, 
   3.908638239082829*^9}, {3.908638352259324*^9, 3.9086383523615437`*^9}, 
   3.908639153862961*^9, {3.9086393138765497`*^9, 3.908639314001892*^9}, {
   3.908639366052003*^9, 3.908639366665607*^9}, {3.9086397021112432`*^9, 
   3.908639702751184*^9}, {3.908640190207683*^9, 3.9086401903472424`*^9}, {
   3.908640279831455*^9, 3.908640281434513*^9}, {3.90864160341247*^9, 
   3.9086416035427847`*^9}, {3.9086416636128197`*^9, 3.908641663718298*^9}, {
   3.908641744394423*^9, 3.908641744509267*^9}, {3.908641957944728*^9, 
   3.908641958053259*^9}, {3.908642091662465*^9, 3.908642092410554*^9}, {
   3.908642759225172*^9, 3.908642787108363*^9}, {3.9086428449651623`*^9, 
   3.908642851764084*^9}, {3.908643653113809*^9, 3.908643662429043*^9}, {
   3.9086437176132936`*^9, 3.908643717716155*^9}, {3.908646065020338*^9, 
   3.9086460651555643`*^9}, {3.908646147332135*^9, 3.908646165938609*^9}, {
   3.90864622006708*^9, 3.908646220185862*^9}, {3.908646671792631*^9, 
   3.908646681077504*^9}, {3.9086467413030853`*^9, 3.9086467534448233`*^9}, {
   3.9086469910453243`*^9, 3.908646991562469*^9}, {3.9086471428675327`*^9, 
   3.908647142969096*^9}, {3.908647204779558*^9, 3.908647205392415*^9}, {
   3.908647254418499*^9, 3.908647254532206*^9}, {3.9086482185393667`*^9, 
   3.908648218815024*^9}, 3.908648249203074*^9, {3.908648470217451*^9, 
   3.908648493908505*^9}, {3.908648808710264*^9, 3.908648808817519*^9}, {
   3.908649523060733*^9, 3.908649523601369*^9}, {3.908649663515176*^9, 
   3.908649665040675*^9}, {3.908650324603567*^9, 3.90865035649658*^9}, {
   3.9086504046301823`*^9, 3.9086504047760553`*^9}, {3.9086507546610527`*^9, 
   3.908650754860263*^9}, {3.9086512270454473`*^9, 3.908651227143684*^9}, {
   3.9087252511108093`*^9, 3.908725251818569*^9}, {3.908986061220664*^9, 
   3.908986061340218*^9}, {3.908986129442822*^9, 3.908986129770165*^9}, {
   3.9089863507006702`*^9, 3.908986465208353*^9}, {3.908986505072713*^9, 
   3.908986580116446*^9}, {3.908986611842761*^9, 3.908986612008654*^9}, {
   3.9089866739075193`*^9, 3.9089867206977*^9}, {3.9089867514605093`*^9, 
   3.9089867715382233`*^9}, {3.908986899955738*^9, 3.908986961303515*^9}, {
   3.908987100449853*^9, 3.908987133078117*^9}, {3.9089872230255337`*^9, 
   3.9089872399215097`*^9}, {3.908987290289648*^9, 3.908987424099949*^9}, {
   3.908987462246991*^9, 3.908987523324492*^9}, {3.9089875827199306`*^9, 
   3.908987582822096*^9}, {3.908987866724902*^9, 3.908987869031464*^9}, {
   3.9089879739539022`*^9, 3.9089879889135113`*^9}, {3.908988314341928*^9, 
   3.9089883160804443`*^9}, {3.9089884899553957`*^9, 3.908988490030755*^9}, {
   3.90898957673602*^9, 3.9089895769670362`*^9}, {3.909068971316448*^9, 
   3.9090689728074493`*^9}, {3.909069009944621*^9, 3.909069035927519*^9}, {
   3.909069452694762*^9, 3.9090694891092653`*^9}, {3.909070857363888*^9, 
   3.909070876279996*^9}, {3.909070960280816*^9, 3.9090709608220663`*^9}, {
   3.909071872054537*^9, 3.909071872173511*^9}, {3.9090741317847557`*^9, 
   3.9090741387871943`*^9}, {3.909074385600336*^9, 3.909074396725515*^9}, {
   3.9090745663815327`*^9, 3.909074570699521*^9}, {3.9090750178580647`*^9, 
   3.909075020115794*^9}, {3.909075056721582*^9, 3.909075056863235*^9}, {
   3.90907513542559*^9, 3.90907515348631*^9}, {3.9090751913780117`*^9, 
   3.909075219701846*^9}, {3.9090756365984907`*^9, 3.909075636849992*^9}, {
   3.90907576873245*^9, 3.909075821043964*^9}, {3.9090760585456867`*^9, 
   3.909076064089327*^9}, {3.90922487308354*^9, 3.909224876637107*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"52260343-387d-41e4-994f-49cdf22c7db8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ltrai", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"dcl", ",", "tam"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ltest", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"dcl", ",", "Ltrai"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8949708356376514`*^9, 3.8949708556633787`*^9}, {
  3.894971944402735*^9, 3.89497194999603*^9}, {3.8949739747300253`*^9, 
  3.894973977307974*^9}, {3.8949742108821106`*^9, 3.894974220671528*^9}, {
  3.894974352529383*^9, 3.8949743853506503`*^9}, {3.894977832608354*^9, 
  3.8949778348353353`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"236a93cb-ab3e-41c8-9ffc-8b5d4b11f4a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NEiR", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LtraiR", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Ltrai", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "NEiR"}], "]"}], "->", 
      RowBox[{"Ltrai", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Ltrai", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"LtestR", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Ltest", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "NEiR"}], "]"}], "->", 
      RowBox[{"Ltest", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Ltest", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"CL", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"LtraiR", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.906140266692336*^9, 3.906140267650202*^9}, {
   3.906140300185812*^9, 3.906140301514637*^9}, {3.9061403918030376`*^9, 
   3.90614044400245*^9}, {3.9061404795146923`*^9, 3.9061405457853003`*^9}, {
   3.9061406192290573`*^9, 3.9061406438414392`*^9}, {3.9061411147675533`*^9, 
   3.906141122622786*^9}, {3.908648232656803*^9, 3.908648241311079*^9}, {
   3.908986075731525*^9, 3.9089860767233667`*^9}, {3.908986169947423*^9, 
   3.908986171826788*^9}, {3.908986218685493*^9, 3.908986238082526*^9}, {
   3.908986277702704*^9, 3.908986341947357*^9}, {3.908986411876945*^9, 
   3.908986414265273*^9}, {3.9089865562586403`*^9, 3.908986557864986*^9}, {
   3.908986654108836*^9, 3.908986654833197*^9}, 3.9089868426275263`*^9, {
   3.908986876011427*^9, 3.9089868782173233`*^9}, {3.9089870162182083`*^9, 
   3.908987053774537*^9}, {3.908987207552752*^9, 3.908987211397614*^9}, 
   3.908987273099361*^9, {3.9089880641536713`*^9, 3.908988106070649*^9}, {
   3.908988146986218*^9, 3.908988258073538*^9}, {3.908988337737959*^9, 
   3.9089883658163643`*^9}, {3.908988414481367*^9, 3.908988414615651*^9}, {
   3.908988529344914*^9, 3.908988531542819*^9}, {3.9089885752804623`*^9, 
   3.90898862408661*^9}, {3.908988661807827*^9, 3.908988662686487*^9}, {
   3.908988714423978*^9, 3.908988744038555*^9}, {3.908988789619681*^9, 
   3.908988825687976*^9}, {3.908988859307436*^9, 3.908988901230302*^9}, {
   3.908989147959909*^9, 3.908989223638344*^9}, {3.908989276223892*^9, 
   3.9089893072224903`*^9}, {3.909068978920411*^9, 3.909068979855762*^9}, {
   3.909069524664575*^9, 3.909069527293326*^9}, {3.909069575856189*^9, 
   3.909069575946856*^9}, {3.9090696093436947`*^9, 3.9090696520568333`*^9}, {
   3.909070939625012*^9, 3.909070946727401*^9}, {3.909071046767812*^9, 
   3.9090710607020884`*^9}, {3.9090711771660833`*^9, 3.909071190532827*^9}, {
   3.909071588091916*^9, 3.909071595031049*^9}, {3.909071996255643*^9, 
   3.909071997012843*^9}, {3.909072079044918*^9, 3.909072079331497*^9}, {
   3.909072149324011*^9, 3.909072159930497*^9}, {3.9090724060575733`*^9, 
   3.909072429801243*^9}, {3.909072501546556*^9, 3.909072544899859*^9}, 
   3.909072649596287*^9, {3.909073102539304*^9, 3.909073103585229*^9}, {
   3.909074477477162*^9, 3.9090745461023808`*^9}, {3.909074603788772*^9, 
   3.909074603899341*^9}, {3.9090747212834797`*^9, 3.909074735230548*^9}, {
   3.909074765338954*^9, 3.909074797793364*^9}, 3.909074965394293*^9, {
   3.909075026481504*^9, 3.909075030471202*^9}, {3.909075119175519*^9, 
   3.909075132573926*^9}, {3.9090760492313757`*^9, 3.909076055245617*^9}, {
   3.9090761221754208`*^9, 3.909076150921694*^9}, {3.9090762061582108`*^9, 
   3.9090763322114763`*^9}, {3.9090763719405212`*^9, 3.909076400979566*^9}, 
   3.9090764461238422`*^9, {3.909076479285491*^9, 3.909076487498066*^9}, {
   3.909076546922937*^9, 3.909076634578088*^9}, {3.909076680697521*^9, 
   3.90907679173463*^9}, {3.909076829232888*^9, 3.9090768461185417`*^9}, {
   3.909076876543976*^9, 3.9090769585011168`*^9}, {3.9090770472534447`*^9, 
   3.909077230281685*^9}, {3.9090795405874777`*^9, 3.909079540657947*^9}, {
   3.909224887565638*^9, 3.9092248880132*^9}, {3.909225014503295*^9, 
   3.909225022539465*^9}, {3.909229326325424*^9, 3.90922932682889*^9}, {
   3.909243488076662*^9, 3.90924349485119*^9}, {3.909243538404434*^9, 
   3.909243612514114*^9}, {3.909243653923479*^9, 3.909243675745895*^9}, {
   3.909244270797186*^9, 3.909244285443398*^9}, {3.9094896902664347`*^9, 
   3.9094896903139887`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"91325cc6-b7a8-414c-9f4b-035e9053a7fd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "40", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox["16", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"AKL\"", ",", "\"BAL\"", ",", "\"BER\"", ",", "\"BOG\"",
                     ",", "\"DEN\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",",
                     "\"SAO\"", ",", "\"TOK\"", ",", "\"VIE\"", ",", 
                    "\"ZRH\""}], "}"}], Short[#, 1]& ]], Annotation[#, 
                    
                    Short[{"AKL", "BAL", "BER", "BOG", "DEN", "DOH", "ILR", 
                    "LIS", "MIN", "NYC", "SAC", "SAN", "SAO", "TOK", "VIE", 
                    "ZRH"}, 1], "Tooltip"]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "40", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox["16", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"AKL\"", ",", "\"BAL\"", ",", "\"BER\"", ",", "\"BOG\"",
                     ",", "\"DEN\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",",
                     "\"SAO\"", ",", "\"TOK\"", ",", "\"VIE\"", ",", 
                    "\"ZRH\""}], "}"}], Short[#, 1]& ]], Annotation[#, 
                    
                    Short[{"AKL", "BAL", "BER", "BOG", "DEN", "DOH", "ILR", 
                    "LIS", "MIN", "NYC", "SAC", "SAN", "SAO", "TOK", "VIE", 
                    "ZRH"}, 1], "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["274", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 274, "ClassNumber" -> 16, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 40]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["SynthesizeMissingValues", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Distribution" -> 
             LearnedDistribution[
               Association[
               "ExampleNumber" -> 274, "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 40]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
                "Processor" -> MachineLearning`MLProcessor["Identity"], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, "Model" -> 
                Association["RotationMatrix" -> CompressedData["
1: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
XoMF6s9USeYi4SBU2MDzUjv8D6PV1Os=
                   "], 
                  "Precisions" -> {0.00017178284942523457`, 
                   0.0006194313522566918, 0.002200917759470346, 
                   0.0032404027636190745`, 0.004098930395410821, 
                   0.005909657158601822, 0.007128228781878203, 
                   0.009972161460201828, 0.011212766299024743`, 
                   0.012808272648125433`, 0.012947597545022558`, 
                   0.017263564440009926`, 0.019515450253552027`, 
                   0.020335503230730308`, 0.024170526157116415`, 
                   0.026195852949926497`, 0.02819534766123125, 
                   0.030110784112075996`, 0.030480172252917277`, 
                   0.03276047471458164, 0.03641040619321771, 
                   0.03778748323244308, 0.04079518698191762, 
                   0.04107957810697357, 0.04306750810137962, 
                   0.04412880124470741, 0.04674890426222756, 
                   0.04967247208013884}, "NoisePrecision" -> 
                  0.06979102293451982, "Processor" -> 
                  MachineLearning`MLProcessor["Center", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAC+T78gu9RpwBpZ7M6FlkTARm/K565FJMC/
MOJoxeMdQLqrXLkiOz3A3+lGFYfcI8Bde+10SXkfwExwgQdZUjpALoV9Oleu
OMCz1QWKgQ4dQBH0M5WdMhbASsZ3XoaXHcA4797AnwsWQDQYKkE01y3Al+uI
/OnVIsD8Um2iO/8oQFO99JO55xRAuS0am09LGkATHgbPO6MgwAHmDGG/bijA
8HorzondI8ATaD52nfkLQGqZSPNqIPm/qXFKV8SgJkDdOYXqkXnQvxTZzhic
/xFAsW6KwYgB8L8zUSAuAikTwIYjJCWJ3ApAvhOb0Y7dDcCRgWxKOMMXQMa4
QrHVfAxAD4fHRKZyEcCKb3010yP/v8YHrIP5z8U/wc3spw+S2z+BjsLf0Of1
Pyo73VOXZBtAcCJ55q8F4z8EYRTls9YUwFy2m7w=
                    "], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Version" -> {12.3, 0}, "ID" -> 8454953672375903564]], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]], "Method" -> 
                  "Multinormal", "Options" -> 
                  Association[
                   "CovarianceType" -> 
                    Association[
                    "Value" -> "Full", "Options" -> Association[]], 
                    "IntrinsicDimension" -> 
                    Association["Value" -> 28, "Options" -> Association[]]]], 
                "TrainingInformation" -> 
                Association["Configurations" -> Dataset[
                    Association[
                    Association[
                    "Value" -> "Multinormal", "Options" -> 
                    Association[
                    "CovarianceType" -> Association["Value" -> "Full"], 
                    "IntrinsicDimension" -> 
                    Association["Value" -> "Heuristic"]], "NaiveImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAC/T78gu9RpwB1Z7M6FlkTARm/K565FJMC+
MOJoxeMdQLarXLkiOz3A4OlGFYfcI8Ble+10SXkfwExwgQdZUjpALoV9Oleu
OMCy1QWKgQ4dQBD0M5WdMhbAS8Z3XoaXHcA1797AnwsWQDMYKkE01y3Ak+uI
/OnVIsD6Um2iO/8oQE+99JO55xRAuS0am09LGkAQHgbPO6MgwP3lDGG/bijA
8HorzondI8AVaD52nfkLQGqZSPNqIPm/oHFKV8SgJkDdOYXqkXnQvxfZzhic
/xFAsm6KwYgB8L83USAuAikTwIMjJCWJ3ApAwxOb0Y7dDcCSgWxKOMMXQMC4
QrHVfAxAFYfHRKZyEcCDb3010yP/v8EHrIP5z8U/wc3spw+S2z9/jsLf0Of1
Py073VOXZBtAcSJ55q8F4z8CYRTls9YUwPoXnKU=
                    "], 
                    "StandardDeviation" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAgWbBj+tVSQJfXBZb/90NAyWhHi+4GNUDA
zpKaoJ0xQDQxTq/8gDBAOlitgo/iKUC0cFkylrcoQF3hyf0DMShAddn0Wcfw
IkC2IDwIUnojQPA91XJM1yFAPQfqb4N0HkC9+rdxnEcdQDXcurXj+h1Akdso
q1irGUBhQLB8guAYQCSelRTn4xdAuZHQyztvF0D6zEOD51IWQEGBzHy9bRdA
sVVeDV0BFkCUC1ei45oUQAOhD05dMBVAmSvCZlecE0B2RS6a7+sTQLgI5V0L
ZBNAldbDgrRcFEC7zTFvX6ASQHst6sur1xFASCeE0z45EUA8sU4Kf8URQFBp
yviVXxFAFhFm+VILEUAB34gquBMRQJ/dT1ox8hFAz9Sh3/QNEEAG92cFalUQ
QG6LB5WHahBA9u5VAYWlD0CeLcVPyh4PQMici/8=
                    "], "Method" -> 
                    "NaiveSampler", "VectorLength" -> 40, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector", "Version" -> {12.3, 0}, "ID" -> 
                    4747808072524423015]], "EMIterations" -> 1] -> 
                    Association[]], 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], 
                    Association[]], "BestModelInformation" -> Dataset[
                    Association[
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]], 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], 
                    Association[]]], "NaiveImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAC/T78gu9RpwB1Z7M6FlkTARm/K565FJMC+
MOJoxeMdQLarXLkiOz3A4OlGFYfcI8Ble+10SXkfwExwgQdZUjpALoV9Oleu
OMCy1QWKgQ4dQBD0M5WdMhbAS8Z3XoaXHcA1797AnwsWQDMYKkE01y3Ak+uI
/OnVIsD6Um2iO/8oQE+99JO55xRAuS0am09LGkAQHgbPO6MgwP3lDGG/bijA
8HorzondI8AVaD52nfkLQGqZSPNqIPm/oHFKV8SgJkDdOYXqkXnQvxfZzhic
/xFAsm6KwYgB8L83USAuAikTwIMjJCWJ3ApAwxOb0Y7dDcCSgWxKOMMXQMC4
QrHVfAxAFYfHRKZyEcCDb3010yP/v8EHrIP5z8U/wc3spw+S2z9/jsLf0Of1
Py073VOXZBtAcSJ55q8F4z8CYRTls9YUwPoXnKU=
                    "], 
                   "StandardDeviation" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAgWbBj+tVSQJfXBZb/90NAyWhHi+4GNUDA
zpKaoJ0xQDQxTq/8gDBAOlitgo/iKUC0cFkylrcoQF3hyf0DMShAddn0Wcfw
IkC2IDwIUnojQPA91XJM1yFAPQfqb4N0HkC9+rdxnEcdQDXcurXj+h1Akdso
q1irGUBhQLB8guAYQCSelRTn4xdAuZHQyztvF0D6zEOD51IWQEGBzHy9bRdA
sVVeDV0BFkCUC1ei45oUQAOhD05dMBVAmSvCZlecE0B2RS6a7+sTQLgI5V0L
ZBNAldbDgrRcFEC7zTFvX6ASQHst6sur1xFASCeE0z45EUA8sU4Kf8URQFBp
yviVXxFAFhFm+VILEUAB34gquBMRQJ/dT1ox8hFAz9Sh3/QNEEAG92cFalUQ
QG6LB5WHahBA9u5VAYWlD0CeLcVPyh4PQMici/8=
                    "], "Method" -> 
                   "NaiveSampler", "VectorLength" -> 40, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector", "Version" -> {12.3, 0}, "ID" -> 
                   4747808072524423015]], "InputDimension" -> 0, 
                "OutputDimension" -> 40, "Log" -> 
                Association["Example" -> MachineLearning`MLDataset[
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJwBUQGu/iFib1JlAgAAAAEAAAAoAAAA1u8jNdQVXsAgizmMrmcIQMjOzIjL
6iBAX0IIPhPLLUDQArXoS0o2wFKYVQlMEynA9ew4eocRNsCiO4iB42ItQPlD
IOUcBDLAFw0f1VRCDkCwHK7UoYAXwACsMDbKqgXAxWQqWsD3CkB2VgpJmWgp
wKDG7ae2uyTA25ag+t4xMEBs6XH/ZK7hPwKle1JC1yRApWlzOCgUI8AYpVgh
+9UnwIjrtC6SzCjAfHZPr0I36r8bLswNKdQNwDxgaL3IdyZAqMkWGawZDcCo
iQS7iQ0WQAhcJqlQDQTAIC7oFHxFsj/a1z6hFY0YQFBHEoUbCO6/PMMknQQR
GEChLhzMl9AVQMI4g0W5qxLAxU1D1b628b8EnOGz5k39v4+tPO/gKQRACNXp
+KpLC0COZjnTHpUHQOazqLF59P8/j3dEzwU5HcAF5pLC
                    "], "ID" -> 
                    6900269369450652421]], 
                    Association[
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False]], 
                  "TrainingTime" -> 0.131177, "MaxTrainingMemory" -> 8245392, 
                  "DataMemory" -> 89656, "FunctionMemory" -> 43576, 
                  "LanguageVersion" -> {12.3, 0}, "Date" -> 
                  DateObject[{
                    2023, 11, 20, 11, 21, 32.645192`8.26639420764697}, 
                    "Instant", "Gregorian", -6.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}], 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[
                  Association[
                  "Quantiles" -> {-3.5789384542194997`, -3.5789384542194997`, \
-3.353705874589821, -3.321406572720505, -3.2963457744378086`, \
-3.2703930262236334`, -3.2438978580855844`, -3.2217815405297485`, \
-3.2108179776552235`, -3.2071890717527447`, -3.1466007152634385`}, 
                   "LeftBoundary" -> -3.353705874589821, "LeftScale" -> 
                   0.11261628981483929`, "LeftTailNorm" -> 0.2]], "Entropy" -> 
                Around[131.40430746191205`, 1.5154643417374833`], 
                "EntropySampleSize" -> 10]], "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {12.3, 0}, 
             "ID" -> 895810465636885430]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAC/T78gu9RpwB1Z7M6FlkTARm/K565FJMC+
MOJoxeMdQLarXLkiOz3A4OlGFYfcI8Ble+10SXkfwExwgQdZUjpALoV9Oleu
OMCy1QWKgQ4dQBD0M5WdMhbAS8Z3XoaXHcA1797AnwsWQDMYKkE01y3Ak+uI
/OnVIsD6Um2iO/8oQE+99JO55xRAuS0am09LGkAQHgbPO6MgwP3lDGG/bijA
8HorzondI8AVaD52nfkLQGqZSPNqIPm/oHFKV8SgJkDdOYXqkXnQvxfZzhic
/xFAsm6KwYgB8L83USAuAikTwIMjJCWJ3ApAwxOb0Y7dDcCSgWxKOMMXQMC4
QrHVfAxAFYfHRKZyEcCDb3010yP/v8EHrIP5z8U/wc3spw+S2z9/jsLf0Of1
Py073VOXZBtAcSJ55q8F4z8CYRTls9YUwPoXnKU=
              "], 
             "StandardDeviation" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAgWbBj+tVSQJfXBZb/90NAyWhHi+4GNUDA
zpKaoJ0xQDQxTq/8gDBAOlitgo/iKUC0cFkylrcoQF3hyf0DMShAddn0Wcfw
IkC2IDwIUnojQPA91XJM1yFAPQfqb4N0HkC9+rdxnEcdQDXcurXj+h1Akdso
q1irGUBhQLB8guAYQCSelRTn4xdAuZHQyztvF0D6zEOD51IWQEGBzHy9bRdA
sVVeDV0BFkCUC1ei45oUQAOhD05dMBVAmSvCZlecE0B2RS6a7+sTQLgI5V0L
ZBNAldbDgrRcFEC7zTFvX6ASQHst6sur1xFASCeE0z45EUA8sU4Kf8URQFBp
yviVXxFAFhFm+VILEUAB34gquBMRQJ/dT1ox8hFAz9Sh3/QNEEAG92cFalUQ
QG6LB5WHahBA9u5VAYWlD0CeLcVPyh4PQMici/8=
              "], "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12.3, 0}, "ID" -> 3090652515818404428]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12.3, 0}, "ID" -> 2315181629334253493]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[
               "AKL" -> 1, "BAL" -> 2, "BER" -> 3, "BOG" -> 4, "DEN" -> 5, 
                "DOH" -> 6, "ILR" -> 7, "LIS" -> 8, "MIN" -> 9, "NYC" -> 10, 
                "SAC" -> 11, "SAN" -> 12, "SAO" -> 13, "TOK" -> 14, "VIE" -> 
                15, "ZRH" -> 16]}, "MissingCode" -> 0, "Version" -> {12.3, 0},
              "ID" -> 8194623214295436141, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {16}]],
              "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12.3, 0}, "ID" -> 2195899594372133760]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 16], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       "AKL" -> 0.04827586206896552, "BAL" -> 0.03793103448275862, "BER" -> 
        0.05172413793103448, "BOG" -> 0.03103448275862069, "DEN" -> 
        0.12068965517241378`, "DOH" -> 0.07241379310344828, "ILR" -> 
        0.08620689655172414, "LIS" -> 0.041379310344827586`, "MIN" -> 
        0.020689655172413793`, "NYC" -> 0.12413793103448276`, "SAC" -> 
        0.04482758620689655, "SAN" -> 0.03793103448275862, "SAO" -> 
        0.07241379310344828, "TOK" -> 0.11724137931034483`, "VIE" -> 
        0.04827586206896552, "ZRH" -> 0.04482758620689655]], "LabelSplitter" -> 
    MachineLearning`MLProcessor["FeatureLabelSplit", 
      Association[
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {16, 17}, 0., {
      1, {{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {{2}, {
        3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {
        15}, {16}, {17}}}, {1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 
       1., 1., 1., 1.}}], "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["LogProbabilitiesFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association["Weights" -> CompressedData["
1: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
z/ozV2Vb2jTTjf0fKS+bdw==
            "], "Biases" -> 
           RawArray[
             "Real32",{-0.25740206241607666`, -0.3091621994972229, \
-0.4203920364379883, -0.41155409812927246`, 
             0.16209198534488678`, -0.0184988584369421, 
             0.03276786580681801, -0.3563915193080902, -0.5839598774909973, 
             0.18218326568603516`, -0.31187596917152405`, \
-0.5039607286453247, -0.35998427867889404`, 
             0.3982580304145813, -0.3969162404537201}]], "Parameters" -> 
         Association[
          "OutputDimensions" -> {15}, "$OutputSize" -> 15, "$InputSize" -> 40,
            "$InputDimensions" -> {40}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{40}, NeuralNetworks`AtomT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{15}, NeuralNetworks`RealT]]], 
        Association["Version" -> "12.3.3", "Unstable" -> False]], "Processor" -> 
      MachineLearning`MLProcessor["FirstValues", 
        Association[
        "Info" -> Association["Weight" -> 1, "Type" -> "NumericalVector"], 
         "Key" -> "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
         False, "Missing" -> "Allowed"]], "Calibrator" -> None, "Method" -> 
      "LogisticRegression", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 1., "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "LBFGS", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject["7f50e1d6-582c-4ca7-8ddf-0f9d27fe2aa7"], 
      "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 0.964322`6.4357670683457755, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[0.6221886765632915, 0.12308659000117765`], "Accuracy" -> 
         Around[0.867334004768775, 0.04151875567497205], "EvaluationTime" -> 
         6.245834561134381*^-6, "TestSize" -> 110, "ModelMemory" -> 11776., 
         "ModelUtility" -> -0.2574554955242818, "TrainingSize" -> 219, 
         "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
         536602.6666666666, "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
           Around[0.5420946017442603, 0.11887115347778543`], 
           Around[0.7022827513823227, 0.1512565566086518]}, "AccuracyHistory" -> {
           Around[0.8941197190544895, 0.041438555717849684`], 
           Around[0.8405482904830606, 0.049305475989267315`]}, 
         "Configuration" -> {
          "LogisticRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           1., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 274], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 2], 
          TypeSystem`Vector[TypeSystem`AnyType, 2], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association[]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.561126324211996, 0.08926613991316609], "Accuracy" -> 
              Around[0.2919948353828473, 0.039500816737802924`], 
              "EvaluationTime" -> 6.415237268579736*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.6405581772718798`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 405760, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.561126324211996, 0.06312069286294687]}, 
              "AccuracyHistory" -> {
                Around[0.2919948353828473, 0.027931295377707523`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.6221886765632915, 0.12308659000117765`], "Accuracy" -> 
              Around[0.867334004768775, 0.04151875567497205], 
              "EvaluationTime" -> 6.245834561134381*^-6, "TestSize" -> 110, 
              "ModelMemory" -> 11776., "ModelUtility" -> -0.2574554955242818, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 536602.6666666666, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[0.5420946017442603, 0.11887115347778543`], 
                Around[0.7022827513823227, 0.1512565566086518]}, 
              "AccuracyHistory" -> {
                Around[0.8941197190544895, 0.041438555717849684`], 
                Around[0.8405482904830606, 0.049305475989267315`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.259521834324408, 0.11565613127808287`], "Accuracy" -> 
              Around[0.6776370078991317, 0.04413636086093653], 
              "EvaluationTime" -> 3.5545283085133653`*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 11776, "ModelUtility" -> -0.9420950125456278, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 364808, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.259521834324408, 0.08178123471253396]}, 
              "AccuracyHistory" -> {
                Around[0.6776370078991317, 0.031209120061664743`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 3.5545283085133653`*^-6, "MeanCrossEntropy" -> 
             Around[1.259521834324408, 0.11565613127808287`], "ModelMemory" -> 
             11776, "TrainingMemory" -> 364808, "TrainingTime" -> 
             0.08629296403183107], "Index" -> 1], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7684517211005364`, 0.005704643635730363], "Accuracy" -> 
              Around[0.30436377137140846`, 0.039823191075880185`], 
              "EvaluationTime" -> 5.79640813886728*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.7118646299255689`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 144016, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7684517211005364`, 0.00403379219907762]}, 
              "AccuracyHistory" -> {
                Around[0.30436377137140846`, 0.02815924845824248]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.768450109640926, 0.0061666818792970235`], "Accuracy" -> 
              Around[0.56534824714783, 0.0466265763745853], "EvaluationTime" -> 
              4.966259406802821*^-6, "TestSize" -> 224, "ModelMemory" -> 
              11776, "ModelUtility" -> -1.7118974117867105`, "TrainingSize" -> 
              50, "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
              177320, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.768450109640926, 0.004360502574271128]}, 
              "AccuracyHistory" -> {
                Around[0.56534824714783, 0.032969968337981735`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7657386957084267`, 0.015824417203540258`], "Accuracy" -> 
              Around[0.7512625761973462, 0.0823342763402112], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.7116158003576682`, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 348688, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7657386957084267`, 0.01118955271294838]}, 
              "AccuracyHistory" -> {
                Around[0.7512625761973462, 0.05821912512425046]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[2.7657386957084267`, 0.015824417203540258`], 
             "ModelMemory" -> 11776, "TrainingMemory" -> 348688, 
             "TrainingTime" -> 0.01788145295520871], "Index" -> 2], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7652852791306297`, 0.005716356461891851], "Accuracy" -> 
              Around[0.30436377137140846`, 0.039823191075880185`], 
              "EvaluationTime" -> 4.914399904296461*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.710721533800693, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 176968, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7652852791306297`, 0.004042074417883268]}, 
              "AccuracyHistory" -> {
                Around[0.30436377137140846`, 0.02815924845824248]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7466371016753546`, 0.0062543879365370885`], "Accuracy" -> 
              Around[0.56534824714783, 0.0466265763745853], "EvaluationTime" -> 
              5.791971315777973*^-6, "TestSize" -> 224, "ModelMemory" -> 
              11776, "ModelUtility" -> -1.7039969874286398`, "TrainingSize" -> 
              50, "TrainingTime" -> 0.007943282347242814, "TrainingMemory" -> 
              221352, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.7466371016753546`, 0.004422520122096713]}, 
              "AccuracyHistory" -> {
                Around[0.56534824714783, 0.032969968337981735`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.6473698109375374`, 0.01965091783722214], "Accuracy" -> 
              Around[0.786976861911632, 0.07798455531234563], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.6682144619926236`, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 415128, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.6473698109375374`, 0.013895297259239459`]}, 
              "AccuracyHistory" -> {
                Around[0.786976861911632, 0.055143407889176994`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[2.6473698109375374`, 0.01965091783722214], "ModelMemory" -> 
             11776, "TrainingMemory" -> 415128, "TrainingTime" -> 
             0.023694221289325083`], "Index" -> 3], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.01], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[3.151235561654669, 0.18392938566642722`], "Accuracy" -> 
              Around[0.2766723815556004, 0.038850211264149434`], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.852564862526453, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 331552, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.151235561654669, 0.13005771586420645`]}, 
              "AccuracyHistory" -> {
                Around[0.2766723815556004, 0.027471247835410058`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.9505496637496119, 0.2806904484164756], "Accuracy" -> 
              Around[0.8584054333402036, 0.061915269719007286`], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 110, 
              "ModelMemory" -> 11776., "ModelUtility" -> -0.6998298679355752, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.04211376255046229, 
              "TrainingMemory" -> 536648., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7886462354361812, 0.30361004526134383`], 
                Around[1.1124530920630427`, 0.34980839758936483`]}, 
              "AccuracyHistory" -> {
                Around[0.9119768619116323, 0.038158348044410755`], 
                Around[0.8048340047687749, 0.05337703738585687]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[0.9505496637496119, 0.2806904484164756], "ModelMemory" -> 
             11776., "TrainingMemory" -> 536648., "TrainingTime" -> 
             0.07264290140917129], "Index" -> 4], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[4.220656544336506, 0.2939183766266086], "Accuracy" -> 
              Around[0.2766723815556004, 0.038850211264149434`], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -2.146986588023048, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 331512, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[4.220656544336506, 0.20783167722801657`]}, 
              "AccuracyHistory" -> {
                Around[0.2766723815556004, 0.027471247835410058`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.3802715583537521`, 0.8910943513666191], "Accuracy" -> 
              Around[0.9119768619116323, 0.05396405332215856], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.1368820571232519`, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 536352, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.3802715583537521`, 0.6300988585283643]}, 
              "AccuracyHistory" -> {
                Around[0.9119768619116323, 0.038158348044410755`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[1.3802715583537521`, 0.8910943513666191], "ModelMemory" -> 
             11776, "TrainingMemory" -> 536352, "TrainingTime" -> 
             0.06468343412724811], "Index" -> 5], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.5898849407231586`, 0.03840898476370414], "Accuracy" -> 
              Around[0.3052211170265034, 0.039906535030647595`], 
              "EvaluationTime" -> 4.523945119926102*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.6477395137947788`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 331256, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.5898849407231586`, 0.027159253584905983`]}, 
              "AccuracyHistory" -> {
                Around[0.3052211170265034, 0.02821818153382942]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.8065547695952318`, 0.0645954202739271], "Accuracy" -> 
              Around[0.6281875410554246, 0.04539742396645278], 
              "EvaluationTime" -> 4.966259406802821*^-6, "TestSize" -> 224, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.291711745426816, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 365032, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.8065547695952318`, 0.04567585970928885]}, 
              "AccuracyHistory" -> {
                Around[0.6281875410554246, 0.03210082633507945]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.9422297004835579, 0.10287486933769473`], "Accuracy" -> 
              Around[0.8762625761973465, 0.03135825593835397], 
              "EvaluationTime" -> 6.245834561134381*^-6, "TestSize" -> 110, 
              "ModelMemory" -> 11776., "ModelUtility" -> -0.6552596606841851, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.03778809218869826, 
              "TrainingMemory" -> 536698.6666666666, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8720433763922479, 0.09654420476266293], 
                Around[1.012416024574868, 0.11996815676223398`]}, 
              "AccuracyHistory" -> {
                Around[0.8762625761973465, 0.044347270840386845`], 
                Around[0.8762625761973465, 0.04434727084038683]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 6.245834561134381*^-6, "MeanCrossEntropy" -> 
             Around[0.9422297004835579, 0.10287486933769473`], "ModelMemory" -> 
             11776., "TrainingMemory" -> 536698.6666666666, "TrainingTime" -> 
             0.06723087547710123], "Index" -> 6], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.768423058502615, 0.0057044843319707245`], "Accuracy" -> 
              Around[0.30436377137140846`, 0.039823191075880185`], 
              "EvaluationTime" -> 6.493692941554299*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.711854270035234, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.00630957344480193, 
              "TrainingMemory" -> 154856, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.768423058502615, 0.004033679554308911]}, 
              "AccuracyHistory" -> {
                Around[0.30436377137140846`, 0.02815924845824248]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7682520411283136`, 0.00616549207214078], "Accuracy" -> 
              Around[0.56534824714783, 0.0466265763745853], "EvaluationTime" -> 
              4.966259406802821*^-6, "TestSize" -> 224, "ModelMemory" -> 
              11776, "ModelUtility" -> -1.7118258102562405`, "TrainingSize" -> 
              50, "TrainingTime" -> 0.007943282347242814, "TrainingMemory" -> 
              188320, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.7682520411283136`, 0.004359661253562644]}, 
              "AccuracyHistory" -> {
                Around[0.56534824714783, 0.032969968337981735`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7646372252696345`, 0.015807723219626837`], "Accuracy" -> 
              Around[0.7512625761973462, 0.0823342763402112], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.7112167146996047`, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 359712, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7646372252696345`, 0.01117774828371818]}, 
              "AccuracyHistory" -> {
                Around[0.7512625761973462, 0.05821912512425046]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[2.7646372252696345`, 0.015807723219626837`], 
             "ModelMemory" -> 11776, "TrainingMemory" -> 359712, 
             "TrainingTime" -> 0.016247744052767826`], "Index" -> 7], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.1], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7740273073091246`, 0.1346956129474185], "Accuracy" -> 
              Around[0.2840389902456618, 0.039156130883916916`], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.7231288879463094`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 331616, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7740273073091246`, 0.09524418131119815]}, 
              "AccuracyHistory" -> {
                Around[0.2840389902456618, 0.02768756567304565]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.6747120316581428, 0.1780113204277615], "Accuracy" -> 
              Around[0.8762625761973464, 0.04675624436273681], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 110, 
              "ModelMemory" -> 11776., "ModelUtility" -> -0.3511166414827924, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.027286835077291793`, 
              "TrainingMemory" -> 537008., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[0.5638612930556332, 0.18043081610163247`], 
                Around[0.7855627702606524, 0.21911167947293114`]}, 
              "AccuracyHistory" -> {
                Around[0.9119768619116323, 0.038158348044410755`], 
                Around[0.8405482904830606, 0.049305475989267315`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.259390045958698, 0.17135949762443492`], "Accuracy" -> 
              Around[0.6556402515800961, 0.04486187054185411], 
              "EvaluationTime" -> 0.00002994500274712244, "TestSize" -> 224, 
              "ModelMemory" -> 11776, "ModelUtility" -> -0.950641316766212, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 364856, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.259390045958698, 0.121169462790958]}, 
              "AccuracyHistory" -> {
                Around[0.6556402515800961, 0.03172213287685805]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00002994500274712244, "MeanCrossEntropy" -> 
             Around[1.259390045958698, 0.17135949762443492`], "ModelMemory" -> 
             11776, "TrainingMemory" -> 364856, "TrainingTime" -> 
             0.07462281057983607], "Index" -> 8], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.7384566252228977`, 0.007865432086379206], "Accuracy" -> 
              Around[0.30120734180703407`, 0.03974249109959612], 
              "EvaluationTime" -> 4.213795860317545*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.7011331407871966`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              232016, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.7384566252228977`, 0.005561700365240991]}, 
              "AccuracyHistory" -> {
                Around[0.30120734180703407`, 0.028102184957770424`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.5685979008212216`, 0.01570779370513562], "Accuracy" -> 
              Around[0.5742949350678244, 0.046482462450652594`], 
              "EvaluationTime" -> 0.000017015953008360868`, "TestSize" -> 224,
               "ModelMemory" -> 11776, "ModelUtility" -> -1.6377468920576659`,
               "TrainingSize" -> 50, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 365144, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.5685979008212216`, 0.01110708744638076]}, 
              "AccuracyHistory" -> {
                Around[0.5742949350678244, 0.032868064405105514`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.9186700252689413`, 0.08856771461637337], "Accuracy" -> 
              Around[0.8226911476259179, 0.07274411265602895], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.353986471614144, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.01995262314968879, 
              "TrainingMemory" -> 536536, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.9186700252689413`, 0.06262683159943251]}, 
              "AccuracyHistory" -> {
                Around[0.8226911476259179, 0.05143785535047622]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[1.9186700252689413`, 0.08856771461637337], "ModelMemory" -> 
             11776, "TrainingMemory" -> 536536, "TrainingTime" -> 
             0.03496355590417684], "Index" -> 9], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.768136563104278, 0.005703157514053403], "Accuracy" -> 
              Around[0.30436377137140846`, 0.039823191075880185`], 
              "EvaluationTime" -> 5.304854688666821*^-6, "TestSize" -> 264, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.7117507234460447`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              177032, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.768136563104278, 0.004032741352362174]}, 
              "AccuracyHistory" -> {
                Around[0.30436377137140846`, 0.02815924845824248]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[2.753657302616281, 0.015699752800363433`], "Accuracy" -> 
              Around[0.7512625761973462, 0.0823342763402112], 
              "EvaluationTime" -> 5.74959574576069*^-6, "TestSize" -> 55, 
              "ModelMemory" -> 11776, "ModelUtility" -> -1.707233968727361, 
              "TrainingSize" -> 219, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              371040, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[2.753657302616281, 0.011101401668089471`]}, 
              "AccuracyHistory" -> {
                Around[0.7512625761973462, 0.05821912512425046]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.74959574576069*^-6, "MeanCrossEntropy" -> 
             Around[2.753657302616281, 0.015699752800363433`], "ModelMemory" -> 
             11776, "TrainingMemory" -> 371040, "TrainingTime" -> 
             0.022511415525114153`], "Index" -> 10]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LogisticRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], 
        Association[]], "MaxTrainingSize" -> 274, 
      "PreprocessorEvaluationTime" -> 3.5703125*^-6, "PreprocessorMemory" -> 
      57736, "InputDimension" -> 40, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -2.649249353567545, "VariableBudget" -> 
      True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
      "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
      "LastReportingTime" -> 3.909468094094491`16.344692662281233*^9, 
      "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.19599999999999995`, 
          "ElapsedTimes" -> 0.20005300000000004`, "ExperimentCounts" -> 10], 
         Association[
         "TrainingSizes" -> 50, "TimeBudgets" -> 0.27999999999999997`, 
          "ElapsedTimes" -> 0.44146599999999997`, "ExperimentCounts" -> 7], 
         Association[
         "TrainingSizes" -> 219, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.443908, "ExperimentCounts" -> 14]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], 
        Association[]]], "AnomalyDetector" -> None, "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> CompressedData["
1:eJwBUQGu/iFib1JlAgAAAAEAAAAoAAAA1u8jNdQVXsAgizmMrmcIQMjOzIjL
6iBAX0IIPhPLLUDQArXoS0o2wFKYVQlMEynA9ew4eocRNsCiO4iB42ItQPlD
IOUcBDLAFw0f1VRCDkCwHK7UoYAXwACsMDbKqgXAxWQqWsD3CkB2VgpJmWgp
wKDG7ae2uyTA25ag+t4xMEBs6XH/ZK7hPwKle1JC1yRApWlzOCgUI8AYpVgh
+9UnwIjrtC6SzCjAfHZPr0I36r8bLswNKdQNwDxgaL3IdyZAqMkWGawZDcCo
iQS7iQ0WQAhcJqlQDQTAIC7oFHxFsj/a1z6hFY0YQFBHEoUbCO6/PMMknQQR
GEChLhzMl9AVQMI4g0W5qxLAxU1D1b628b8EnOGz5k39v4+tPO/gKQRACNXp
+KpLC0COZjnTHpUHQOazqLF59P8/j3dEzwU5HcAF5pLC
            "], "ID" -> 
           38069825954868691]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 1.692052, 
      "MaxTrainingMemory" -> 15032136, "DataMemory" -> 302608, 
      "FunctionMemory" -> 229632, "LanguageVersion" -> {12.3, 0}, "Date" -> 
      DateObject[{2023, 11, 20, 11, 21, 34.201774`8.286623612797158}, 
        "Instant", "Gregorian", -6.], "ProcessorCount" -> 6, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8949760131875343`*^9, 3.894976050756131*^9, 3.89497609289933*^9, 
   3.894976325846735*^9, {3.89497635689511*^9, 3.8949765743105097`*^9}, 
   3.8949766079531145`*^9, {3.8949767282837486`*^9, 3.894976795424017*^9}, {
   3.894977267359187*^9, 3.894977344973667*^9}, {3.8949777754107943`*^9, 
   3.894977817092506*^9}, {3.8949778489784193`*^9, 3.8949779088620186`*^9}, 
   3.8949779759657745`*^9, {3.894978013575302*^9, 3.8949781525766783`*^9}, 
   3.8949782458103104`*^9, {3.8949783699410915`*^9, 3.894978399927422*^9}, {
   3.8949784305548744`*^9, 3.8949784891204367`*^9}, {3.894978523900886*^9, 
   3.894978747528761*^9}, 3.8949810577307205`*^9, 3.894981183950405*^9, 
   3.89498121562092*^9, {3.8949813646908693`*^9, 3.8949814393810143`*^9}, {
   3.894981501936226*^9, 3.8949815555915046`*^9}, 3.8949817079973316`*^9, 
   3.894981770902502*^9, 3.894981825827469*^9, 3.8949885281896286`*^9, 
   3.894989353285486*^9, {3.8949894504272957`*^9, 3.8949894623106823`*^9}, 
   3.894989710312505*^9, 3.8949898398828683`*^9, 3.894989968930396*^9, 
   3.8949900311013975`*^9, 3.894990214415351*^9, 3.8949903782263556`*^9, 
   3.8949904398485503`*^9, 3.8949905116901307`*^9, {3.894991372157338*^9, 
   3.8949913943029375`*^9}, 3.895059569496647*^9, 3.895059796369081*^9, 
   3.895059918159177*^9, 3.895063774750496*^9, 3.9058617498412647`*^9, 
   3.9058690616473513`*^9, 3.905870651767017*^9, 3.9058710368534803`*^9, 
   3.9058717060634117`*^9, 3.905872011600554*^9, 3.9058722466926613`*^9, 
   3.905874246419717*^9, 3.905875338109364*^9, 3.905960215242873*^9, 
   3.905963154247016*^9, 3.906038574238501*^9, 3.9061335047777157`*^9, 
   3.906134028668985*^9, 3.90613631259433*^9, 3.906139040839099*^9, {
   3.906140307082334*^9, 3.906140506309434*^9}, {3.906140551575758*^9, 
   3.906140652448863*^9}, {3.906141104578415*^9, 3.9061411246091423`*^9}, 
   3.906141609349943*^9, {3.906141801583254*^9, 3.906141849396772*^9}, {
   3.906142032829835*^9, 3.90614204316348*^9}, 3.9061426387394333`*^9, {
   3.9061426867809668`*^9, 3.906142776144505*^9}, 3.90614315221828*^9, 
   3.906208771067359*^9, 3.906209038493417*^9, 3.906213675666217*^9, 
   3.906215570624316*^9, {3.906224502016786*^9, 3.9062245188431664`*^9}, {
   3.906224561517611*^9, 3.906224597929757*^9}, {3.9062248695234327`*^9, 
   3.906224924407167*^9}, {3.906225122402647*^9, 3.9062251383409243`*^9}, 
   3.906225809718422*^9, {3.906226080557686*^9, 3.906226091602436*^9}, {
   3.906226294714205*^9, 3.9062263575319967`*^9}, 3.908628480209277*^9, 
   3.908629228055678*^9, 3.908629421960616*^9, 3.908629527196763*^9, 
   3.908634678242043*^9, {3.9086347907929087`*^9, 3.90863480640073*^9}, 
   3.9086349113675947`*^9, {3.908635061026689*^9, 3.908635104150735*^9}, {
   3.908635517381846*^9, 3.908635552753914*^9}, 3.908637934844515*^9, {
   3.9086380498764143`*^9, 3.90863806292909*^9}, 3.9086381904393272`*^9, 
   3.908638243611443*^9, {3.90863834438443*^9, 3.908638357265757*^9}, 
   3.908638429942196*^9, 3.9086384763266573`*^9, 3.9086386112510767`*^9, {
   3.9086391462587976`*^9, 3.9086391595966473`*^9}, 3.908639267862*^9, 
   3.908639318744278*^9, 3.908639371747031*^9, 3.908639447687264*^9, 
   3.9086397095350523`*^9, 3.908640074369309*^9, 3.9086401484321613`*^9, 
   3.9086401947461233`*^9, 3.908640303586234*^9, 3.908641336509564*^9, 
   3.9086414039724693`*^9, 3.908641464081873*^9, 3.908641497038748*^9, 
   3.908641607835676*^9, 3.908641668008608*^9, 3.908641749230834*^9, 
   3.9086419629269114`*^9, 3.908642097316493*^9, 3.908642161967832*^9, {
   3.9086427767672997`*^9, 3.908642793528236*^9}, 3.908642856549163*^9, 
   3.90864339224536*^9, 3.908643533030624*^9, 3.9086436267064047`*^9, 
   3.9086436676222467`*^9, 3.908643722261322*^9, 3.9086460219506063`*^9, 
   3.9086460694535313`*^9, {3.9086461520173483`*^9, 3.908646170546083*^9}, 
   3.908646224746907*^9, 3.9086462888335238`*^9, 3.9086464020299683`*^9, 
   3.908646528203455*^9, 3.908646605837895*^9, {3.908646677043647*^9, 
   3.908646686328545*^9}, {3.908646746052417*^9, 3.9086467581240997`*^9}, {
   3.90864693891469*^9, 3.908646948590592*^9}, 3.908646996719913*^9, {
   3.9086471385986137`*^9, 3.90864716294874*^9}, {3.908647194615521*^9, 
   3.908647209708967*^9}, {3.908647259269022*^9, 3.9086472759586487`*^9}, {
   3.908648223776795*^9, 3.908648253445301*^9}, 3.908648428152603*^9, {
   3.908648474995564*^9, 3.9086484981830397`*^9}, 3.908648734276415*^9, 
   3.908648813945842*^9, {3.908649517218751*^9, 3.90864952877455*^9}, 
   3.908649671307433*^9, 3.908650153529544*^9, 3.908650361052698*^9, 
   3.9086504123862762`*^9, 3.908650765273678*^9, 3.908651114570861*^9, 
   3.908651232145184*^9, 3.908651402938555*^9, 3.908651475614214*^9, 
   3.908651593849173*^9, 3.9086516366955843`*^9, 3.908651677972665*^9, 
   3.9086517149636106`*^9, 3.908653972100717*^9, 3.9087095374481487`*^9, 
   3.908725260566292*^9, 3.908894115502141*^9, 3.908986083861245*^9, {
   3.908986145668866*^9, 3.908986173241313*^9}, 3.908986245442943*^9, {
   3.908986280049593*^9, 3.908986536742852*^9}, {3.908986573583984*^9, 
   3.908986795487788*^9}, {3.908986883144176*^9, 3.908986983270102*^9}, {
   3.9089870397470293`*^9, 3.9089871426887083`*^9}, 3.908987178245614*^9, {
   3.908987216747307*^9, 3.908987247810912*^9}, {3.9089872803585377`*^9, 
   3.908987592909259*^9}, 3.908987879147118*^9, {3.908987983222677*^9, 
   3.908987996479967*^9}, {3.908988072976966*^9, 3.908988086552902*^9}, 
   3.9089881191634274`*^9, {3.908988159247645*^9, 3.908988267248274*^9}, {
   3.908988328545609*^9, 3.9089884685291348`*^9}, 3.9089885056951447`*^9, {
   3.9089885369948072`*^9, 3.908988762652939*^9}, {3.908988797162376*^9, 
   3.908988830724592*^9}, 3.908988861875929*^9, {3.908988895471574*^9, 
   3.908988924542302*^9}, 3.9089890998359137`*^9, {3.908989152590568*^9, 
   3.908989227421967*^9}, {3.9089892803217773`*^9, 3.908989313889884*^9}, {
   3.908989417516942*^9, 3.9089894898252583`*^9}, 3.90898953463111*^9, {
   3.908989581622901*^9, 3.9089897356972446`*^9}, 3.908989876672701*^9, {
   3.908989998995886*^9, 3.908990041044602*^9}, {3.9089901081342373`*^9, 
   3.90899017263204*^9}, 3.909068983841774*^9, {3.909069014244905*^9, 
   3.9090690401994343`*^9}, {3.909069445587358*^9, 3.909069492972357*^9}, 
   3.909069549687289*^9, {3.90906959495347*^9, 3.9090696541394167`*^9}, {
   3.9090708804143*^9, 3.9090710626351624`*^9}, {3.909071158283298*^9, 
   3.909071203290147*^9}, 3.909071400545889*^9, 3.909071631627592*^9, 
   3.909071902042871*^9, 3.90907199978798*^9, {3.909072070258354*^9, 
   3.9090720815284433`*^9}, {3.9090721447463017`*^9, 3.909072275388193*^9}, {
   3.9090723999788094`*^9, 3.909072432152443*^9}, {3.909072504005103*^9, 
   3.909072617918482*^9}, 3.909072651702085*^9, {3.9090745570999393`*^9, 
   3.90907461784093*^9}, {3.909074650733828*^9, 3.909074736332514*^9}, {
   3.9090747702502737`*^9, 3.909074800190727*^9}, 3.9090749666522493`*^9, {
   3.909075033315168*^9, 3.909075075804302*^9}, {3.909075123871119*^9, 
   3.9090752577418013`*^9}, 3.9090756411401377`*^9, {3.909075774402742*^9, 
   3.90907582512492*^9}, 3.9090760728947887`*^9, 3.9090761532966633`*^9, {
   3.909076208907446*^9, 3.909076388787146*^9}, 3.909076432433466*^9, {
   3.909076464850357*^9, 3.909076636658609*^9}, {3.909076672736709*^9, 
   3.9090766827728157`*^9}, {3.909076724887821*^9, 3.909076794727231*^9}, {
   3.909076838884838*^9, 3.909076848290629*^9}, {3.909076882331233*^9, 
   3.90907695935089*^9}, {3.909077036721574*^9, 3.909077245766865*^9}, 
   3.9090773888520613`*^9, 3.9090795429454327`*^9, 3.909154635460384*^9, 
   3.909224892971961*^9, {3.909224997240686*^9, 3.9092250584233923`*^9}, 
   3.909227462868992*^9, 3.909229330446159*^9, 3.90923023145625*^9, {
   3.909243452345306*^9, 3.909243690886532*^9}, {3.909244272760524*^9, 
   3.909244287318081*^9}, 3.909489694224962*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"84e0653b-9c60-4e3d-8077-b18c44b6b2e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sum", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CL", "[", 
        RowBox[{"LtestR", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "==", 
       RowBox[{"LtestR", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{"sum", "=", 
       RowBox[{"sum", "+", "1"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "LtestR", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"sum", "/", 
   RowBox[{"Length", "[", "LtestR", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8949745201109586`*^9, 3.894974667307175*^9}, {
  3.894975753357416*^9, 3.8949757537793293`*^9}, {3.909074628861073*^9, 
  3.909074643018569*^9}, {3.9090750371005363`*^9, 3.909075048430957*^9}, {
  3.9090761625048113`*^9, 3.9090761826053*^9}, {3.909076703361463*^9, 
  3.909076716291977*^9}, {3.909076778882786*^9, 3.909076826486732*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"edf3b692-4a99-48a5-810a-214fa2840c28"],

Cell[BoxData["0.9340659340659341`"], "Output",
 CellChangeTimes->{{3.8949746379694557`*^9, 3.8949746683070965`*^9}, 
   3.894974714296039*^9, 3.8949747464405255`*^9, 3.894974813580809*^9, 
   3.894975513111385*^9, 3.894975695405199*^9, {3.894975732504508*^9, 
   3.8949757595902443`*^9}, {3.8949759524144526`*^9, 3.894975977472495*^9}, {
   3.8949760243364964`*^9, 3.894976052834092*^9}, 3.8949760966490726`*^9, 
   3.8949763282986608`*^9, {3.89497635853148*^9, 3.8949765757010202`*^9}, 
   3.894976609859229*^9, {3.8949767296742563`*^9, 3.8949767969238935`*^9}, {
   3.894977269952736*^9, 3.894977346411047*^9}, {3.8949777772231455`*^9, 
   3.8949778187017517`*^9}, {3.8949778504158163`*^9, 3.8949779105493803`*^9}, 
   3.8949779774344025`*^9, {3.894978015028329*^9, 3.8949781539515624`*^9}, 
   3.8949782492231755`*^9, {3.8949783748313575`*^9, 3.8949784013491983`*^9}, {
   3.894978432657671*^9, 3.894978490385973*^9}, {3.894978526105863*^9, 
   3.894978660079212*^9}, {3.894978691225684*^9, 3.894978749013032*^9}, 
   3.8949810593107786`*^9, 3.894981185440728*^9, 3.8949812186609898`*^9, {
   3.89498136686084*^9, 3.8949814408614845`*^9}, {3.8949815034913015`*^9, 
   3.8949815572214813`*^9}, 3.894981709342111*^9, 3.8949818273029795`*^9, 
   3.8949885302155924`*^9, 3.8949893554474525`*^9, {3.894989451894272*^9, 
   3.8949894638931026`*^9}, 3.894989712349743*^9, 3.894989841540561*^9, 
   3.894989970356269*^9, 3.8949900325365267`*^9, 3.8949902159578485`*^9, 
   3.8949903797235136`*^9, 3.8949904421390877`*^9, 3.8949905141597996`*^9, {
   3.8949913760357127`*^9, 3.894991395853874*^9}, 3.895059573229224*^9, 
   3.895059799931966*^9, 3.8950599193904877`*^9, 3.895063776924782*^9, 
   3.905861751537361*^9, 3.9058690636323223`*^9, 3.905870653097739*^9, 
   3.9058710386297894`*^9, 3.9058717139817457`*^9, {3.905871997381583*^9, 
   3.905872012671144*^9}, 3.9058722479569063`*^9, 3.905874246762402*^9, 
   3.905875338453117*^9, 3.905960215571535*^9, 3.905963154636931*^9, 
   3.906038574645685*^9, 3.906133506388949*^9, 3.9061340306055393`*^9, 
   3.906136314198906*^9, 3.9061390412766647`*^9, {3.906140310593902*^9, 
   3.9061405076553373`*^9}, {3.906140553590271*^9, 3.906140653835095*^9}, {
   3.9061411062474947`*^9, 3.906141125711791*^9}, 3.906141610712469*^9, {
   3.9061418029056664`*^9, 3.9061418504457407`*^9}, 3.9061420339893208`*^9, 
   3.906142639975307*^9, {3.9061426879862823`*^9, 3.9061427772493668`*^9}, 
   3.9061431532759438`*^9, 3.906208771349782*^9, 3.906209038637439*^9, 
   3.906213676020233*^9, 3.9062155709308453`*^9, {3.906224503188418*^9, 
   3.9062245198884583`*^9}, {3.906224562973864*^9, 3.90622459915038*^9}, {
   3.906224870792263*^9, 3.906224924592749*^9}, {3.9062251241398706`*^9, 
   3.906225139714961*^9}, {3.906225400613184*^9, 3.9062254183277073`*^9}, {
   3.9062254560767403`*^9, 3.906225480365121*^9}, 3.906225754079657*^9, {
   3.9062257943857517`*^9, 3.906225818138824*^9}, 3.90622586511876*^9, {
   3.906225908340238*^9, 3.9062259614172373`*^9}, {3.906226001081544*^9, 
   3.906226026707201*^9}, {3.906226084341406*^9, 3.906226116493346*^9}, {
   3.9062262974010067`*^9, 3.90622635874541*^9}, 3.90862848148619*^9, 
   3.90862923088389*^9, 3.908629423272492*^9, 3.908629527376999*^9, 
   3.908634679393688*^9, {3.908634791884404*^9, 3.9086348074429483`*^9}, 
   3.908634913010603*^9, {3.908635062085086*^9, 3.908635105131652*^9}, {
   3.9086355185051413`*^9, 3.908635553809016*^9}, 3.908637936181571*^9, {
   3.908638052372129*^9, 3.9086380638222446`*^9}, 3.9086381917813063`*^9, 
   3.9086382445955772`*^9, {3.908638345781371*^9, 3.908638358200136*^9}, 
   3.908638430950502*^9, 3.908638480292172*^9, 3.908638613455872*^9, {
   3.9086391481680107`*^9, 3.908639160558015*^9}, 3.908639269021122*^9, 
   3.908639319698683*^9, 3.908639372826339*^9, 3.908639449884594*^9, 
   3.90863971262136*^9, 3.9086400753699007`*^9, 3.90864014984057*^9, 
   3.908640195721047*^9, 3.908640305193346*^9, 3.908641337624545*^9, 
   3.908641404970458*^9, 3.908641465416378*^9, 3.9086414981377497`*^9, 
   3.908641608867896*^9, 3.908641668915759*^9, 3.908641750536179*^9, 
   3.908641964321022*^9, 3.908642098289995*^9, 3.90864216309562*^9, {
   3.908642777738926*^9, 3.908642794506186*^9}, 3.908642857546213*^9, 
   3.908643393465396*^9, 3.9086435340372334`*^9, 3.90864363511318*^9, 
   3.908643668774961*^9, 3.908643723242519*^9, 3.908646023098963*^9, 
   3.908646070583329*^9, {3.908646152888195*^9, 3.908646171400585*^9}, 
   3.908646225686677*^9, {3.908646281648349*^9, 3.90864633052153*^9}, {
   3.908646367801446*^9, 3.9086464030394983`*^9}, 3.908646530020916*^9, 
   3.908646607130514*^9, {3.908646678099979*^9, 3.90864668733132*^9}, {
   3.9086467471621523`*^9, 3.9086467590800543`*^9}, {3.908646939924261*^9, 
   3.908646949677783*^9}, 3.908646997723073*^9, {3.90864713975422*^9, 
   3.908647163843807*^9}, {3.9086471959121933`*^9, 3.908647210725665*^9}, {
   3.90864726018426*^9, 3.908647276949829*^9}, {3.908648224835582*^9, 
   3.9086482543879547`*^9}, 3.9086484291930113`*^9, {3.908648476123324*^9, 
   3.9086484991007547`*^9}, 3.9086487352465763`*^9, 3.9086488148942127`*^9, {
   3.90864951874555*^9, 3.908649529951784*^9}, 3.9086496723719053`*^9, 
   3.9086501548040533`*^9, 3.908650362172977*^9, 3.908650412569397*^9, 
   3.908650765540306*^9, 3.908651115722391*^9, 3.908651233334766*^9, 
   3.908651404068791*^9, 3.908651475895465*^9, 3.908651594863812*^9, 
   3.908651637900798*^9, 3.908651679183694*^9, 3.908651716021297*^9, 
   3.908653972462112*^9, 3.908709538732822*^9, 3.908725261865984*^9, 
   3.908894116901733*^9, 3.9089860868434353`*^9, {3.908986148722436*^9, 
   3.908986175199955*^9}, 3.90898624756872*^9, {3.908986280976618*^9, 
   3.908986538192316*^9}, {3.908986574982128*^9, 3.9089866047073727`*^9}, {
   3.908986637261386*^9, 3.908986797227042*^9}, {3.908986884667659*^9, 
   3.908986983443776*^9}, {3.9089870421425667`*^9, 3.908987128310608*^9}, {
   3.908987168316091*^9, 3.9089871784235287`*^9}, {3.9089872179430304`*^9, 
   3.908987248962266*^9}, {3.908987282968655*^9, 3.9089875943706207`*^9}, 
   3.908987882053544*^9, {3.9089879857220488`*^9, 3.908987999228363*^9}, {
   3.90898807547507*^9, 3.908988089155777*^9}, 3.9089881232514143`*^9, {
   3.908988162246634*^9, 3.908988254637813*^9}, {3.908988331461658*^9, 
   3.908988469931477*^9}, {3.908988508558103*^9, 3.9089887628389883`*^9}, {
   3.908988798853485*^9, 3.9089888319190893`*^9}, {3.908988896701892*^9, 
   3.9089889247251253`*^9}, 3.908989101501639*^9, {3.9089891537632923`*^9, 
   3.908989228539156*^9}, {3.908989281374679*^9, 3.908989314054596*^9}, {
   3.908989417710641*^9, 3.9089894900012074`*^9}, 3.908989534791226*^9, {
   3.908989582763723*^9, 3.908989736694151*^9}, 3.9089898768465157`*^9, {
   3.90898999933666*^9, 3.908990041197529*^9}, {3.908990108289114*^9, 
   3.9089901727773867`*^9}, {3.909068989865094*^9, 3.90906904150241*^9}, {
   3.9090694472617197`*^9, 3.909069494475129*^9}, 3.9090695591247396`*^9, {
   3.909069603525172*^9, 3.909069655235941*^9}, {3.9090708815852547`*^9, 
   3.909071063753834*^9}, {3.909071160110528*^9, 3.90907120453619*^9}, 
   3.9090714017311907`*^9, 3.9090716439668493`*^9, 3.909071909905332*^9, 
   3.90907200120899*^9, {3.909072071544586*^9, 3.909072082877569*^9}, {
   3.909072145905815*^9, 3.9090722766333637`*^9}, {3.90907240129515*^9, 
   3.909072433510832*^9}, {3.909072505171476*^9, 3.90907261817344*^9}, 
   3.9090726534971647`*^9, {3.909074558863469*^9, 3.9090746100129137`*^9}, {
   3.90907464401586*^9, 3.909074672356373*^9}, {3.909074702374588*^9, 
   3.909074737410932*^9}, {3.909074771319427*^9, 3.9090748013812017`*^9}, {
   3.909075050037958*^9, 3.9090750769634857`*^9}, {3.9090751249498243`*^9, 
   3.909075258905368*^9}, 3.90907564232861*^9, {3.909075775474059*^9, 
   3.9090758264454107`*^9}, 3.909076074623481*^9, {3.909076178115432*^9, 
   3.9090763901484623`*^9}, 3.909076440973976*^9, {3.909076472461801*^9, 
   3.9090766380679283`*^9}, {3.909076672991095*^9, 3.909076751927164*^9}, {
   3.909076812908825*^9, 3.909076849718934*^9}, {3.909076884131071*^9, 
   3.909076960665575*^9}, {3.9090770369825478`*^9, 3.909077246014551*^9}, 
   3.909077390193747*^9, 3.9090795442744713`*^9, 3.909154637023389*^9, 
   3.90922489450231*^9, {3.909224998417851*^9, 3.909225059713327*^9}, 
   3.909227464488761*^9, 3.9092293320811768`*^9, 3.909230233939196*^9, {
   3.909243454434164*^9, 3.909243692103032*^9}, {3.909244273936151*^9, 
   3.909244288379352*^9}, 3.90948969556386*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"f49c4ac7-e45d-4ea3-8340-3f119455d75d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"CL", ",", "LtestR", ",", "\"\<ConfusionMatrixPlot\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.908988974821073*^9, 3.9089890045840597`*^9}, 
   3.909076187734415*^9},
 CellLabel->"In[39]:=",
 CellID->1521394769,ExpressionUUID->"ff1c9f60-37d8-4d41-847f-324c8a00d4b6"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQgGIQGwI+2A8WOlrkyq9q/3f2iu8K3N6lv7U/lP/thWHt
ywF3F6Xub3nK8CHqz1t73+szN5zTfWM/Id2fS8nn2YC7d7jRa7bpPrVc+da+
8sAhqfWfX9nHx6/QFpJ+PODuGq70wyqRde4Pb0H5MDDw7hou9AfLev5f39/Y
X+fpn8Wl/8JeLNpLudXq5oC7a7jRXfenbuaZ8sb+wOVMWZ6qZ/YxW/iCjzRf
GnB3DTf6anvULYmwt/ZLVr5u6d/50j5sHdMsliv3B9xdw41+JRs6zcz7rf2G
V/NVryk8sOefeUzgu13hgLtruNFDvb06UDSp4TbafqYPvVfr8G/DM6/tJyTK
K/MLPLafMDv2FFfkltF8QWV6uLY3Blu8T7r7IuSQ8xv7bimWjm61h/YWFhft
np4tH/BwGm60cuuacHmDN/YrZ7ks4D36xN5Nehkr+6zjA+6u4UYPtvw1XGlq
tTdG4ws/PRo+A0sDAGxlTA4=
   "], {{0, 0}, {16, 16}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"AKL\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "AKL", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"AKL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "AKL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"BAL\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.6666666666666666`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.8`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", "BAL", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.6666666666666666}], 
         Row[{"FScore = ", 0.8}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"BAL\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "BAL"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"BER\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "BER", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"BER\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "BER"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "7", "\" examples of \"", "\"BOG\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{7, " examples of ", "BOG", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"BOG\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "BOG"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.09090909090909091`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.3333333333333333`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "BAL", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.09090909090909091}], 
         Row[{"Row fraction = ", 0.3333333333333333}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "10", "\" examples of \"", "\"DEN\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9090909090909091`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9523809523809524`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{10, " examples of ", "DEN", " correctly classified"}], 
         Row[{"Precision = ", 0.9090909090909091}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.9523809523809524}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"DEN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "DEN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "\"DOH\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8571428571428571`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8571428571428571`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", "DOH", " correctly classified"}], 
         Row[{"Precision = ", 0.8571428571428571}], 
         Row[{"Recall = ", 0.8571428571428571}], 
         Row[{"FScore = ", 0.8571428571428571}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.14285714285714285`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.3333333333333333`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "LIS", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.14285714285714285`}], 
         Row[{"Row fraction = ", 0.3333333333333333}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"DOH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "DOH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "8", "\" examples of \"", "\"ILR\"", "\" correctly classified\""},
             "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.8888888888888888`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.8888888888888888`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8888888888888888`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{8, " examples of ", "ILR", " correctly classified"}], 
         Row[{"Precision = ", 0.8888888888888888}], 
         Row[{"Recall = ", 0.8888888888888888}], 
         Row[{"FScore = ", 0.8888888888888888}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"ILR\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.1111111111111111`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.25`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "ZRH", " misclassified as ", "ILR"}], 
         Row[{"Column fraction = ", 0.1111111111111111}], 
         Row[{"Row fraction = ", 0.25}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"LIS\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.6666666666666666`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.8`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", "LIS", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.6666666666666666}], 
         Row[{"FScore = ", 0.8}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"LIS\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "LIS"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"MIN\"", "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "MIN", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"MIN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "MIN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 15.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 14.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 13.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 12.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 11.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 10.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.08333333333333333`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.1111111111111111`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "ILR", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.08333333333333333}], 
         Row[{"Row fraction = ", 0.1111111111111111}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "11", "\" examples of \"", "\"NYC\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9166666666666666`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9565217391304347`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{11, " examples of ", "NYC", " correctly classified"}], 
         Row[{"Precision = ", 0.9166666666666666}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.9565217391304347}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"NYC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "NYC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "\"SAC\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", "SAC", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {10.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"SAC\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "SAC"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "\"SAN\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", "SAN", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {11.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"SAN\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "SAN"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "5", "\" examples of \"", "\"SAO\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{5, " examples of ", "SAO", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {12.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"SAO\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "SAO"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "16", "\" examples of \"", "\"TOK\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{16, " examples of ", "TOK", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {13.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"TOK\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ZRH", " misclassified as ", "TOK"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.2`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.14285714285714285`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "DOH", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.2}], 
         Row[{"Row fraction = ", 0.14285714285714285`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "\"VIE\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.6`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.75`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", "VIE", " correctly classified"}], 
         Row[{"Precision = ", 0.6}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.75}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {14.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"ZRH\"", "\" misclassified as \"", 
             "\"VIE\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.2`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.25`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "ZRH", " misclassified as ", "VIE"}], 
         Row[{"Column fraction = ", 0.2}], 
         Row[{"Row fraction = ", 0.25}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 15.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"AKL\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "AKL", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 14.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BAL\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BAL", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 13.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BER\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BER", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 12.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"BOG\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "BOG", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 11.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DEN\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DEN", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 10.5}, Automatic, {1., 1.}], 
       
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"DOH\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "DOH", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"ILR\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "ILR", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"LIS\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "LIS", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"MIN\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "MIN", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"NYC\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "NYC", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAC\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAC", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "0", "\" example of \"", "\"SAN\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAN", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"SAO\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "SAO", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"TOK\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "TOK", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"VIE\"", "\" misclassified as \"", 
             "\"ZRH\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", "VIE", " misclassified as ", "ZRH"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
           9.320281152964093], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {15.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "\"ZRH\"", "\" correctly classified\""},
             "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.5`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.6666666666666666`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", "ZRH", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.5}], 
         Row[{"FScore = ", 0.6666666666666666}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 15.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"AKL\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "AKL"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 14.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "3", "\" example\"", "\"s\"", "\" of class \"", "\"BAL\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.6666666666666666`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{3, " example", "s", " of class ", "BAL"}], 
        Row[{"Recall = ", 0.6666666666666666}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 13.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"BER\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "BER"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 12.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "7", "\" example\"", "\"s\"", "\" of class \"", "\"BOG\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{7, " example", "s", " of class ", "BOG"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 11.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "10", "\" example\"", "\"s\"", "\" of class \"", "\"DEN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{10, " example", "s", " of class ", "DEN"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 10.5}, Automatic, {10., 1.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "7", "\" example\"", "\"s\"", "\" of class \"", "\"DOH\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8571428571428571`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{7, " example", "s", " of class ", "DOH"}], 
        Row[{"Recall = ", 0.8571428571428571}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 9.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "9", "\" example\"", "\"s\"", "\" of class \"", "\"ILR\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.8888888888888888`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{9, " example", "s", " of class ", "ILR"}], 
        Row[{"Recall = ", 0.8888888888888888}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 8.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "3", "\" example\"", "\"s\"", "\" of class \"", "\"LIS\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.6666666666666666`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{3, " example", "s", " of class ", "LIS"}], 
        Row[{"Recall = ", 0.6666666666666666}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 7.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" of class \"", "\"MIN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " of class ", "MIN"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 6.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "11", "\" example\"", "\"s\"", "\" of class \"", "\"NYC\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{11, " example", "s", " of class ", "NYC"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 5.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" of class \"", "\"SAC\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " of class ", "SAC"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "6", "\" example\"", "\"s\"", "\" of class \"", "\"SAN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{6, " example", "s", " of class ", "SAN"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "5", "\" example\"", "\"s\"", "\" of class \"", "\"SAO\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{5, " example", "s", " of class ", "SAO"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "16", "\" example\"", "\"s\"", "\" of class \"", "\"TOK\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{16, " example", "s", " of class ", "TOK"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "3", "\" example\"", "\"s\"", "\" of class \"", "\"VIE\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{3, " example", "s", " of class ", "VIE"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {16.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" of class \"", "\"ZRH\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.5`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " of class ", "ZRH"}], 
        Row[{"Recall = ", 0.5}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" classified as \"", "\"AKL\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " classified as ", "AKL"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "2", "\" example\"", "\"s\"", "\" classified as \"", "\"BAL\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{2, " example", "s", " classified as ", "BAL"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" classified as \"", "\"BER\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " classified as ", "BER"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "7", "\" example\"", "\"s\"", "\" classified as \"", "\"BOG\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{7, " example", "s", " classified as ", "BOG"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "11", "\" example\"", "\"s\"", "\" classified as \"", "\"DEN\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9090909090909091`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{11, " example", "s", " classified as ", "DEN"}], 
        Row[{"Precision = ", 0.9090909090909091}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "7", "\" example\"", "\"s\"", "\" classified as \"", "\"DOH\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{7, " example", "s", " classified as ", "DOH"}], 
        Row[{"Precision = ", 0.8571428571428571}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "9", "\" example\"", "\"s\"", "\" classified as \"", "\"ILR\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.8888888888888888`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{9, " example", "s", " classified as ", "ILR"}], 
        Row[{"Precision = ", 0.8888888888888888}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {7.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "2", "\" example\"", "\"s\"", "\" classified as \"", "\"LIS\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{2, " example", "s", " classified as ", "LIS"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {8.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1", "\" example\"", "\"\"", "\" classified as \"", "\"MIN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1, " example", "", " classified as ", "MIN"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {9.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "12", "\" example\"", "\"s\"", "\" classified as \"", "\"NYC\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9166666666666666`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{12, " example", "s", " classified as ", "NYC"}], 
        Row[{"Precision = ", 0.9166666666666666}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" classified as \"", "\"SAC\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " classified as ", "SAC"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {11.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "6", "\" example\"", "\"s\"", "\" classified as \"", "\"SAN\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{6, " example", "s", " classified as ", "SAN"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {12.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "5", "\" example\"", "\"s\"", "\" classified as \"", "\"SAO\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{5, " example", "s", " classified as ", "SAO"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {13.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "16", "\" example\"", "\"s\"", "\" classified as \"", "\"TOK\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{16, " example", "s", " classified as ", "TOK"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {14.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "5", "\" example\"", "\"s\"", "\" classified as \"", "\"VIE\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.6`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{5, " example", "s", " classified as ", "VIE"}], 
        Row[{"Precision = ", 0.6}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {15.5, -0.5}, Automatic, {1., 10.}], 
      
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "2", "\" example\"", "\"s\"", "\" classified as \"", "\"ZRH\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{2, " example", "s", " classified as ", "ZRH"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{15.5, 
       FormBox[
        RotationBox["\"AKL\"", BoxRotation -> 0.], TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["\"BAL\"", BoxRotation -> 0.], TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["\"BER\"", BoxRotation -> 0.], TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["\"BOG\"", BoxRotation -> 0.], TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["\"DEN\"", BoxRotation -> 0.], TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["\"DOH\"", BoxRotation -> 0.], TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["\"ILR\"", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["\"LIS\"", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["\"MIN\"", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["\"NYC\"", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["\"SAC\"", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"SAN\"", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"SAO\"", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"TOK\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"VIE\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"ZRH\"", BoxRotation -> 0.], TraditionalForm]}}, {{15.5, 
       FormBox["1", TraditionalForm]}, {14.5, 
       FormBox["3", TraditionalForm]}, {13.5, 
       FormBox["1", TraditionalForm]}, {12.5, 
       FormBox["7", TraditionalForm]}, {11.5, 
       FormBox["10", TraditionalForm]}, {10.5, 
       FormBox["7", TraditionalForm]}, {9.5, 
       FormBox["9", TraditionalForm]}, {8.5, 
       FormBox["3", TraditionalForm]}, {7.5, 
       FormBox["1", TraditionalForm]}, {6.5, 
       FormBox["11", TraditionalForm]}, {5.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["6", TraditionalForm]}, {3.5, 
       FormBox["5", TraditionalForm]}, {2.5, 
       FormBox["16", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["11", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["9", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["12", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["16", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {15.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"AKL\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"BAL\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"BER\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"BOG\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"DEN\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["\"DOH\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["\"ILR\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["\"LIS\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["\"MIN\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["\"NYC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["\"SAC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["\"SAN\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["\"SAO\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["\"TOK\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["\"VIE\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {15.5, 
       FormBox[
        RotationBox["\"ZRH\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12.320281152964093`,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->386.54939813691055`,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.908989005885161*^9, 3.908989103457861*^9, 3.908989156677306*^9, {
   3.908989205324952*^9, 3.908989230310544*^9}, 3.9089893143570547`*^9, {
   3.908989418000437*^9, 3.908989490279271*^9}, 3.908989535054385*^9, {
   3.908989584632678*^9, 3.908989738199003*^9}, 3.908989877135881*^9, {
   3.908989999656287*^9, 3.90899004146647*^9}, {3.908990108573571*^9, 
   3.908990173055254*^9}, {3.9090689952758217`*^9, 3.909069043380352*^9}, {
   3.909069461141354*^9, 3.909069496795683*^9}, 3.9090695616317883`*^9, 
   3.9090696153405313`*^9, 3.9090696474598722`*^9, 3.9090708858092327`*^9, {
   3.909070923711465*^9, 3.9090710653142023`*^9}, 3.909071206639986*^9, 
   3.909071403473228*^9, 3.909071647470302*^9, 3.909071913372663*^9, 
   3.9090720040185823`*^9, {3.9090720742812643`*^9, 3.9090720864955072`*^9}, 
   3.9090721744089117`*^9, {3.909072251874522*^9, 3.90907227864613*^9}, 
   3.909072439257538*^9, 3.909072520223919*^9, 3.909072550581769*^9, 
   3.9090726224724197`*^9, 3.909072657627266*^9, {3.9090746749589252`*^9, 
   3.909074740262051*^9}, {3.909074772774955*^9, 3.9090748031119537`*^9}, {
   3.909075052269184*^9, 3.909075078570484*^9}, 3.909075143411179*^9, 
   3.909075209404737*^9, 3.909075779853346*^9, 3.909076111258622*^9, {
   3.9090761889290247`*^9, 3.909076238340777*^9}, {3.909076347336649*^9, 
   3.909076365334259*^9}, {3.909076499540956*^9, 3.9090765307936363`*^9}, {
   3.909076643624887*^9, 3.909076673479411*^9}, 3.909076852646929*^9, 
   3.9090769548518267`*^9, 3.909077184869422*^9, 3.909077392189324*^9, 
   3.909079546993222*^9, 3.909154639363864*^9, 3.909224897102335*^9, {
   3.909225028160377*^9, 3.9092250495000477`*^9}, 3.9092274668034563`*^9, 
   3.909229334060893*^9, 3.9092302362390614`*^9, 3.909243456721784*^9, 
   3.909243523967965*^9, 3.909243694359008*^9, 3.909489697482445*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"83d8c6d9-6a55-4331-868a-d2fe8f23b534"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"CL", ",", "LtestR", ",", 
   RowBox[{"{", "\"\<Accuracy\>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908989045069436*^9, 3.9089890580968237`*^9}, 
   3.9090724887446737`*^9, 3.909076198489102*^9},
 CellLabel->"In[40]:=",
 CellID->801286459,ExpressionUUID->"f4c3e6cc-c9b4-4e13-9e25-52fce44ee6c9"],

Cell[BoxData[
 RowBox[{"{", "0.9340659340659341`", "}"}]], "Output",
 CellChangeTimes->{{3.90898905259823*^9, 3.9089890587163563`*^9}, 
   3.908989116821003*^9, 3.9089891621396303`*^9, {3.908989209330024*^9, 
   3.908989235055271*^9}, 3.90898931456907*^9, {3.90898941821455*^9, 
   3.90898949048986*^9}, 3.9089895352657433`*^9, {3.908989587337289*^9, 
   3.908989706644307*^9}, 3.908989741974558*^9, 3.908989877361236*^9, {
   3.9089899998879547`*^9, 3.908990041674759*^9}, {3.908990108782062*^9, 
   3.908990173264811*^9}, {3.9090690199086514`*^9, 3.9090690470567007`*^9}, {
   3.909069463365355*^9, 3.909069478169176*^9}, 3.909070889463208*^9, 
   3.909070972870234*^9, {3.9090710401616297`*^9, 3.909071067498761*^9}, 
   3.909071209757613*^9, 3.9090714054582767`*^9, 3.9090716505102377`*^9, 
   3.9090719212683277`*^9, 3.909072007057378*^9, 3.909072088155964*^9, 
   3.909072282378035*^9, 3.909072489751281*^9, 3.9090726248064423`*^9, {
   3.9090746911129847`*^9, 3.909074705988017*^9}, {3.909074756351556*^9, 
   3.909074808126802*^9}, 3.909075080666202*^9, 3.909075145573312*^9, 
   3.909075211983127*^9, {3.909076195191966*^9, 3.90907624042446*^9}, 
   3.9090768581688967`*^9, 3.909077395388043*^9, 3.909079549384453*^9, 
   3.90915464215213*^9, 3.909224900532544*^9, 3.909225031113682*^9, 
   3.9092250672007523`*^9, 3.9092274691154633`*^9, 3.90922933689146*^9, 
   3.909230240244685*^9, 3.909243459584866*^9, 3.909243697728869*^9, 
   3.909489700641357*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"f167539e-aee7-46ee-ac0a-f9a0ea6015d3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"auxGB", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{"dcl", ",", "Last"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.906213866829863*^9, 3.906213896080358*^9}, {
  3.906214570951935*^9, 3.9062145732005653`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"a8c20196-82af-4b21-a4c0-42520c8350e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"r", "=", "1"}], ",", 
    RowBox[{"r", "<=", "nC"}], ",", 
    RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"auxGB", "[", 
        RowBox[{"[", 
         RowBox[{"r", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"aux", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}],
   ";", 
  RowBox[{"SmoothHistogram", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"lf", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nC"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "COL"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.90864157116123*^9, 3.9086415772071247`*^9}, {
  3.908647340328238*^9, 3.908647550176907*^9}, {3.908647586287353*^9, 
  3.908647588512681*^9}, {3.908647646000626*^9, 3.908647651124707*^9}, {
  3.9090714251239777`*^9, 3.909071429950388*^9}, {3.909071931541286*^9, 
  3.909071963724719*^9}, {3.90907488439459*^9, 3.9090748901606827`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"80767d51-b3d2-47a0-bbdd-99e51fb64b30"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
nsHi18M7xDITw//V/w8tXJzs
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxde2k0lW/0NkJIInMoQyFRhsh4tjlDmed5OpNjOMc8k6k0KCkNVEiiUFQi
ym4gDUJlKH7mMoRKpkq83rXe9//h/3x51rX2vve+rv3c617X/eGR8gu1I7Iw
MTFt3sDE9H/fSrXui5YSKcj0/57/jT9LdECXcAou7+5/afB6gHA0wzjLa2sK
fp7KGvqlMUTYP1P3fpw7BXnMDzz/vXWYMOygJM7YmIK7GOOW138PE7Ibi4h/
mFMwRvGJE/HbCCHSTNFr4+9kFGK9tFw3MUpoFxb8KTqbjE7Zw/lic2OE3eP/
0hRHk9FrtkRiC8dXQlrtVyHoTUYjv6kp0T3jhP8y2stt25Ix7ZDh9pfuE4QD
jnW6Ac+S0bkk80rp5UlCzs6i9qiHyegR03zg8MQU4duvLL+simQ0O3X4uYPJ
NMHkedhCflEyFo981PGomSFcO+t+rCovGdMP3x3aqPyd8NvXWOzpiWQcS84q
T/H+QbBXUar6kJKMhD2yn//u+0moZBIy+BqZjByDK8PtnHOEjR2rH5YDk1FG
gm/NdWaO4HttnLTJJxml1C56/Pn8i9AQ0vFbwjEZlaoHpQQ+zBMECfUnlS2S
cSFE+Mjm7gVC6ObiHUaQjHaPlputxxYJr/qP1zjuT0Y5L+OAg6tLBJmKcBPK
7mSUv8nLHrDzNyEx3qM3bnsyip8euiTi/IfQY2FCO8W/rv9Fgk9f3l+Cyra9
q9c4kvGa8tE/u8ZWCCcmhXJq/iXhF7unkZGwSvhStybTPJeE01n/XC3K1whw
bKK2ZzwJOc59chPIYYJLzp3mU/1JqJopJHjIkRl+yT7qX+lMwlN8N/7mSLHA
4cXi0C0vk3DpmH+a0iIL3Gw+wSLdmIQ3ONP/kj9sAObzEef3VyfhzR8VZ0/W
s4J7gKf8wdIkTNvW4T5RxgYP1EwbXPOTUFfnvt3rInbYsmGfVdCZ9Xy/PT5p
JRuB+l54OCkjCT/hT09SNQc8L2KKyIlLwvgb+7a1tnKCBGOSvSQ0CTWvX3Jb
m+KCaP33l2oDknDjzd2DASLc0LmlQfGVaxLu66IF2Ntuhj2D15v6rJLQ/bPr
Dbk8HsioOmk3a5SEWuQmD/3xLTCYGPmFSSsJlXX4ZJKLeUHrsFcM/94ktPst
sGXEmQ9yxQ9ukpVJwp47BNu//Fth5tu+q5oiSXh1w0mz1e6tcLBBRMVycxJG
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
Y7wZT3MgA/WLg9vm3Mlwx0KlqMebgVwxkzGuQAbObdv2TzkwcEbWnztLhgz+
kywvV8wZ6J1hzp3BQYbHdd9ctwADW+99eG8zSwLhYx+npfav939ecPr7RxIw
nB8n79/NQB2i6cGARhK8kS3denA7A2MvSn+oLiHBrsXsG678DDSgjg19PkWC
5OZozSAOBp654zw3HE2CT+d83iT9o2NWzw7PV34kUAsw98qZo6N5VaJFrhUJ
Tqmp/rw+TsdwVfGHBjokGGcRS6/tp2MEcSysW54EBu83CL/qpKOAWK+kvTAJ
8oumy/ta6Jj2/JdGPTsJFuhdurMN63FF4VXOJSJY6z9pZ6qm42bVhRzTCSKU
b7npx19Kx8d+XMOhn4mwYfD0wq58OqqlXa7IbCOCZ1XMMc0zdFz9ff/YiadE
eJjoK7Z+rqKlgH5/Ui0R+A5bVHnG0XFwx6Zhnwoi0MTVDOihdLxrN35d5ToR
mr+JfUwNoKNfzEvWn5eJsKOBlXzelY4vPL/WXs0lQuzxmd83rej46ucvfe1T
RPjg2n3ykREd9/Kb/3t2lAhKu5t2tGnS8TKz9DbNNCIcXb5ZM6hERzJl8NLF
ZCIMvzxjMidNx/2/D9uPJhBB50JsL6sIHe+dmP8pFE+E8yQ/mvBmOr55SFlU
iSPCd3XL1d0sdHw+UF6ruo7PclGkY2dD8fWFVC/h9XzTci2zq72heDT8x/f/
1uv9Obgp5PmzUPTnOmuUvt6v6mt/7kRFKG4xE+PkWOfjl1FVv/lCKIqPt78k
rfMV2pkyqHpkPZ+HdfDKSSK8fmbL5kILxS7m65m3zhIhyVdmT6JjKOb0NLRn
XSKCKtOCTTGEYpuUwA3NIiJ8vdoS9XJ3KGon4pt75US4rHexYJo/FJN/PRtd
qiGCVT/1Gd9qCCpK3qEwPyYCS7zOhMZECFLYHWreviRCrehmHo/3IdiTTltw
/ECEwLoBtSONIejuYG18aZAI253vupaWhuB/ifdOn50mwvuFI8lvzoTgEVXS
Tb0/RMg8Z3/jR1wIfv4hoJPHQQJttV1vBIkhyD8s1HdhfX/Ndi7+0LYOQXZb
3d96ciQoprcK+WiF4DHN65NpB0jgtOWyboZMCAZWnhkNMCMBVxXN79bmEDyv
ZM3S70qCJ4f0jrUvBePPEj7TMRoJwr7xVM0PB2MDf9+5mCQSyB4f+iD6Nhhl
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
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
b4fmahFYyJs5uW+W8bMwu3hrmQgU1rkJo+3YOMuzfO1VLRG0Re+TZNuwsaPd
TqqoKoIj59LJlzaw8W9FzarbsjyFdJ2htViykXyAd+nlr3ygzG0o71vHxsNc
1RO+vfkw4tQ1pLhWVp+z+QWbO/OhMWmUqmcmy3uBVc/Ze/mQdUtdYLtKxi/w
QhTrRj5s/7GqJXglG6fbXV5afyYfdJa5kBJXsHGq/5hM3nz4tjPC5+RyNq6/
U612NykfqkSp4jo9NpY7BO1Oj86HpJZi6WtdNj58Hq3fuTMfnOWQMkpm46di
s7hyx3yYZ/GG0NBm431IOapung/dUSO1a7TYeCo9sYakmw9lZ+coeGqwEfY5
Lz43Mx+Yb42d6HPZaNr4WO3lH1m/mLNFmEdi458+ZueF/+0XTnskFapsNCj6
Xk1+LOsXicnkthkyPfK+KlvfEoL45ila/3Q2PvPumataLISI73XlSopsFJM+
6OYcFIKZ3qshfQVZfcZuim8ihDBp5zDVfjIb+1MK9tzwF0JzPkkQ+o+FQ51u
S8PshVDQTGnh/2WhysaHX16uFELAZCfS6REWHlg4/JWkIQSDtTQfHGJhm0Kg
u8YkIQxG8sVd/7HwVqu81TdpHtSfOSkd+85CvsrGuwWP8yD9TQ1F6xsL7Qqf
D8ytygOP2S8Jiy8sfB/WUh1zIg+0HQdrvaUsHFiZN+9Sch70JcxSYPawsGD1
SG/L3jy4VrXCSdTNQusol9/t2/IgfsBBeLWLhVWnEmY0rssDh6WhkievWVgU
Zt5xenEezPZLJH9/ycLca2rfGdPy4K2wiKbSycKMUUkP9XsunH94q9zwGQvf
rGwx+teRC7GTOoc2P2Ghd3/XitraXLA0/4+6u5WFHV1LjbnFuTAtcqYgpZmF
ttUG0eszcuFpiUFLyX0WNt0PUJWPyYXjr+1IjXdZ6GN1eP5z71ygkUJ8uu+w
8DUvhX/FKhdWbT4gnrjNwl+mHgYnlubC2IFj0oW1Mv1KTZ4dn5EL925UUai3
WFgxMO4ZKM2BvG/PiB03ZPjqBjOvX88BvyU/atnXWDiRO2RlJcgBPd8ZCocv
y+4LDl894Z4DP/L0na5fYuHdTZp/xxbnQM0DW+GzizL8eu8H1//MhpSJQMnP
czL99VnOKHsvuK6JI886w8Ikmt9oVm42aO4rpFFOszD5TVPj+UDZ+6L4ernz
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
f/w/4z4Tgw==
      "]]}, 
    {RGBColor[0.6, 0.4, 0.2], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
w+jXi8fe53S1/pf/H9SpJgk=
      "]]}, 
    {GrayLevel[0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
RvvVn4yRrArj//v/wmT+cad/ob7O/9f/A4SG4F8=
      "]]}, 
    {RGBColor[1, 0.5, 0.5], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
C04esCtEuzzKzx/Lz0oV//5wAMR+t2b0uPjj+OvOHdn8A3A/NZiuZ+eP9eOn
w48oHoBYZbH9R8398dFe3fyxq+5gWlG8ZUTPHwNrcvWe73SHH+a2q7ap++P7
pjknv7f74cqTofk8RX/8JVU6do65H0J8+cO/pPwxeG121SWJ/aD+RaXFWdgf
1+xz+JV9wQ0G4hvLK36RUO+kUFv0ZjfIW+qTKTZGwrwNO/6LeOwK+wtm6aR+
Eob++Lo3meQKMga5+xu6SOign6H4YtoFntw3NVNoIeHKNRtTGZkukOzyYhWj
noSl5MKDkRouYDPMEnp6lYT5w1rBgw374C9T9v36YhLa0NMWv3LbB7cW1LYk
nSHhWpvSGyGfnYGZ41zxNp2Ei66HrilOdoZNml8ztySSMKDDPvSsmjOM3chg
nGSTUKPCeO1dzl4ottN1/xJKwiWcFzN/q5yA+KrdzMGPhDyzg6/kPuyBlaGh
q4tdBPFHzs+ort0DL36LC8/vJOFGm/XW5gRHOH609L2nOQnXP3+2M/H8bnBc
uaO1To+ELsOTdpKDu2BR5XDFUnUSiiR6aX9ftwuaLJKywhRJmLa8NcohzAHi
n6oxH0qRUNjUI3jDNXsw87vnriYsyFea11b8zw5+fvHdGvOLiHs1w1d3ONpB
dcLc6hefiPjdP/3IjfydECZzVtign4jScs9fhH/fAZqFZiNpXUT8eXbTERH7
HTBo8Kp19BERT/1WeJhYuB3ONXEqreuJ2Hj1GX36ry0ccJU/du4qEa2llmpF
+NrC8vfXmNNFRGxdqbd94p4NdLBcDricIeLEugczcRo2kLLw+9aqdCKqTLXz
dDKtYfupLJVFiUTcschh2czvbTCvuUkkgE1EDX6Y+8eQbXDn5pORxlAi3lee
481fB2DbU9oU/YiY5l0LiQVWoP9aoorpQsR8abU8j+OWMBF6+VjHTiKGhHxd
npxiAaWzO1kbzInY8u656aJkc/BPGzlwSI+IdygnKt6kboXVqw6ZD6wjYts1
5y1/TprBq8q1qlsViZio6/+OULwFTlreF8mRImJlvuUfoXpTcOogjH4VIqJr
5g3jnpcmsPzu3MmcMQIu0vCrezq7GY4OmHnv7iZgYua85uC6zSAkzF0r3EBA
pGr3zLkYA2dt3acbxQRs3XW3RjbFCCZsv1dTMwgYnB3GlX1gCP7kTby1HAKK
SZYcHhY1hFfJFHjlR8BqUcqKqF0G4HT5slimHQF/2q3IvH9KHx61jTy11Sdg
7QKbUwb/6YHF+Nqc34oE1PJYKTubsAlqpYg+V4UJ+DXG/HKu2UbQ2pS/jjzm
h3KxpxoH/urA+b29Y8rdflgpsf5j8hNtkKMr1HbW++GwSNOaIyUb4OgJt6jk
Yj+surKdfDpFC0Tqjm+zyPBD7sly4YPs9cB73iH+g+2HBX0tn+SomvBlSvLZ
JT8/NPkYR1KgakCgosMpXzs/LCLfXenGVodes2RfWX0/bCs8ciD7yDpw9n6g
LmgoHkrs/lNwcS20xgpNxAv7YdclZq3NozVgdd7ymvGYLx4nvRC2+aEGdfei
o8e6fFHlXTU5WFMNtIduWhfU+6JaleLTqWYVKBD5tci92BclskOIGY6rYYW6
Yadkhi+mEiSd1IdXQvqOyNP32b648ZjlzJ4UZVgQXOnH9fPFtITdMSfNlSA6
5ZPGRjtf1M/y5MbPKcC3Ms3P7/R8UepSY1dv+woIehxQd0bRF0XLi8dWlspD
30RBjJOwLz6JbjJ7nSEHLtL9NgvGfHCDLv90RaIstOqtXHynywfZL7bt25i4
HLbt8/gvst4HFfTzrWfTlsENRs4ZjWIfzBkpHLlaKAO62V2EN+k+uHdy62Dv
waVw8frS9cfZPhidueLGpVdLQPGl45edfj74uMT1i6S1FGTOpF6f2+mDYmmn
Jp0bFsMC5ZbYWj0fzG7uX9bsIAGx5gu2hyj6oEdQeNqNj+Lww8daUkXYB8t1
48vjzohBSHx8V/cnb/y+9OczhsdC6L9Qn5va5Y2Yq5wwuX4BuN2fIUK9N144
kx9EEhOF9nebtX4VeaNU56ugtZPCYLOA+bU83Rs7MgtzCj4LwS2N6htEtjc2
lB1IyB6bt9pk9zluhZ83Hgr2fLZO9p9VcYj2jic7vZHjeyO5z3XOSvlosFSS
njeq2QxR6ypmrY5VFHebKgriE06cLlP6bSX2dCjvs5A3XixI8Ww6N20V/0XF
v+iTF4rck9i0xHjK6udSnw2eXV6o8NevsKD/p1WYQe436Xqv//vfxf5n272A
bNtt/2v/P6OZxeg=
      "]]}, 
    {GrayLevel[0.5], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
B/9b/x9uKS+D
      "]]}, 
    {RGBColor[1, 0, 1], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
V0U3sjH5QXyRgrwltDtknJx4wUa2W1jChmxL6OJNuWVdycbIg2RXIVkr6H2U
MF71mI0hvHYHBLKtYOBMjLbiQzb6SDW3CsifhMHlEdFxeWwUOrU8USj/JAwX
hHZMZ7PxkMlo3FrVU/DVKmiLXQYbvbwbItc9PQXfF5nUmmQ2iqDciNBha5jI
pT5TimejfV1MJXerNfwy9+JLimQj6UhB9U/H0zAzS7aeC2Xj5cMHVZomTsN8
NimHFMjGrVkuS8kXzsCiie1kPYONlkwB1hFxG+CaPqmj4sPGv8sdaf2FNrAi
83hMihuHb8Gu3+qILfAYHu1cdGRj/FqHY3c+2QLfuIEC+QwbGYrzja/O2oHg
NV16swUbC36L7KraaA/Cegeq1U3ZeGZShBpQYQ+iY3sFMgzYqHHryOS0nQNs
uKJ6Zjmw8en3wkPbuRxBUls5l6LJxtnO1gNCdxxB5ovCr5bdbLz6usnjrQIJ
5OJldTWV2aii1f1mJIAE8hob47Lk2ThQOOXd/IYEWz+u7+aRYeOG+cpef3kn
UIoW3uq7gY2ilY8yRgOdYJcaP9EuzMY3fNsb179zgt09K59r87GR70ss/8J2
Z9gTzrUmZwUbs/6xNqWEOYPmzr82/Iss1Blf+6avxxkOdPy+S59hYcr0pS+v
97qATsjEdNc4C/svXE8kJbiA/rZvenpfWfg3fa718jcXMGj9Ep83yELqmYnA
k0dcwSjwY49QLwsruOT2Fdx2BdMtPdvY7SxcWLy6IYaLDObN7cz+NyzUaBu7
+MOeDBbMlhcGDSzs3Bb2pamCDCdlmoQePGehrtMXz02SbnC6vs5OtILDFzGS
88nfDeyomB9UwkIrF/9fqzvdwFGiYmbwAQsnT42mJmq4g/OLx4dM7rIQ5Tfw
0lLdwc3rUULRTRbqRe9IvvnHHSiiBX3i6Szs+NdHEz/tAd7P7iiFXmHhXosX
/7WUeQDV7SZ7JJaFsVXF5s8lKMAQyqg1i2BhVOD+TYOBFGCVXRUpDWHhRQvB
T0q9FAhwSnCQDmDhAel0rSsHPSGYL6YgnM7CC4+vPl2b5Qmh/12c/ebFwkr5
7PabXF5wwS7UwJLMQuPs35N7nL0gYmVQUrkDC68vSjm+rPGCS4XMAbnTLBSX
fmxnquANcdbUHdEnWGi/eHBjVYQ3JHB5BUyYsHC0e/LZ2lFvSM4nv7Q+zMLz
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
      "]]}, 
    {RGBColor[0, 1, 1], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
0vYZ/2/8/wBXov3T
      "]]}, 
    {RGBColor[1, 0.5, 0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.87, 0.94, 1], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
GBUZYt4t1heNDbJgvkFpNHMHC29OnjAdOOgBhT/MDf9sZ+HvIOGxoUseoL/d
78oZSRb6l3Vpfuf1hK+WuXwt21h4TOjenT9UT0iKaSTJirNw1FyumLPdE9Tq
h57EbyHmWyXnw6KGF/RM8Mr9FGMhaLNWDOV7QfA2hVjLTUT8WoGIKh5vkDph
+vXuRqKehn92FgxveBrpbbRVhIh/64BL2ztvYNzJLg8TZqGD/y3xDQd9QGj8
/oov64l5yXvaJV7lA3e3DJKPCrJw/QvJpKGNvmBvyvPs+loW/ssNEbCO9AXu
cDl5IQFi3rB50GvKF8prj7HP8rNwX72wpaKDHxwf9RjrXUX4zzf1kIBXfjCz
KfOI7koC/7ExPbP9ZyHn2L2KUj6C/xNZx8oqz8KBkL6VK3lZ2MI5K+q52R+G
azipDB4WZtT9+H053h9iP0s/f8PFQmwtXaX91x+UNh7dqclJ+LNttNl2RgB0
HmHG5XKw8I1mUbFFfwBxvpB+9+8vE2NU52uaTc8R5wlm1pMFJj48Ji7u2nSO
OD/cPpnym4mDQU9dFdUCoV2eY6PNDBP30/J/rL0cSJwPDLslfzIxiltQhHvj
eeI8kJw9PsFE9XmG5J/Y84T/91jfGmPi8tkvZmN/zhN+LyF6/gsTk53e9D2i
B4HBDkrPoWEmvnWf4QjrDyL8vCZnzSATG/rGpwTNggn/Xjj17iMTU+9dnaU1
BYO0pd6movdMJGvyKjaJhhD+HPee9I6JO/sbGqTNQwg/7rywu5OJGjKm7vbs
EMJ/N9suvGaiyqULLOemEMJvXcSaXzJxmcT4LuWFEMg1qfoQ94yJNc88+Bt3
hxJ++ivX4jET3YpuR64khxL+eeD0lhYmtu0UVeAvCiX8MmrzCDKxPVi/6mFX
KOGPr3qvNRD1eN1tl+QPg7VHRPL97jGRZ+XRkJ16YYT/nbHTuc1E3R9F2HU2
jPC7K1tW3GLisLNEmdS1MMLffnxsr2bi+/7ucN6hMMLP9hRcqGLi59GlxCCR
cMK/Qu2dK5h48Yvzq8ij4YRfPd2qUMbEb06960WDwwl/EuyfKWHi3v1jDmo1
4eDqbVPYUMTE+VLxrx3D4YT/XDwTlc/E4PdnhWY2RMDCgXFxkwtMdAm+Gppi
GEH4i+qASBaRjw2Fr9w/gvCTwKKBNCaWaubVa1ZEwHtGi0N5MhMN7kSM730f
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
      "]]}, 
    {RGBColor[0.94, 0.88, 0.94], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.94, 0.91, 0.88], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw9e2k4FV7UvenySzQiSZF5TlGpsK95yDzP073XNV7XPE/XHKUkoUKGpFKi
aLbNQxMphVKZKiE0GfP3f573fc+X86xnnb332ut8OfvD2esRYEFhYWJikmZl
Yvr/u3y945/juxOQ6X+WW+5hnlnOwP/D/6YOtkqzByKB960ij9i0+gUd5RAS
cyBq23ou1XbNqB8pOiB2aYWO8Tm8Xvc1Z9Xf/lF83f+Xjj7S1jImsnPqoab7
krf8pKOrUM7x3j3z6tuvyisbztDx8R3ZVt49P9VrmOTGkr7RkWD9IveM9C91
E3uZ3MdjdNTy53n+WOO3+tRtKe2/H+n4cKt5Bh/1j/oJTslfikN0PPehb0ag
8K+6FEm83Kefjmq8ZyWMhxbU2x+KWpX30rE6WtrmgOySOolHhG34GR1xlue8
xYlldWZ/4Ts7Oul4oER0SmVxRb24bQ/ZvIWON2VWlYMj/qmr7dnNk/mEjhK7
hzYbsDHBUNiu1tb7dPxwSCGL5w0TRLzcGfLvDh1r55V3fbnJDHxS/GIqNXS0
ruPg4c5hgTsJfK8Dr9OxqaqU+3UcK1gM8CRfv0LHT6MGr06EssHs/u3K45fp
eAqbzBPDCHDqxNaxPZfo2HjTKuc/BjvIjW7Otcuno8Dv4pKgfA7oOrZJO+cs
HV867o3b9uA/oOZy/Xp6io69/gmbVL9sAMI0ZznhBB0tHU+xagtvhDKdDVaQ
Qsc3F817yihcoFHEwRaZsO7nvKvYiwZuGP5DuFMbTcfgurzriXybIcaUjTwV
Rsd/GXyLhzS2gMBVFh6JoHX9gq+O/F7dAveYmFtd/eloulM2pLJpK9jYrwUX
eK3781o2NzJrG/y6vSraR6JjZlhS6nmX7XCGc6WPy5WOHZkVUvIqPLCPtJSk
60BHe00tFc+dvPD84YJSgjUdVx4La9JY+MCX5+/ofTM6aigYnKb/5IMN/r/P
/jy+7q9RQmbb1A640vZTS15v/X6KosJsZvhBe8/8T09NOko/JZ8zWdgJI2Gz
ZSVqdLzYuPHOJOcuSHg5YzmoQke+XZ8eW0oIwh6paVYeZTpuGGkcv224Gx4l
fK8z3kfH3VEOp+Ui9oD9wDdSmgwdIygBqXK3hODv/q/bm8TpGC59t+tGuDCc
OzHRsiRMR53zpxczBPeC0uhYsLIgHcMOvTyl274Xeo+NitJ2rOst1XvJFCoC
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
A35iNxE=
      "]]}, 
    {RGBColor[1, 0.9, 0.8], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
VCn9
      "]]}, 
    {RGBColor[1, 0.85, 0.85], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
28XoDvfmQNxiot+VMh4GW9/oFrheD8T49yNjZ9jC4cGuDRTny4FouXtY88ue
cAhx7DV0PB+IKz77z5VahYNs/jlh+8xA1Ir8z7cyIhzGBu1+2KSs6bWNNeAq
D4d0PuEe6+hAtGe+P3e/Jxy0LKcuWtID8YKreE3/j3CYy7gSZuEbiE8jbF5q
iERA2RN/CzO3QOR4vvv4n6MRcGLjAeljNoH4vX9OVoAWAeuNfv0xOrZWf7NU
QPKFCLjNvNtvqBOIRukJ3Me7I8DvfnylvmogOmUHvKXOR4Awy9F43b2ByC6p
deOTcCQ809pkD5KBaJKWtavVOBLio/oUtbYHYmBjVdO74EhQvpO77ghPIN5M
aVvwKouEd7+cxtXWBWLSKDuLxrNIyFMRv6m6HIANdw1kvf9EgjF9JlXlvwC8
ea1b6p1cFCzfqHJXfh+A5B7fjCa7KKj5SlHd/yoASSrJpuPMKHBTOLR5X38A
vh3YsNfqVhTw+i1PKzwKwOGLP14Lvo2C+1futexpD8BjhXPz8lujIfgd85xs
Q8DaPj4+lq4TDTKSx3ylqwLwowh19jA1Gkbdt8DuiwEolDJlqXgxGk4VD26T
yAvAcydyZMh90aA1XvhF9HQA2rYOuXxhiYG57e4PhBMDsOXJxe76AzFQZid1
fmd4ABKHAgWbCTFwIucjdXtQAIr94n7zNzsG1vdfNxIkBuDEcvqZmK4YuL0l
WFTAKQDtWOTCDy/GgJ+5+sJWywD8usO0R3ZPLOxKX32y5WgA8hvnZZs6x8LT
Rw/KN2sGoA7r747SjFiI40iL2KQcgCqnnktKYCwcMLCw3CgXgOdtRLx6v8fC
dAK/7AbRABzLxi0l0nGQe290ZZ1AAL45cD83yyEOjFaKB9m4AtD0aK3elfQ4
WNLwqmZhCcBEhQWDofY4qA6XS1xd8McQQ7+aXd/jwLXpq8Pfz/5YpO/c2MIX
D7w/byotT/njB9c/eyh74+H+gXCO3yP+OPrwypY9R+MhmKL1euGpP0pfe3zw
vXs8yNSyNfx44I+uVznsLkfEw+inh6fm7/hj4UyhnGd2PJySy/Ccu7GWf+m+
5c7aeNAkWat9rfDHqpSDPk+74+HbJaEtny/4Y7RP2u+wyXi4OPVqZvacP8bG
PkoWWo4Ha7Hy1vcn/VHp1QSzkj8B1rn6ZL+L8UfyqrKngmICNJ3fS37L8Mck
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
jr7O/+L/B8Pd9rU=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.906215722680078*^9, 3.9062247964519653`*^9, 3.906226624486775*^9, 
   3.9062273646765213`*^9, 3.9062279198741083`*^9, 3.906228386185066*^9, 
   3.906229065204331*^9, 3.9086291446207323`*^9, 3.9086292910206013`*^9, 
   3.908629473520668*^9, 3.908629570139041*^9, 3.908634740604228*^9, 
   3.908634853029182*^9, 3.908634960810268*^9, 3.908635580775937*^9, 
   3.908638076303914*^9, 3.908638216999551*^9, 3.908638265805933*^9, 
   3.908638379037112*^9, {3.908638488176465*^9, 3.908638509708736*^9}, 
   3.908638633662323*^9, 3.9086391844660807`*^9, 3.90863929025747*^9, 
   3.90863934071677*^9, 3.908639393808324*^9, 3.908639471149242*^9, 
   3.908639722656452*^9, 3.90864009613905*^9, 3.90864015184678*^9, 
   3.908640198401396*^9, 3.908640308035242*^9, 3.908641340148388*^9, 
   3.908641407298511*^9, 3.908641500630617*^9, {3.9086415722295322`*^9, 
   3.908641577876704*^9}, 3.908641611558271*^9, 3.908641671597352*^9, 
   3.908641753505233*^9, 3.9086419671842813`*^9, 3.9086421008753557`*^9, {
   3.908642781903696*^9, 3.90864279675988*^9}, 3.9086428605115957`*^9, 
   3.9086433958969316`*^9, 3.9086436709118423`*^9, 3.908643726894021*^9, 
   3.908646026350342*^9, 3.908646073288615*^9, 3.908646176783719*^9, 
   3.908646229187436*^9, 3.908646533118073*^9, 3.908646611032638*^9, 
   3.908646690185912*^9, 3.908646763883307*^9, 3.9086469525506144`*^9, 
   3.908647000562512*^9, {3.908647200115212*^9, 3.9086472132219677`*^9}, 
   3.9086472872106743`*^9, {3.908647357424417*^9, 3.9086474485588617`*^9}, {
   3.9086474846915407`*^9, 3.908647550883206*^9}, 3.908647589773183*^9, 
   3.9086476518648148`*^9, 3.908648256700309*^9, 3.908648431979404*^9, 
   3.908648501818112*^9, 3.90864873810912*^9, 3.908648817059593*^9, 
   3.9086495327546377`*^9, 3.908649674674737*^9, 3.9086501591765614`*^9, 
   3.908650202886138*^9, 3.908650366795774*^9, 3.908650412846744*^9, 
   3.908650765776226*^9, 3.908651118177129*^9, 3.9086512387822447`*^9, 
   3.9086514103908587`*^9, 3.9086514761854*^9, 3.9086517184825163`*^9, 
   3.908653972800562*^9, 3.908709541856208*^9, 3.9087252645728683`*^9, 
   3.9088941213019876`*^9, 3.909071122152482*^9, 3.909071212207993*^9, {
   3.90907140848895*^9, 3.909071430719049*^9}, 3.909071654753215*^9, {
   3.90907193510186*^9, 3.9090719644479017`*^9}, 3.909072009882628*^9, {
   3.90907209124927*^9, 3.909072115254178*^9}, 3.909072285902362*^9, 
   3.9090723741631193`*^9, 3.9090726274150867`*^9, 3.9090748176214867`*^9, 
   3.909074891132073*^9, 3.909076868496675*^9, 3.909077398448503*^9, 
   3.909079553388505*^9, {3.909154647713537*^9, 3.909154670414198*^9}, 
   3.909224906944154*^9, 3.9092250727162523`*^9, 3.909227472801282*^9, 
   3.9092293409061317`*^9, 3.909230245275453*^9, 3.90924370449325*^9, 
   3.909489707001938*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"2327dece-59a4-4467-ace3-214bd0521ae8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"COL", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908648265907209*^9, 3.9086482911053658`*^9}, {
  3.908650173939611*^9, 3.908650190586137*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"fe1e7e9b-501b-45bd-b50c-bc773142ee49"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.6, 0.4, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 
        1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification])}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], NumberMarks -> 
     False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0.4, 0.2]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.6, 0.4, 0.2],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.908648274257367*^9, 3.908648291611809*^9}, 
   3.9086484340259542`*^9, 3.908648502807847*^9, 3.90864874015937*^9, 
   3.908648819574205*^9, 3.908649534117764*^9, 3.908649676082614*^9, {
   3.9086501605243177`*^9, 3.908650203805705*^9}, 3.9086503691451283`*^9, 
   3.908650412868705*^9, 3.9086507657970133`*^9, 3.9086511193154087`*^9, 
   3.908651239752535*^9, 3.908651413112358*^9, 3.908651476209569*^9, 
   3.908651719621296*^9, 3.908653972822764*^9, 3.908709544517045*^9, 
   3.9087252657751017`*^9, 3.908894122798484*^9, 3.9090711242226954`*^9, 
   3.909071217575926*^9, {3.9090714111013937`*^9, 3.909071433152504*^9}, {
   3.909071941775173*^9, 3.909071967030789*^9}, 3.909072012757077*^9, {
   3.909072094333603*^9, 3.9090721181282263`*^9}, 3.909072287111999*^9, 
   3.90907237592822*^9, 3.909072631833555*^9, 3.9090748189274187`*^9, 
   3.909076869467758*^9, 3.9090774000891027`*^9, 3.909079554225432*^9, {
   3.90915464899512*^9, 3.90915467158048*^9}, 3.9092249086200542`*^9, 
   3.9092250739390097`*^9, 3.9092274742679577`*^9, 3.909229342021953*^9, 
   3.90923024675776*^9, 3.909243705994624*^9, 3.909489708451269*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"431b0fe3-fab0-46df-a77d-24b09f34ebf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"lf", "[", "aa", "]"}], ",", 
     RowBox[{"lf", "[", "bb", "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"COL", "[", 
       RowBox[{"[", "aa", "]"}], "]"}], ",", 
      RowBox[{"COL", "[", 
       RowBox[{"[", "bb", "]"}], "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.906228474844224*^9, 3.906228594127983*^9}, {
  3.90863850092924*^9, 3.908638571567124*^9}, {3.908640365218597*^9, 
  3.908640365345376*^9}, {3.908641514736846*^9, 3.9086415879987707`*^9}, {
  3.908646081308523*^9, 3.908646115202758*^9}, {3.9086476574201803`*^9, 
  3.908647704251829*^9}, {3.908648296231275*^9, 3.9086483030379553`*^9}, {
  3.908650214883431*^9, 3.908650215017864*^9}, {3.909071222453471*^9, 
  3.909071272116634*^9}, {3.90907144276797*^9, 3.909071451109469*^9}, {
  3.909071947304721*^9, 3.909071947464838*^9}, {3.909072018357046*^9, 
  3.909072027387526*^9}, {3.909072124131826*^9, 3.909072124498415*^9}, {
  3.909154663171885*^9, 3.909154687312806*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"6b212fd5-a182-4984-a561-59da153c49e8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
//s9w//V/w9ic53H
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[0.006944444444444445], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
f1+oG90QABOqHx0/r2cge+mZD1wIgCa7f3kKFgzcHCEcml3rD6I4TYnOGgbe
aRAm2Vj4Q0DlGrL1agY61y0uUqvaCcu/udMCjBloeiPbK8VsJwwsjiqPM5Ll
JXRG5YVKP7i9PXPwmAEDbyg9LuOb+kF6zjlq9TIGZuQvXbbgui9su9/Af7WE
gQkzWwe5a3xBe/x909BiWX0cWdh+7uYO+LJ6TG3uIpnfo6G7L67fAdfCNXxW
L2Cg2gJf84w7PhB3ylTsNp+B5+2yS7fa+oDDK1dplDoD5/mOq0w82g4k1X2U
7NkM1H98Q3DadTu825ROlM2S6eWWP2vDK284t/9MbZMKA23IUzM7A70h9tpd
+V4lBnqGKJQIvnoB9es7R8VpDORcVviwlvACxcUjeUunMJA2Y96hyZO9oM1b
XWIjx8Ce2er93VmecDx7FTl4go7Bjb86v2h5QljjVlrCGB19vecYzS71AJOx
8PITf+l4id21e896DxhdlTpYO0RH602u338+3gb39xRT3/ymI2Eg7iwP2Aa5
4jv8vz/puDZB3e7sb3fwffmmaV4/HbVj+ideprnD0pnDamu+0ZFt9eW41yJ3
+Gk7x8fjCx273nT8WFjlBtU8Y3FsDx3XX2kYM3F1g+SrztLcj3QcOhWaeeir
K7j07qZUvKejaEyk55LiCprkZKLlLR0Lvku0AnRdodvrVO03CR0XeRsMCfku
UJFVJ6/0ko5h05JX6DRsBc49iaP+CzqubL0gFzNlK9iODubZtdGxctRricBx
C8xcRZLsaqXjRJnV3QChM0h2U8j8Zjo+M3XPUnznBMUnHWmnHtKRn0S9G2/g
BJEdYeV3GukYtUVJ6yHXEdaq8Aff1dNxN/7r7GnZDPK2J6ljd+h4Y2v+K4nu
Zmjh1vA16+jotuWU75n9DnDkysumtdV0fPXu2qbNr+wh+MtvNe8qOqaeT5ho
XGMPRotm+RCVdKz9WiEmHbGDP54rxPlXZPdnSMvWjG2C+oMO0ivldFQwf+do
GbIJDjbsojwtpaPNyKun81tswXskgeg/L7vv9779TRa2oGNSVDvjLB09X3cu
3nLBBvpot+QNi+lIy+NRTmrZwI0T7Y6bxXRkLNAorcvdCIntv/JoRXQUbzpm
dWbaRnCeMVOSfJSOC0yKjd351qBuY0AuOUzHz7pWe3GSNXzg2NHqRXR0r7+e
9C1hA5ReDi7/kEfH08oR5a3yG4ApjR/8l03HF7eSSh+RADZoH6MuPEhHvQKj
BW66VqDkWcVfn07HTsi11LewhPbM500+KTL/bsdNs/Gggrj+hxqbL8vLRtXP
IsZ6CP+r7HMogY6GE1b3/xWuA1NjfXFlHB3rTY+W8O9ZwESYrfQZV7ZfvfLD
ioG10FQUSPnFoqPKjgPcdv21IHqxn1Al6NidVBYZGWwOAcqFtUaxdGyqPePy
RbwGlm+8Lu8cRcd+uQ9Oq7vNYIDd5hi+l44XjZeawgozuF3xPS9tDx03RL1I
HGWbQvrn6ZKzYXRck6u+07tpNWxbqEduDKEjb1S+2Jq8GrQ9NtI+BdKx8Oet
b+e5q+BLhn/5ZH86wohfLk9iAtfucgcX+dIxTzD1yjmqCcQNH6JabZfl/9Kx
dVolxuCw8hrfz5OOIdzMvgZVYyCFPWniutPRPKynVnuCAu+Of1MrdKFjUYW9
csdnIzj3XNGnypmO29brEmkdKyBWaYm4fTMd7c3M9s9qNQSq9Qbpbzs6lp7e
E+fQYgCKbD8KyVaWn84f1UovlkNbOZswtqbjRk+lMJOP+nC8R1S71YqOSXmH
zx/6swzCFlyR37eejk+fu5fPmbMMTLa1OGaupWPgzaZLyeZ6MJrem3fBTNYf
Mmf8aghaCvdxiuTBKjoeM5DvvCBcArl/FpM/r6TjPUHaP7UmXfClWNEUjOhY
3as/7aWiLiwN3VGuYyDL27HDn5476cDPY8zBDcvoyDR7ce1TwWKofiakBiyh
496ySe+6esiQPL2CH7eYjl6tUqWL68ngsqG56Zg2HbdU7o40piwCTZZUrVqL
ji3tV/zVfi6E7kvyPq806LjOwN30cu0CqOheJB6aS8e2MIeR+/lawNGiSufM
pqOFfk/SLEITbN23U1bPkvW/VMMYh8D5MDOdQbipyO67VGht6KkBkju5tVFK
dFx2wNeduW0eFA+VyWcr0nEqs/erdIc6RBo9cixToOPfFeo2EDEX1u7qyWua
TEeuUVY6VTAH5I9Nlnz5F4sBtxt7xWdmQ0vbQrLiWCwurNibR3lCgiPT1tGW
/o1FRT2H6+cnkSAYvMpthmJxeumRgucWamDEjB0M+h2LeXdHEhncWfCnLJua
8DMWj2kU3ioWqEL9p4v8E99j8dtjM2qYzkw4qPmgqfZrLMbQVpfdbZkB3m6f
1N5IY3H8h6f/5hRl0Emb2P63OxZrF/zqFDopQd9tLfG8j7GYFOYwYLZwOtwY
NJeavY/FwlJd8eMRRUhc4UHxeCvD++0k+fenqeAcEk3ESmLx1rDNT/tXU0D9
6MHa3I5YbO0NbIx4qQAfnp6Xr3geix917udO7pKHUsVGx5ansfi29CmvfEAO
mFZded9aYnFJ0bue+SQ52ECMv5reHItpkcuCvq+dDEpl88n6D2NRbuqmXe20
SdD+0Yxm1xiLPhsI7eoNE1bi+e7lu+pjsSPoa/zChnGrcNfIwaQ7sfh4kVV0
o+eYlWlqBvVUbSxO0Wlr0xwesZqoO8u/cyv2//4PkTAc3dxUPP3/xv8DJGQU
Xg==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.90622846854734*^9, 3.906228594629601*^9}, 
   3.906229068921832*^9, 3.908629147295775*^9, 3.908629292201927*^9, 
   3.908629475086288*^9, 3.908629570213171*^9, 3.908634746451317*^9, 
   3.908634855698187*^9, 3.9086349682148237`*^9, 3.9086355829726133`*^9, 
   3.9086380776746387`*^9, 3.908638220259121*^9, 3.908638267202948*^9, 
   3.908638382599903*^9, {3.908638490297418*^9, 3.9086385719802103`*^9}, 
   3.908638636120578*^9, 3.9086391868234253`*^9, 3.908639292450384*^9, 
   3.90863934185*^9, 3.908639394913868*^9, 3.9086394745131083`*^9, 
   3.908639724801065*^9, 3.908640100160088*^9, 3.908640153017045*^9, 
   3.9086402081765833`*^9, {3.908640337219365*^9, 3.908640365837638*^9}, 
   3.908641342217456*^9, 3.908641410613696*^9, {3.908641506127634*^9, 
   3.908641588415845*^9}, 3.908641621808371*^9, 3.908641673394423*^9, 
   3.908641759136401*^9, 3.9086419691940823`*^9, 3.908642799152828*^9, 
   3.908642861785087*^9, 3.908643397349777*^9, 3.908643672616914*^9, 
   3.9086437288350067`*^9, 3.908646028294932*^9, {3.908646074691791*^9, 
   3.908646115653936*^9}, 3.9086461782468147`*^9, 3.908646230304406*^9, 
   3.90864661260777*^9, 3.908646691485228*^9, 3.908646765689433*^9, 
   3.908646955004367*^9, 3.908647001622321*^9, 3.9086472146240664`*^9, 
   3.908647288343207*^9, {3.908647674925943*^9, 3.90864770483706*^9}, 
   3.9086482589850197`*^9, {3.9086482968596067`*^9, 3.9086483034374228`*^9}, 
   3.908648435032241*^9, 3.908648504224124*^9, 3.908648741068178*^9, 
   3.9086488210675983`*^9, 3.908649535322588*^9, 3.90864967715163*^9, 
   3.908650161580036*^9, {3.908650194874289*^9, 3.908650215532031*^9}, 
   3.908650370388218*^9, 3.908650412951647*^9, 3.908650765890134*^9, 
   3.908651120400902*^9, 3.908651241142626*^9, 3.9086514141701927`*^9, 
   3.908651476291754*^9, 3.908651720510706*^9, 3.908653972903986*^9, 
   3.9087095454765472`*^9, 3.9087252667491093`*^9, 3.908894123854233*^9, 
   3.9090711252292557`*^9, {3.909071218503212*^9, 3.90907127334739*^9}, {
   3.909071434120101*^9, 3.9090714515361013`*^9}, {3.909071943361536*^9, 
   3.9090719679622803`*^9}, {3.9090720140880823`*^9, 3.909072027964158*^9}, {
   3.9090721190100937`*^9, 3.909072125196405*^9}, 3.909072289457272*^9, 
   3.909072376876446*^9, 3.909072636088669*^9, 3.909074819910289*^9, 
   3.909077401036454*^9, 3.909079555158729*^9, {3.9091546499957438`*^9, 
   3.909154687808407*^9}, 3.909224910311545*^9, 3.909225074917512*^9, 
   3.909227475246676*^9, 3.909229343003742*^9, 3.909230247912711*^9, 
   3.909243707294771*^9, 3.9094897094205723`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"761f2fab-837e-4c13-8da1-71eed22750c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"r", "=", "1"}], ",", 
    RowBox[{"r", "<=", "nC"}], ",", 
    RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"aux", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "1", ",", "11"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"COL", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "11"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.906213036745257*^9, 3.9062130662169447`*^9}, {
  3.906213137562542*^9, 3.9062131914394493`*^9}, {3.906213239568988*^9, 
  3.906213239950783*^9}, {3.906213590283944*^9, 3.906213595298428*^9}, {
  3.908639409099353*^9, 3.908639413681518*^9}, {3.908647738254854*^9, 
  3.908647750366053*^9}, {3.908647783869731*^9, 3.9086478194827013`*^9}, {
  3.9086480186248493`*^9, 3.9086480331288233`*^9}, {3.908648095730439*^9, 
  3.908648150224312*^9}, {3.909071975060418*^9, 3.909071975181408*^9}, {
  3.9090748709803*^9, 3.9090748732662973`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"d1b3e901-627d-42c3-bf3e-0277453e97c2"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-188.44756811818223`, -8.063857204744405}, \
{-210.73143689979133`, -26.576690805571687`}, {-201.97074709714047`, \
-59.04283042993713}, {-152.1303587177982, -23.398714692702114`}, \
{-210.98609732503985`, -11.303546832692085`}, {-107.95295435514498`, 
      29.886966728686176`}, {-75.1936561409991, -4.244227045646284}, \
{-167.6991337113033, 
      7.389494243893397}, {-173.45258934627373`, -28.58173401843943}, \
{-94.10503972032289, 
      38.3259955038514}, {-206.68729437096937`, -94.19285349494123}, \
{-136.21807237770273`, -38.00152183849002}, {-139.7458374221746, \
-42.477866438993956`}, {-194.8784009367569, -51.22693783174442}}]}, 
    {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-359.55878155932555`, -27.6461845673344}, \
{-335.3695782690369, -17.644252045821364`}, {-368.4608506915068, \
-41.468753505234154`}, {-363.38615221066, -30.11906120537357}, \
{-308.3304320253118, -17.881486948431167`}, {-335.7402862703916, 
      5.373725558382052}, {-183.57964598083217`, -52.96759332987566}, \
{-216.3774442107417, -34.474286375196804`}, {-185.95665211945524`, \
-50.99380164858958}, {-118.53993536110076`, -31.087276961597418`}, \
{-173.8697134339332, -29.447450759382424`}, {-175.85159631605444`, \
-45.41552362281889}, {-237.13920791640746`, -48.481450669549176`}, \
{-297.5326768268791, -22.891607982570207`}, {-348.42278736054544`, \
-18.50390266010021}}]}, 
    {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-389.8500109659264, -41.29856824569325}, {-370.1142126327404, \
-39.95999950519476}, {-366.873216146172, -43.66543467772634}, \
{-389.3500818091384, -33.149841344863646`}, {-407.3224753365052, \
-55.81828349212823}, {-388.37908000838627`, -39.90715832823946}, \
{-386.0539822082776, -36.45632803639215}, {-392.85414423711694`, \
-54.83355428335854}, {-395.77612791751693`, -35.461399787775974`}, \
{-396.7456850587528, -54.65133091461297}, {-349.3554208581331, \
-20.254966063395678`}, {-399.0608971915095, -48.75448685549034}, \
{-373.84895671884453`, -35.60519118946491}, {-332.92057429215794`, \
-12.158967426402768`}, {-355.41151543637386`, -30.39762033252943}}]}, 
    {RGBColor[0.6, 0.4, 0.2], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAMfSgpoRoW8DMQn4BNvc/QNIhUAu1
rVXAyC2II9RFNED2yclAehhiwA/58WCcWkJA5PqaFyUSX8DgCib7sgHiP9bv
IzXUFV7AIIs5jK5nCEBf+5jL3udewCCeyjGKd+6/jCiJsAjkVMCIgzyawwvz
v9pRYwz7EVzAZF/wGQLJMkDU+gYivkdawIcmZbEksEFAPt57XFFGX8Bl+VeR
vvI6QPXmi67lhlXAyIDFKRx687+yG8+WXdhTwBn34hMa1zZAy0EKNkF4XsCv
IFq/d+UgQBFmL4nmMGPA2piWX8lWPUD1A1L0SoFWwFe2uUsQlSNAXt3MSRPi
UsB8gElooEg5QPFyLP9GGmLAaPr7FoiLPECUysbG0bFcwPxiOzVU4TZAFUG6
7zJ5X8BCkoKhn4I+QPML+mKJJFrAjwvAl4WjMUCc7q+x22NUwNMAIKeX2TVA
NXjpSa7UUsDKN1EUcG01QPZ3HCab0WrAQM18xHixP8BRLeGbHl1jwOF53S6Y
aVDABLvuEwaAZcAAU8SuR3lAwMbCFYAgn1/A0DcBERbAPMBII509XYZpwP4g
l8uJWUjATc8ixNwnasAwAFKG/stPwOdzlctMu2PA5tUFdmchVMDlC5PUhiFl
wMRJOuyWX0TAgBOkv2ogY8AS8pWr8ptRwLiS2dX1XmPAwv4U2tpnVMAxvIfH
B/JcwNinxqirigLA3vd5KGSeZcDTtmttESVLwKz/rcR1DmLAACfiru2dRcAi
IZ/4zstlwMmBZ/wPPVPAMs+JKTYUZMDCnYU16ndGwJdIVWQi/GHA5sde+DQq
UsC2oWNV4fJWwCCU6Yf0tiHAKE0CCZCPZMCu5q3B2+9MwJJ2ctSmmWDAmWIx
27G3R8BCKkj1969kwJezO5X7EFTAL9Zw6DYOZsC+iki7imhOwPyzlYdSx2PA
L+8kIbZ6UsA36Wjz
      "]]}, 
    {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAKLgpp3HoV8CIwEe7QMQJQHK6Afv+
ql3AVJi7Oi+sHsCA2cLajpBfwCSPp0wGMQRA+mpfjvK2aMBTgnDUIfkkwFju
xx41sGHAvwmSoVWLIsDGBLwp00NjwD6n1X16cUHAYthT6q2RZ8C7k0zXS7FA
wAnK7O9jt2TARENeEJFQMsCa82BusYFgwOTo9y6lnwbARZRP0hJ8YcBoQ0OZ
xMkPwAM+scxJIGHAp4sdy4xiMsBK+NkgpI5lwICrHZ0AsTLA4O+whzunYsDv
kfGXZz4uwN6lybHIJ2XAq9sYnrfQU8ACCNhLViNuwIXQPGIPRlXAbSZOC4Ss
aMBNidtsmh1SwLYgNNTds2LAI6BLaWJgIMA/hCUYHQFmwNH48uPiw1XAUDHK
C9hAZ8An09nMZRxSwE4gwd36w2vAhEez2z7HTcCmTLo+a9hlwINv9IwS3lLA
FG+nO7+kZ8DQ2Vxy5BJRwPr8l4K4nGLAddzTFk1uUMAcIEY450tqwKtXrc54
ZVXA/JrOUoxiaMDF21lThk9RwGrc3+sVP23AwtOLrqrnT8CsdzCgj5tqwPyr
7xeCU1DA7Tjkgg==
      "]]}, 
    {RGBColor[1, 0.5, 0.5], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAALNiWsEOHdcBHCsN5OWw6QEaNrKK9
EW/Ax5ewmjuCW0CqZAlnIWNxwJTt9HlLwClAvhweALhtccCGYq7WF51GQLp2
yf0tuGTAll6Kr7uxTkC5xd7C50d0wAu9N0m5jkhAg1gFxB6ha8Cay7GQGlxF
QDDfONA2AXLAPpOtv1EUR0Dkq3niDxJxwKq8EfTRY19ADFYxFRF0csDyoM7B
xDEwQP+laqbseHXAnGq942IPJ0CsdNsnfKhpwIouETlG6EFAMlUWWVR/dMA6
wec7/FZEQDGCV+d3KXbAJIY89RwNN0AMMXcS8BxkwBydDJbRzy1AzpJBo2hr
asDMNSlowTBSwNYEZCajwGPATDiHyoB+UMDQ+AeBH4VzwExVOjWCzFDABkJ4
ua66bsCiYa5YwoFUwPzU/x9cwG/ADOPK/r1lT8AqKuXaVzJywENI6VZ2eVTA
Hnxzc8iSbsB+jAraMhxawHDGb7AP9m3AmDDx7sKMWcC0NvHvcLhqwDOkLawa
MFbAWD+0oqrkbcAy5spY21pSwCmhOMlEU3HANjymv15SVcCTDpDsy5lqwBdt
wqcW9FXAYYIJB/5zb8BKNSEmRMdVwPVpYGwY0G3AImInZQkvV8BWSs6GgXxy
wKrcC6qYClLAJi1Bepytb8B4AYjptT9XwC9wCLj80W/ABxVMLwraVcB9e6Xg
tdRwwIe/M5woQ1bApSoB1Q==
      "]]}, 
    {GrayLevel[0.5], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-130.0665877126009, 34.00682870631243}, {-46.39705205430252, 
      11.240573182811186`}, {-182.58817843198105`, -9.382588336850336}, \
{-186.62944777799243`, -5.751924696204313}, {-67.34613735425226, \
-10.779596211909816`}, {-187.7812308209132, -3.452510170343306}, \
{-117.95713797531714`, 39.56884374861565}, {-77.02641012037019, 
      11.817463427411088`}, {-94.19363933830951, 
      4.7658270943290955`}, {-163.43591848451138`, 
      29.424010844098326`}, {-69.74518294803332, 
      14.430368249243434`}, {-52.82690925135387, 
      6.1251774602867135`}, {-155.7325261616823, -73.13196947651764}, \
{-83.62427048858136, -19.435659642603444`}}]}, 
    {RGBColor[1, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAzHwMYA4kdsAF3cNBkaw0wJdf+qD9
dXLAYJN6EPaI/j9wjXVxGUNywDxKyZyM5yLAEgcW4udPdMDmCkMrbj0ywJjj
+V6ZPHXAcljyPXJHPsBRHuEqKO5uwNy0CZ7FxRzAXMUjojmGdsAE759iCBwz
wBFnN7luAnXAxPmmLfyqNcDbKuVQzFlywAjgLiWuERPAn8eIoFkyc8CeRGhp
ucsvwJthdBsadHHAAGLB65ZfGMAeze5Xlol0wNRqyI8AUzfAS5Z6bzjTc8Cg
EQyie/Xxv47PNpLuenTAJih6chVnNcDiH6C8n0V0wFZFF0NBWS7AoC737ww6
cMDghgaHr5TuvwXHEPwQbXPACMgkhxtqNcCwfC3hqKJ0wNroApPvCznA4g++
sCPkbMDIO46ls8YSwIUdBDlXEnDAYBFrO64S87+b6rxVTJdywFY1go1P7SXA
gtPIClPgdMClTOD+D281wDTldspLAHLAWCkw7Ge4KsDQyP5bMkl1wBstxYdX
nExAofh+eZwrdcDZrVS2gR8zwMn5qtFuQXbA4EJAbhlYOMAGjDr76tRnwCuH
bCXxMFPAAMDAE44fb8AYsD0ylqNAwGtyNQVx7GzAZlo6wohXTMDGr4FN7Phs
wNNRQyq5XlfAuTL10S2Db8BIi8lCvlJPwLG9nUTseWnAbn+/QXD6UsCeTQi2
PxNmwF/7P8np4VLA3AHvoYBsccAx8frpc/BVwOk5Xq6/VWzAuVArWzyiWcAi
tiTmALpmwLpZtkZOX1PAWq9/CPT/a8CUol+z1vBNwHwWUcgi2GnA8lhA8Q27
U8BMAVfHfKlvwPjFLun9rlDAivY7Zl9TcsDI2kMEFQ1QwNbE/tg1ZWXA1Jtc
dMJQUsBT9DKovlNpwFS3Yj2Qz1XArFXTKJZ7bMD7+MfmxR5WwEMKs+2hBXDA
pgnJ+9UgVsBqspC8fO1pwIv+GEihnVTAzGOrovyEZ8BQX7tmqUBSwDP1e7c=

      "]]}, 
    {RGBColor[0, 1, 1], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-221.53046701138618`, -57.172124256485816`}, \
{-221.7645460639708, -54.8983938263956}, {-222.67489274776312`, \
-46.35108279943446}, {-248.63220228263168`, -54.74514850066659}, \
{-230.7770814181923, -49.32581223853114}, {-215.55475569026677`, \
-35.326232629901014`}, {-209.62750232424554`, -74.49156997984105}, \
{-245.94075608267133`, -73.2630025737791}, {-213.39715603253765`, \
-31.219167576944418`}, {-251.22200822252267`, -72.26481151049572}, \
{-224.3551391037423, -59.077323761991224`}, {-251.68401343207304`, \
-74.88494758670822}, {-227.2305269835181, -72.92447721554751}, \
{-206.48526701632755`, -47.28292149629077}, {-216.6828824006568, \
-73.20505617648713}, {-233.38215513643823`, -51.81546148783096}}]}, 
    {RGBColor[1, 0.5, 0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAAFn1TDJLGa8DQdr51FU0QQMNCpTpH
NHPA7rAhT0aOM8BaEIv0Fv5wwHT/ox0yRTjAAacCTG9iccB4H2zFVtsvwGPA
2O2LJ3TAfhGu7D7sOMAvWuFn2kV2wAjKNABbu0TAYBDIfOASccDtuKHzwlw9
wCgXVzFvw3HAPQE//a8aPcAj4vw1RKJ1wNu11FWmi0bAVWkc3yovcMBSM+cL
NfgzwGVaB5UoLHTAobSo8Ly3McCAFW6TdIh0wISxNBu58TvAyKk4GcvBdsAA
7UA+Tu9DwHidQHppXm3ADJ/g2/fHOsDuQt087ZxwwMBaCkC3Lfk/RvTLB6lX
dsAuKyaS2IFHwIjSiuilzXLAPE6ke9H4IsBp8dPf3Gh1wG7tKLSzL0fAJQjb
WuLjb8D0CYu2u6MywECDOcH/dXDAyh9b/FaRRUDIYmDS40lxwBJLKbc/PzXA
JMcOprpbdcBglkpdSlnoPzCO6MoB7nTALx+zor13MsBxyb6vKElzwBYFHh0z
WTnAyykEjmC4Y8ASuLnOEw1TwAmYQK+jmGXA5mO9knA7VcCAxZNMMIBqwIqn
V5ggRlLAwj+gxGACZcDIsy5IhvpVwOfAWofkWmbA6y01+AMuVMDsN4da2hFq
wGLKFj96K1PAFKbzCTLvYMCSqKF//MkzwL9uKY3b12fA2N1U85f6UsDHJ69p
VIFTwJiz5lXaSinAKSVO5TiOZsASgA6eFNRTwCmG5OVG7WfATADnN1CIUMAl
oSDgWphhwLRhgbR0G0PAtYOH8UCiZMCNlItcGKVQwJY9fBoNKWbAtCJ1lBKU
UMD1QqyA+AVmwCGyTgTHqlXAFxYg9U09ZcBmURH8liRTwJvamyeiwWnAt4YW
zBMCVsBH5nSpwFhlwNR/oIl5H1PAmp3D9u/+ZMDLLcKySQlSwGcEEen5oWPA
t2yV5Rh6UsCQmGkKvYlowIQkbZmapFLANY5EFyjMW8CwBU4UsTs0wGRfWOpB
r2XAl4QJs8/HVcAcCPdPl/xhwAMt/jC4XUnA+3C0AaABacBu8ovjWuJVwBzT
i2E=
      "]]}, 
    {RGBColor[1, 1, 0], PointSize[0.02], AbsoluteThickness[1.6], 
     PointBox[{{-180.16552826851282`, -62.263050143165025`}, \
{-161.28906224331115`, -52.34102590416677}, {-213.21173610058418`, \
-65.32553276555163}, {-175.56610201102927`, -68.43571499403738}, \
{-193.00227580003778`, -56.98294039264373}, {-194.0939329068027, \
-53.817667619907965`}, {-231.14647537027923`, -57.071186209122104`}, \
{-108.79826571867693`, -46.50225345597163}, {-161.4815899565836, \
-80.59076774545271}, {-161.24296091969765`, -81.05548457079259}, \
{-192.00671983523748`, -78.13072829674576}, {-210.64767007961535`, \
-84.65332440524296}, {-197.7654087682738, -80.44999815430643}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-38.87777240258997, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-407.3224753365052, -46.39705205430252}, {-104.44060374288708`,
    125.55968953830839`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9062130515592537`*^9, 3.9062130666593313`*^9}, {
   3.906213138332141*^9, 3.906213192007258*^9}, 3.906213240337636*^9, 
   3.9062135958203783`*^9, 3.906213841463469*^9, 3.906213899449459*^9, 
   3.906214578591296*^9, 3.9062157227116623`*^9, 3.906224804388811*^9, 
   3.906226626154619*^9, 3.906227366208997*^9, 3.906227922055966*^9, 
   3.906229070336219*^9, 3.9086291495398417`*^9, 3.9086292935792847`*^9, 
   3.9086294855685043`*^9, 3.908629570258325*^9, 3.9086347514503813`*^9, 
   3.908634857272665*^9, 3.9086349709900618`*^9, 3.908635584623761*^9, 
   3.9086380815689297`*^9, 3.908638222841168*^9, 3.908638271623929*^9, 
   3.908638384368143*^9, 3.908638493703884*^9, 3.908638574900817*^9, 
   3.908638637779344*^9, 3.90863918877915*^9, 3.9086392937141314`*^9, 
   3.908639343031014*^9, {3.9086393969681673`*^9, 3.908639414181576*^9}, 
   3.908639475816539*^9, 3.908639730014153*^9, 3.908640102692771*^9, 
   3.908640154762972*^9, 3.90864021568652*^9, 3.908641344338049*^9, 
   3.90864141515009*^9, 3.9086415895042677`*^9, 3.9086416237988453`*^9, 
   3.9086416751215897`*^9, 3.908641762019237*^9, 3.908641972583618*^9, 
   3.908642800724531*^9, 3.908642863277714*^9, 3.908643398950858*^9, 
   3.9086436738200283`*^9, 3.908643737244342*^9, 3.908646032288904*^9, 
   3.908646116912348*^9, 3.908646179995343*^9, 3.90864623141619*^9, 
   3.9086466141398363`*^9, 3.908646692634647*^9, 3.9086467716045017`*^9, 
   3.9086469581462584`*^9, 3.9086470031298313`*^9, 3.908647215829756*^9, 
   3.9086472894384747`*^9, 3.908647739697064*^9, {3.908647794331923*^9, 
   3.908647820098221*^9}, {3.9086480245183*^9, 3.9086480334985743`*^9}, {
   3.9086481216018877`*^9, 3.908648150628964*^9}, 3.908648321591537*^9, 
   3.908648436717147*^9, 3.9086485065086403`*^9, 3.908648742708947*^9, 
   3.908648822457141*^9, 3.908649536665491*^9, 3.908649679608062*^9, 
   3.908650164558803*^9, 3.908650219229965*^9, 3.908650372133815*^9, 
   3.908650412993517*^9, 3.908650765934984*^9, 3.9086511221767683`*^9, 
   3.908651242506768*^9, 3.90865142156325*^9, 3.908651476338215*^9, 
   3.908651721994928*^9, 3.9086539729453697`*^9, 3.9087095475206223`*^9, 
   3.908725267768412*^9, 3.908894125362636*^9, 3.909071126985029*^9, 
   3.90907197562882*^9, 3.9090721268777657`*^9, 3.909072291049686*^9, 
   3.909072378243609*^9, 3.909072638629183*^9, 3.909074821032898*^9, 
   3.909074874038341*^9, 3.909077402078017*^9, 3.909079556000084*^9, 
   3.909154651015345*^9, 3.909224915101777*^9, 3.909225076116543*^9, 
   3.909227476640078*^9, 3.909229345117036*^9, 3.9092302499170837`*^9, 
   3.90924370863011*^9, 3.909489711840227*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"248db0d5-72a7-4013-a5c8-49b3e4c7db6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"r", "=", "1"}], ",", 
    RowBox[{"r", "<=", "nC"}], ",", 
    RowBox[{"r", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"auxGB", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "i", ",", "1", ",", "3"}], "]"}], "]"}]}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"aux", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"lf", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "1", ",", "nC"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"COL", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "11"}], "}"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.906213001759775*^9, 3.90621301673643*^9}, {
   3.906213202419537*^9, 3.906213234454795*^9}, 3.906213448685424*^9, {
   3.908639486630927*^9, 3.908639489616702*^9}, {3.908647838262442*^9, 
   3.908647841826652*^9}, {3.908648174686203*^9, 3.908648187962133*^9}, {
   3.909071980990038*^9, 3.909071981102585*^9}, {3.909072320983275*^9, 
   3.90907232108902*^9}, {3.909074854764702*^9, 3.909074864369454*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"0ce503a5-6ad7-4365-9902-e32247231697"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[1, 0, 0], PointSize[0.02], 
      Point3DBox[{-188.44756811818223`, -8.063857204744405, \
-11.003642062298916`}], 
      Point3DBox[{-210.73143689979133`, -26.576690805571687`, 
       7.98495701451408}], 
      Point3DBox[{-201.97074709714047`, -59.04283042993713, \
-4.7930522489346}], 
      Point3DBox[{-152.1303587177982, -23.398714692702114`, 
       13.417294360196152`}], 
      Point3DBox[{-210.98609732503985`, -11.303546832692085`, \
-48.451631138502776`}], 
      Point3DBox[{-107.95295435514498`, 
       29.886966728686176`, -19.965637152742453`}], 
      Point3DBox[{-75.1936561409991, -4.244227045646284, -58.44392494791589}],
       Point3DBox[{-167.6991337113033, 
       7.389494243893397, -55.67789178371593}], 
      Point3DBox[{-173.45258934627373`, -28.58173401843943, \
-66.31822400755823}], 
      Point3DBox[{-94.10503972032289, 
       38.3259955038514, -18.397350986538196`}], 
      Point3DBox[{-206.68729437096937`, -94.19285349494123, \
-100.16513754785588`}], 
      Point3DBox[{-136.21807237770273`, -38.00152183849002, \
-76.70061667941147}], 
      Point3DBox[{-139.7458374221746, -42.477866438993956`, \
-80.31580115021043}], 
      Point3DBox[{-194.8784009367569, -51.22693783174442, \
-60.45984569855768}]}, 
     {RGBColor[0, 0, 1], PointSize[0.02], 
      Point3DBox[{-359.55878155932555`, -27.6461845673344, 
       5.487266557735566}], 
      Point3DBox[{-335.3695782690369, -17.644252045821364`, 
       11.091545270909002`}], 
      Point3DBox[{-368.4608506915068, -41.468753505234154`, 
       12.707466077765176`}], 
      Point3DBox[{-363.38615221066, -30.11906120537357, 7.954052513877741}], 
      Point3DBox[{-308.3304320253118, -17.881486948431167`, 
       11.100629681145463`}], 
      Point3DBox[{-335.7402862703916, 
       5.373725558382052, -38.289201839677325`}], 
      Point3DBox[{-183.57964598083217`, -52.96759332987566, 
       8.358892406772704}], 
      Point3DBox[{-216.3774442107417, -34.474286375196804`, 
       14.800808248785586`}], 
      Point3DBox[{-185.95665211945524`, -50.99380164858958, 
       9.372054650380079}], 
      Point3DBox[{-118.53993536110076`, -31.087276961597418`, 
       13.642195026943842`}], 
      Point3DBox[{-173.8697134339332, -29.447450759382424`, 
       7.806872022020762}], 
      Point3DBox[{-175.85159631605444`, -45.41552362281889, 
       4.613615688371837}], 
      Point3DBox[{-237.13920791640746`, -48.481450669549176`, 
       11.269107699942666`}], 
      Point3DBox[{-297.5326768268791, -22.891607982570207`, 
       8.173610835448507}], 
      Point3DBox[{-348.42278736054544`, -18.50390266010021, 
       3.689891156902547}]}, 
     {RGBColor[0, 1, 0], PointSize[0.02], 
      Point3DBox[{-389.8500109659264, -41.29856824569325, \
-1.8671644179592306`}], 
      Point3DBox[{-370.1142126327404, -39.95999950519476, 
       2.6599424472963875`}], 
      Point3DBox[{-366.873216146172, -43.66543467772634, 0.827445471204399}], 
      Point3DBox[{-389.3500818091384, -33.149841344863646`, \
-0.7092498470645126}], 
      Point3DBox[{-407.3224753365052, -55.81828349212823, 
       1.7952466574485442`}], 
      Point3DBox[{-388.37908000838627`, -39.90715832823946, 
       1.6738295581974825`}], 
      Point3DBox[{-386.0539822082776, -36.45632803639215, \
-0.5989203510718113}], 
      Point3DBox[{-392.85414423711694`, -54.83355428335854, 
       1.5046768279848521`}], 
      Point3DBox[{-395.77612791751693`, -35.461399787775974`, \
-12.82510921378696}], 
      Point3DBox[{-396.7456850587528, -54.65133091461297, 5.492970124607297}],
       Point3DBox[{-349.3554208581331, -20.254966063395678`, 
       3.112275641698261}], 
      Point3DBox[{-399.0608971915095, -48.75448685549034, \
-3.3905549780651256`}], 
      Point3DBox[{-373.84895671884453`, -35.60519118946491, 
       3.255174843379436}], 
      Point3DBox[{-332.92057429215794`, -12.158967426402768`, \
-3.7773818835826205`}], 
      Point3DBox[{-355.41151543637386`, -30.39762033252943, \
-3.0154228807250263`}]}, 
     {RGBColor[0.6, 0.4, 0.2], PointSize[0.02], 
      Point3DBox[{-109.6330963680091, 31.965667813611432`, 
       13.30209464361246}], 
      Point3DBox[{-86.71417506051446, 20.272768231150422`, 
       13.286201564220214`}], 
      Point3DBox[{-144.76492347156426`, 36.7078972989567, 18.33282035450148}],
       Point3DBox[{-124.28351392874498`, 0.5627074151273881, 
       4.380557480661338}], 
      Point3DBox[{-120.3410771227785, 3.050625892168128, 8.458584094048447}], 
      Point3DBox[{-123.62297334613457`, -0.952092263459182, 
       5.002435994310147}], 
      Point3DBox[{-83.56303037065862, -1.1903720879419968`, 
       2.1734570776918467`}], 
      Point3DBox[{-112.28094777774041`, 18.785188313660356`, 
       13.850671039402588`}], 
      Point3DBox[{-105.12097979241963`, 35.37611977995862, 
       16.771708105708488`}], 
      Point3DBox[{-125.09871589752672`, 26.948220333078456`, 
       17.489574621219557`}], 
      Point3DBox[{-86.10776866590807, -1.2173120147418093`, \
-10.812622326400884`}], 
      Point3DBox[{-79.38071222520264, 22.840241663848335`, 
       3.7415326566877276`}], 
      Point3DBox[{-121.8789801693121, 8.448179225685037, -7.456878300004302}],
       Point3DBox[{-153.52814158685263`, 29.33901021410643, 
       19.831952001740184`}], 
      Point3DBox[{-90.02019985207865, 9.791139952106432, 
       4.9921245078176035`}], 
      Point3DBox[{-75.53242726332016, 25.28369762224655, 
       11.783240159453014`}], 
      Point3DBox[{-144.82116659814304`, 28.54504531528292, 
       18.754668132703333`}], 
      Point3DBox[{-114.77842873967376`, 22.880191161154457`, 
       3.185222266566317}], 
      Point3DBox[{-125.89373391331567`, 30.51024827420975, 
       12.228848874485738`}], 
      Point3DBox[{-104.57088541430112`, 17.63875721396067, 
       17.003403568741717`}], 
      Point3DBox[{-81.56028406315676, 21.849970288575445`, 
       2.3911540607031725`}], 
      Point3DBox[{-75.32313773917924, 21.427491445377918`, 8.85897653801237}],
       Point3DBox[{-214.5501890712764, -31.69324901625555, 
       6.894873843262587}], 
      Point3DBox[{-154.9099864385594, -65.64991351727032, \
-4.296704468467897}], 
      Point3DBox[{-172.00074192645127`, -32.947500081883845`, 
       8.655222129386075}], 
      Point3DBox[{-126.48635866284448`, -28.750336706921928`, 
       9.389393796216037}], 
      Point3DBox[{-204.19888191882114`, -48.69951767806377, 
       0.3523205758467114}], 
      Point3DBox[{-209.24569899367125`, -63.593704977073116`, \
-1.4653786300401919`}], 
      Point3DBox[{-157.85312442007054`, -80.52193975992085, \
-9.204854679792902}], 
      Point3DBox[{-169.04770878524792`, -40.74679329725362, 
       7.207098758411082}], 
      Point3DBox[{-153.0130308346379, -70.43668641703724, \
-5.941377141221331}], 
      Point3DBox[{-154.9675091981387, -81.622732658866, -9.778828154763353}], 
      Point3DBox[{-115.78172481780418`, -2.3177102265953913`, 
       15.523841588625558`}], 
      Point3DBox[{-172.94972633191986`, -54.289594342799, 3.116654269857179}],
       Point3DBox[{-144.45187601074338`, -43.2338160137424, 
       3.08598278728703}], 
      Point3DBox[{-174.3690150363919, -76.95410070522406, \
-12.118911117507004`}], 
      Point3DBox[{-160.63161160388842`, -44.93683499359351, 
       5.434625667610209}], 
      Point3DBox[{-143.87919823319382`, -72.65948304420417, \
-6.559714539392957}], 
      Point3DBox[{-91.79500326852471, -8.857334372771277, 
       11.121955651856885`}], 
      Point3DBox[{-164.4863324208211, -57.873893937981265`, 
       0.7739473046935963}], 
      Point3DBox[{-132.8016149745568, -47.43511524115929, 
       1.6929452818904593`}], 
      Point3DBox[{-165.49901832670918`, -80.26535540418841, \
-12.944658991411785`}], 
      Point3DBox[{-176.44420263327035`, -60.81673375169838, \
-0.5433492464446772}], 
      Point3DBox[{-158.22882441748504`, -73.91736630064837, \
-1.3663929156374799`}]}, 
     {GrayLevel[0], PointSize[0.02], 
      Point3DBox[{-95.63193682741314, 3.220826590659332, 
       3.5170644444710675`}], 
      Point3DBox[{-118.67181277436046`, -7.668148915958302, \
-6.667346911303774}], 
      Point3DBox[{-126.25871914890558`, 
       2.523937796462535, -11.695139032631484`}], 
      Point3DBox[{-197.7171089042311, -10.486586226209658`, \
-6.707812210178801}], 
      Point3DBox[{-141.5064844040778, -9.27213768871013, 0.9641335682744341}],
       Point3DBox[{-154.119526736473, -34.88655064518251, 
       0.9968841316312833}], 
      Point3DBox[{-188.55247990013146`, -33.385126984015606`, \
-2.4108878809733696`}], 
      Point3DBox[{-165.73094936607256`, -18.314713500035637`, \
-1.5602413714893402`}], 
      Point3DBox[{-132.05290907798627`, -2.8279517812162442`, 
       0.2425092053651312}], 
      Point3DBox[{-139.877297549656, -3.9735195134784824`, \
-6.987152780655496}], 
      Point3DBox[{-137.00900873773216`, -18.38496083709074, 
       1.6187569393836547`}], 
      Point3DBox[{-172.4575351960396, -18.691415614837297`, \
-3.311417710053867}], 
      Point3DBox[{-149.22601685102472`, -15.121884105909855`, \
-5.842549901253566}], 
      Point3DBox[{-169.24324883827552`, -79.26120712688014, \
-14.085063600646905`}], 
      Point3DBox[{-241.10428421205148`, -85.09468894900245, \
-6.152201889880928}], 
      Point3DBox[{-197.39111867202465`, -72.46255036772818, \
-14.558214666644275`}], 
      Point3DBox[{-149.6208287256356, -8.188250818711884, \
-3.255512167000365}], 
      Point3DBox[{-176.03480155303438`, -87.06072329261521, \
-21.0268970902524}], 
      Point3DBox[{-186.02637280932186`, -72.44371339103655, \
-16.93255833752516}], 
      Point3DBox[{-222.12437331886252`, -59.55660578016162, \
-8.781165688094106}], 
      Point3DBox[{-174.763091434351, -75.46988223906196, \
-12.594398025134282`}], 
      Point3DBox[{-189.14834387494977`, -68.29519328181709, \
-12.602621586552349`}], 
      Point3DBox[{-148.89752320943063`, -65.72345514955107, \
-6.759158002793139}], 
      Point3DBox[{-210.37197507568715`, -85.58549849441503, \
-21.684315491404263`}], 
      Point3DBox[{-195.07962932922953`, -69.24257358336679, \
-15.555869386677585`}], 
      Point3DBox[{-233.97142595026827`, -63.809896295809736`, \
-12.190523325725643`}], 
      Point3DBox[{-212.8612824389105, -65.30481527715159, \
-13.045634169259962`}]}, 
     {RGBColor[1, 0.5, 0.5], PointSize[0.02], 
      Point3DBox[{-344.45402583049395`, 
       26.422752008549903`, -42.6086830096376}], 
      Point3DBox[{-248.554398858085, 
       110.03488795514487`, -30.361096031807264`}], 
      Point3DBox[{-278.19565490407206`, 
       12.87557583918423, -81.40846472788002}], 
      Point3DBox[{-278.85742198717696`, 
       45.227289996289116`, -36.774119229164015`}], 
      Point3DBox[{-165.75561417911905`, 
       61.388540213168355`, -39.78950786643964}], 
      Point3DBox[{-324.4940823270841, 49.1150294801865, -84.24010315382291}], 
      Point3DBox[{-221.03500557941524`, 
       42.71956070596134, -74.94726386574885}], 
      Point3DBox[{-288.0758821698719, 
       46.158744773629664`, -52.44614879245539}], 
      Point3DBox[{-273.128878093032, 
       125.55968953830839`, -12.114994262714426`}], 
      Point3DBox[{-295.254170601577, 
       16.194408524462183`, -110.45006516867947`}], 
      Point3DBox[{-343.55777589473286`, 
       11.53005134284222, -43.934844498444704`}], 
      Point3DBox[{-205.26515572416736`, 
       35.81464303339915, -79.85394488029277}], 
      Point3DBox[{-327.9580927727103, 40.67957257095482, -94.73492567411134}],
       Point3DBox[{-354.5917733591369, 
       23.05122311332356, -89.99488431219643}], 
      Point3DBox[{-160.90430568008048`, 
       14.905895890273818`, -65.32031962228737}], 
      Point3DBox[{-211.35652315909687`, -72.76180461906841, \
-5.48253234053665}], 
      Point3DBox[{-158.0199157670492, -65.97661078648633, \
-12.190013955648901`}], 
      Point3DBox[{-312.32019141305955`, -67.19544726082421, \
-32.15292567200533}], 
      Point3DBox[{-245.83382867324707`, -82.02748696355278, \
-20.74582496060544}], 
      Point3DBox[{-254.01124572722608`, -62.79486069590175, \
-19.112471235365533`}], 
      Point3DBox[{-291.146448989081, -81.89784786969635, -20.82459544454467}],
       Point3DBox[{-244.58696911388046`, -104.44060374288708`, \
-25.048060369437554`}], 
      Point3DBox[{-239.68941518622478`, -102.19939778855985`, \
-24.769362870550218`}], 
      Point3DBox[{-213.7637862883763, -88.75162796456497, \
-15.223906239422512`}], 
      Point3DBox[{-239.14582953648164`, -73.41963786901832, \
-15.563933692546037`}], 
      Point3DBox[{-277.20429346199904`, -85.2870329974547, \
-22.357505268151485`}], 
      Point3DBox[{-212.80614307533378`, -87.81388277041366, \
-14.929995023320089`}], 
      Point3DBox[{-251.62475921494755`, -87.11353448145852, \
-4.8740162835309135`}], 
      Point3DBox[{-238.50298136549796`, -92.73494843336132, \
-14.777088437459312`}], 
      Point3DBox[{-295.78162270147493`, -72.16556788595577, \
-8.102282322451224}], 
      Point3DBox[{-253.42535126428373`, -92.9954780414754, \
-10.060234399677988`}], 
      Point3DBox[{-254.5620994725045, -87.40687162809273, \
-9.173055341307133}], 
      Point3DBox[{-269.29440369264177`, -89.04935364774256, \
-9.243117250081845}]}, 
     {GrayLevel[0.5], PointSize[0.02], 
      Point3DBox[{-130.0665877126009, 34.00682870631243, -53.08729433679688}],
       Point3DBox[{-46.39705205430252, 
       11.240573182811186`, -32.294201952464306`}], 
      Point3DBox[{-182.58817843198105`, -9.382588336850336, \
-77.97452970404008}], 
      Point3DBox[{-186.62944777799243`, -5.751924696204313, \
-67.87288645061898}], 
      Point3DBox[{-67.34613735425226, -10.779596211909816`, \
-31.669904333226324`}], 
      Point3DBox[{-187.7812308209132, -3.452510170343306, -95.0892077751084}],
       Point3DBox[{-117.95713797531714`, 
       39.56884374861565, -53.34341682137516}], 
      Point3DBox[{-77.02641012037019, 
       11.817463427411088`, -55.245291290144515`}], 
      Point3DBox[{-94.19363933830951, 
       4.7658270943290955`, -48.69604987297518}], 
      Point3DBox[{-163.43591848451138`, 
       29.424010844098326`, -67.32831060244168}], 
      Point3DBox[{-69.74518294803332, 
       14.430368249243434`, -24.066597755946464`}], 
      Point3DBox[{-52.82690925135387, 
       6.1251774602867135`, -6.259637848053309}], 
      Point3DBox[{-155.7325261616823, -73.13196947651764, \
-17.169316210255957`}], 
      Point3DBox[{-83.62427048858136, -19.435659642603444`, \
-18.23275010120193}]}, 
     {RGBColor[1, 0, 1], PointSize[0.02], 
      Point3DBox[{-354.2535095680039, -20.674091444318965`, 
       4.091690314217942}], 
      Point3DBox[{-295.3744210987292, 
       1.9084377902701917`, -42.470319276947365`}], 
      Point3DBox[{-292.1937117187399, -9.452244662829905, 8.932987920204667}],
       Point3DBox[{-324.9941120968298, -18.239962295406166`, \
-21.04482544280725}], 
      Point3DBox[{-339.78744409191995`, -30.279086944261913`, 
       3.882111746126455}], 
      Point3DBox[{-247.44240325897638`, -7.193136662809788, \
-20.556022833359776`}], 
      Point3DBox[{-360.3890706441214, -19.109502948805144`, 
       6.846314167756958}], 
      Point3DBox[{-336.1520321048893, -21.667910435929812`, 
       11.263912124641891`}], 
      Point3DBox[{-293.6123818351604, -4.767265873895674, 
       0.8166351599257382}], 
      Point3DBox[{-307.14688161306, -15.897898954370529`, 8.359757156393329}],
       Point3DBox[{-279.25637383901056`, -6.0933491551190855`, 
       8.515156714620225}], 
      Point3DBox[{-328.59920495301947`, -23.32422732012749, \
-1.9591068210385316`}], 
      Point3DBox[{-317.2012781895216, -1.1224323587385712`, \
-8.06207974156618}], 
      Point3DBox[{-327.6832449093862, -21.40267100794167, 
       5.9885469939379306`}], 
      Point3DBox[{-324.3514982466569, -15.174326035109214`, 
       2.605707465430825}], 
      Point3DBox[{-259.6281585364868, -0.9556501042572698, \
-14.32534876900062}], 
      Point3DBox[{-310.8166466384285, -21.414482542495563`, 
       8.080091918449611}], 
      Point3DBox[{-330.1662303711737, -25.046624363146158`, 
       3.592180640886184}], 
      Point3DBox[{-231.12935673829548`, -4.694044672781224, 
       13.736825410437632`}], 
      Point3DBox[{-257.14629460914176`, -1.1920606919312249`, 
       8.437011728456831}], 
      Point3DBox[{-297.45613645358543`, -10.963497564453672`, 
       4.418714499061949}], 
      Point3DBox[{-334.02027395675407`, -21.433837823639482`, 
       5.590758932219728}], 
      Point3DBox[{-288.0185036320065, -13.360167866591539`, 
       5.247175415019271}], 
      Point3DBox[{-340.57479476475874`, 
       57.221421214368284`, -36.59862775977539}], 
      Point3DBox[{-338.7257018050969, -19.1230730015503, 4.481707496414572}], 
      Point3DBox[{-356.08955542361633`, -24.34413804119947, 
       4.440329440018743}], 
      Point3DBox[{-190.65368424830393`, -76.76471839521825, \
-20.31834154700339}], 
      Point3DBox[{-248.98609340330586`, -33.27802112590888, 
       4.3233738487032625`}], 
      Point3DBox[{-231.38879642905098`, -56.68386104439996, \
-1.8031699421053418`}], 
      Point3DBox[{-231.77884555177133`, -93.48005158018286, \
-21.660931440309497`}], 
      Point3DBox[{-252.09934327974568`, -62.64643130150813, \
-6.670972159515671}], 
      Point3DBox[{-203.81009131249223`, -75.91310161305384, \
-9.419036375802364}], 
      Point3DBox[{-176.6015272295162, -75.52989417312845, \
-16.990524120696147`}], 
      Point3DBox[{-278.7814044319364, -87.75707482820577, \
-25.49939556109694}], 
      Point3DBox[{-226.67964857486302`, -102.53493384580624`, \
-15.632870774575593`}], 
      Point3DBox[{-181.8126097409268, -77.48915260131517, \
-10.282992666388225`}], 
      Point3DBox[{-223.99853920877905`, -59.88155214471513, \
-5.142946043340977}], 
      Point3DBox[{-206.7542459090945, -78.92272597583704, \
-18.234744459745812`}], 
      Point3DBox[{-253.29648177140405`, -66.73424748962123, \
-8.381524472749327}], 
      Point3DBox[{-293.210790857535, -64.2044077551501, \
-36.298591087903304`}], 
      Point3DBox[{-171.1628231979327, -73.26186856311625, \
-14.838452742219793`}], 
      Point3DBox[{-202.61702356292753`, -87.24317869796988, \
-23.496707000135657`}], 
      Point3DBox[{-227.8620800140028, -88.48082894829342, \
-29.974931213007373`}], 
      Point3DBox[{-256.3520333284143, -88.51306051857554, \
-21.74907832743508}], 
      Point3DBox[{-207.42147663365478`, -82.46296884957171, \
-25.737418532860843`}], 
      Point3DBox[{-188.15583928560807`, -73.01033943460538, \
-14.661599647908162`}]}, 
     {RGBColor[0, 1, 1], PointSize[0.02], 
      Point3DBox[{-221.53046701138618`, -57.172124256485816`, \
-0.7052483083444088}], 
      Point3DBox[{-221.7645460639708, -54.8983938263956, \
-2.5168605791694603`}], 
      Point3DBox[{-222.67489274776312`, -46.35108279943446, \
-1.4958603050871488`}], 
      Point3DBox[{-248.63220228263168`, -54.74514850066659, \
-1.762068078370227}], 
      Point3DBox[{-230.7770814181923, -49.32581223853114, 
       0.061162864335749134`}], 
      Point3DBox[{-215.55475569026677`, -35.326232629901014`, \
-2.4493248348545578`}], 
      Point3DBox[{-209.62750232424554`, -74.49156997984105, \
-3.2686714437109288`}], 
      Point3DBox[{-245.94075608267133`, -73.2630025737791, \
-3.2878822668450525`}], 
      Point3DBox[{-213.39715603253765`, -31.219167576944418`, 
       7.579783757215324}], 
      Point3DBox[{-251.22200822252267`, -72.26481151049572, \
-2.4992783907181177`}], 
      Point3DBox[{-224.3551391037423, -59.077323761991224`, \
-2.411335459891518}], 
      Point3DBox[{-251.68401343207304`, -74.88494758670822, \
-7.967272152794649}], 
      Point3DBox[{-227.2305269835181, -72.92447721554751, -8.56430611288539}],
       Point3DBox[{-206.48526701632755`, -47.28292149629077, \
-12.187498255339854`}], 
      Point3DBox[{-216.6828824006568, -73.20505617648713, \
-10.709479336139431`}], 
      Point3DBox[{-233.38215513643823`, -51.81546148783096, \
-8.177143818403884}]}, 
     {RGBColor[1, 0.5, 0], PointSize[0.02], 
      Point3DBox[{-222.20532814318057`, 4.075277175664908, 
       1.7618820550405019`}], 
      Point3DBox[{-307.26738991312976`, -19.55576033184564, 
       0.09692217041354922}], 
      Point3DBox[{-271.8806043083365, -24.27029595617155, 6.211693119380982}],
       Point3DBox[{-278.15217209850385`, -15.928396386574363`, 
       7.221715925698419}], 
      Point3DBox[{-322.4716623751503, -24.922835152146483`, 
       4.610073523763219}], 
      Point3DBox[{-356.36582172420725`, -41.463714624191255`, 
       1.4503440111750905`}], 
      Point3DBox[{-273.1798065009116, -29.362349726660728`, 
       9.697098034178211}], 
      Point3DBox[{-284.2146466638537, -29.104247882730522`, 
       5.3490034004276055`}], 
      Point3DBox[{-346.14165304930265`, -45.09101364980935, 
       1.3729634059671554`}], 
      Point3DBox[{-258.94796668146347`, -19.96955942530196, 
       6.6074583936683595`}], 
      Point3DBox[{-322.7599077498656, -17.717726746738325`, 
       4.838050703152035}], 
      Point3DBox[{-328.5284609127193, -27.944230747570614`, 
       7.4278463977586995`}], 
      Point3DBox[{-364.1120845998198, -39.869575292303125`, 
       4.1452887460564085`}], 
      Point3DBox[{-234.95037567730083`, -26.78112577661436, \
-0.8814497607116891}], 
      Point3DBox[{-265.8079193728471, 1.5736610890941591`, 
       18.981145603896806`}], 
      Point3DBox[{-357.4787672011338, -47.01442171920495, 9.341725496114208}],
       Point3DBox[{-300.8530049727201, -9.485973228270375, 
       14.693661464316008`}], 
      Point3DBox[{-342.5539243964218, -46.37267162321483, 
       6.9239613454447095`}], 
      Point3DBox[{-255.12138121394779`, -18.63958302397255, 
       3.5865327300503225`}], 
      Point3DBox[{-263.37494013276955`, 
       43.13546709489272, -4.000495476543321}], 
      Point3DBox[{-276.61812055254677`, -21.247065970975264`, 
       4.571786310247049}], 
      Point3DBox[{-341.73306852123847`, 
       0.7608997175309007, -2.309214214154011}], 
      Point3DBox[{-334.87543764917336`, -18.467737358790313`, \
-3.5006029203076565`}], 
      Point3DBox[{-308.5724332287419, -25.34843618376643, 7.283903057068187}],
       Point3DBox[{-157.76178646863113`, -76.20433395516037, \
-6.363747951983289}], 
      Point3DBox[{-172.76998102775568`, -84.92874592299594, \
-9.844848485389402}], 
      Point3DBox[{-212.00589588986986`, -73.09573944625859, \
-11.840815087969261`}], 
      Point3DBox[{-168.07431250857013`, -87.91444592057007, \
-7.755116008693399}], 
      Point3DBox[{-178.84039657330797`, -80.71899228280351, \
-5.236929725565556}], 
      Point3DBox[{-208.55790449533322`, -76.67933633065834, \
-10.05008576855456}], 
      Point3DBox[{-135.47485826099057`, -19.789009072272684`, \
-5.003760187548139}], 
      Point3DBox[{-190.74555070965104`, -75.91552432334663, \
-10.075991281785505`}], 
      Point3DBox[{-78.02077715020197, -12.64619701806241, \
-2.918554217000528}], 
      Point3DBox[{-180.44444527876593`, -79.31375838676493, \
-6.1865429197588}], 
      Point3DBox[{-191.41490454324347`, -66.12989614065845, \
-13.092213621602255`}], 
      Point3DBox[{-140.76109320042556`, -38.214499056982646`, 
       6.979667428232414}], 
      Point3DBox[{-165.07042767017052`, -66.57961190825354, \
-10.112331390657001`}], 
      Point3DBox[{-177.2828495432447, -66.3136340278532, -9.471498597556874}],
       Point3DBox[{-176.1865847935184, -86.66839702305926, \
-3.746698486910688}], 
      Point3DBox[{-169.91576629893163`, -76.57171537104804, \
-2.867572062290666}], 
      Point3DBox[{-206.05104427757473`, -88.03245832633807, \
-6.882182295644455}], 
      Point3DBox[{-170.77351830322206`, -76.49179306672823, \
-4.590107766398255}], 
      Point3DBox[{-167.96679247099092`, -72.1451231857565, \
-1.378595618984832}], 
      Point3DBox[{-157.06175664256736`, -73.90776958076718, \
-2.6060812995371485`}], 
      Point3DBox[{-196.30432625412186`, -74.5719359937521, \
-6.297281409509807}], 
      Point3DBox[{-111.1899469537246, -20.23317076592292, \
-6.237372794926539}], 
      Point3DBox[{-173.47679631481435`, -87.12205196313367, \
-8.928632367086834}], 
      Point3DBox[{-143.89347074745535`, -50.73218357478074, \
-9.770984764768698}], 
      Point3DBox[{-200.05078206293533`, -87.53679741541575, \
-7.7840897416475485`}]}, 
     {RGBColor[1, 1, 0], PointSize[0.02], 
      Point3DBox[{-180.16552826851282`, -62.263050143165025`, \
-0.6441155048792737}], 
      Point3DBox[{-161.28906224331115`, -52.34102590416677, \
-0.671458827329797}], 
      Point3DBox[{-213.21173610058418`, -65.32553276555163, -6.539284617541}],
       Point3DBox[{-175.56610201102927`, -68.43571499403738, \
-8.694517990011725}], 
      Point3DBox[{-193.00227580003778`, -56.98294039264373, \
-3.929891334342095}], 
      Point3DBox[{-194.0939329068027, -53.817667619907965`, \
-3.1503523846116295`}], 
      Point3DBox[{-231.14647537027923`, -57.071186209122104`, \
-18.639366904757743`}], 
      Point3DBox[{-108.79826571867693`, -46.50225345597163, \
-0.9701060127832868}], 
      Point3DBox[{-161.4815899565836, -80.59076774545271, \
-9.068486766725194}], 
      Point3DBox[{-161.24296091969765`, -81.05548457079259, \
-8.395532285232036}], 
      Point3DBox[{-192.00671983523748`, -78.13072829674576, \
-9.583118262265309}], 
      Point3DBox[{-210.64767007961535`, -84.65332440524296, \
-16.101484864472717`}], 
      Point3DBox[{-197.7654087682738, -80.44999815430643, \
-6.066347504004732}]}, 
     {RGBColor[1, 0, 0], PointSize[0.02], 
      Point3DBox[{-222.26413681432382`, -106.41129065011174`, \
-22.269449551048112`}], 
      Point3DBox[{-233.34630786895494`, -105.0341102309592, \
-16.76300415803255}], 
      Point3DBox[{-234.21677908485722`, -106.74247185769772`, \
-20.015142815038597`}], 
      Point3DBox[{-249.8024470272459, -101.29716942597739`, \
-29.30957290708561}], 
      Point3DBox[{-209.71500980994705`, -111.92577979072394`, \
-25.682779886598055`}], 
      Point3DBox[{-235.62658361890595`, -108.299949868074, \
-27.962454211220454`}]}, 
     {RGBColor[0, 0, 1], PointSize[0.02], 
      Point3DBox[{-207.36495428094378`, -89.80520764734275, \
-13.887515245801616`}], 
      Point3DBox[{-222.87257439281743`, -96.88363711059569, \
-19.97336781587069}], 
      Point3DBox[{-91.48242843143201, -18.024805497274652`, 
       8.50721648059593}], 
      Point3DBox[{-146.96240971871117`, -47.51645012469619, 
       6.88025259042475}], 
      Point3DBox[{-205.10716481326506`, -95.02944596485568, \
-15.23869689695439}], 
      Point3DBox[{-224.28432029249132`, -67.95556108986261, \
-1.0437174127802535`}], 
      Point3DBox[{-166.48692695907377`, -59.93306774534681, 
       1.5182224915425202`}], 
      Point3DBox[{-143.25489256088062`, -47.07957682807317, 
       7.08798273350947}], 
      Point3DBox[{-241.83273655074666`, -109.54340389786682`, \
-23.12656249245556}], 
      Point3DBox[{-95.80504491544362, -54.928470064802866`, 
       2.83001514257845}], 
      Point3DBox[{-164.23238437178378`, -50.681322010435345`, 
       5.398913863654162}], 
      Point3DBox[{-173.0974227924632, -44.76939917004709, 6.20819956014568}], 
      Point3DBox[{-123.7054988807013, -15.732307473246179`, 
       12.71097754499031}], 
      Point3DBox[{-225.21899050894464`, -73.04584168543413, \
-11.29153830468767}], 
      Point3DBox[{-221.20761127325517`, -87.13690107361015, \
-15.408901158667177`}], 
      Point3DBox[{-232.16779355251526`, -95.71548702777396, \
-15.615667631970766`}]}, 
     {RGBColor[0, 1, 0], PointSize[0.02], 
      Point3DBox[{-154.43006449707775`, -79.26879788274613, \
-10.365992933032658`}], 
      Point3DBox[{-192.58986857252592`, -79.53079216310354, \
-8.433653689590358}], 
      Point3DBox[{-157.87677063534713`, -87.62711987756808, \
-8.416635816404849}], 
      Point3DBox[{-153.56944860477947`, -32.082404919456955`, \
-11.17863120667733}], 
      Point3DBox[{-120.71371093631987`, -72.44173308924387, \
-9.50967134496587}], 
      Point3DBox[{-147.8424418399941, -73.68653976080586, \
-14.318595043460938`}], 
      Point3DBox[{-124.7188768869118, -79.24511586259284, -8.98755262668167}],
       Point3DBox[{-140.58773285036852`, -84.64012556461732, \
-9.619697853828885}], 
      Point3DBox[{-167.07979619836854`, -71.6980554492146, \
-9.830063654128125}], 
      Point3DBox[{-169.60372856223475`, -36.223436844525814`, 
       3.395913777911673}], 
      Point3DBox[{-146.329224053529, -82.21212545043481, \
-13.622571406105454`}], 
      Point3DBox[{-163.42276608637528`, -53.924944361291196`, 
       4.6710236485656225`}], 
      Point3DBox[{-185.03000193389147`, -75.52186918134865, \
-2.4172532208983313`}], 
      Point3DBox[{-101.46004465044516`, -68.05653986793301, \
-9.940622570613819}], 
      Point3DBox[{-162.68422812093706`, -46.652689091194674`, \
-10.961617346654421`}], 
      Point3DBox[{-93.57539066977262, -64.97854779745302, \
-9.271508910025647}], 
      Point3DBox[{-124.27338289983106`, -55.93716025414259, 
       0.06555704615393054}], 
      Point3DBox[{-179.57638686026831`, -81.42091939906128, \
-9.55619263077601}], 
      Point3DBox[{-226.03024149476158`, -87.22808849986674, \
-12.46381257048509}], 
      Point3DBox[{-79.11198876194682, -47.71793712525172, 
       1.4050799106874532`}], 
      Point3DBox[{-103.73363407722279`, -63.807068787325264`, \
-4.573491339307671}], 
      Point3DBox[{-163.0826498228492, -77.15941756769605, \
-14.731108188789392`}], 
      Point3DBox[{-181.57195636778954`, -87.41387893255596, \
-12.785272598366952`}], 
      Point3DBox[{-150.8789756870324, -89.57629417552664, \
-14.108974727736143`}], 
      Point3DBox[{-178.44612017866268`, -67.12071020039332, 
       3.0985547238632947`}]}, 
     {RGBColor[0.6, 0.4, 0.2], PointSize[0.02], 
      Point3DBox[{-197.4591794983891, -66.51814432961464, \
-5.239587853024773}], 
      Point3DBox[{-266.4140346301384, -92.46243640179536, \
-10.987538666560468`}], 
      Point3DBox[{-186.97387304014012`, -91.88515170913946, \
-9.588337679717714}], 
      Point3DBox[{-245.16598385383645`, -92.33455326625801, \
-16.495706639579367`}], 
      Point3DBox[{-203.11637501970137`, -91.3760199078739, \
-15.453232456200102`}], 
      Point3DBox[{-133.95782659639028`, -59.4839869657078, \
-5.047632367428388}], 
      Point3DBox[{-236.15657996952154`, -84.11518140243628, \
-12.359019397808865`}], 
      Point3DBox[{-204.01459674957312`, -69.6534895872425, \
-4.987148110779614}], 
      Point3DBox[{-202.0504046393357, -75.02470896486284, \
-6.027519119059789}], 
      Point3DBox[{-193.00738153486583`, -77.61862436126464, \
-8.775992893902135}], 
      Point3DBox[{-211.87355950367893`, -85.82293406649717, \
-17.211160879813583`}], 
      Point3DBox[{-249.78308504646353`, -76.83532528140027, \
-7.558478123352955}], 
      Point3DBox[{-177.02196052878134`, -62.59418722194915, \
-2.4384785260559596`}], 
      Point3DBox[{-253.81607548529783`, -73.70896067757604, \
-2.774796822210064}], 
      Point3DBox[{-237.0379609790843, -89.82992542533566, \
-28.698578748055397`}], 
      Point3DBox[{-176.10155313154524`, -73.65709308911492, \
-9.596690884373423}]}, 
     {GrayLevel[0], PointSize[0.02], 
      Point3DBox[{-201.93718137558056`, -66.0456205223151, \
-9.164524566901648}], 
      Point3DBox[{-152.03907153201436`, -47.07775507472269, 
       3.0277404212468397`}], 
      Point3DBox[{-186.11622852575005`, -64.32726426537572, \
-2.841365993783775}], 
      Point3DBox[{-238.75856473332888`, -34.11533572589066, \
-5.361677960107492}], 
      Point3DBox[{-199.53835679577554`, -69.41834360735561, \
-6.710514001047194}], 
      Point3DBox[{-197.55370863913026`, -75.09093203521508, \
-6.721813524426949}], 
      Point3DBox[{-210.5070366544194, -65.58966588888482, \
-4.3148963441007595`}], 
      Point3DBox[{-169.0610570699952, -52.17708094068662, \
-1.9777118145186634`}], 
      Point3DBox[{-138.79405107864477`, -81.61604618570769, \
-13.275615686138472`}], 
      Point3DBox[{-206.52360799828688`, -75.82491112088624, \
-10.338204348249157`}], 
      Point3DBox[{-169.45271337386998`, -62.38230359214503, \
-11.711697030934257`}], 
      Point3DBox[{-271.9872201222422, -74.3463628660789, -1.305422261154746}],
       Point3DBox[{-254.74605595834777`, -85.14228769070486, \
-14.30755317856002}], 
      Point3DBox[{-217.1261996477629, -52.20510363472391, \
-17.853926467778244`}], 
      Point3DBox[{-232.68899882854913`, -49.924323048919575`, 
       0.9396708167703594}], 
      Point3DBox[{-182.6823097215415, -59.469149167644694`, \
-4.4300286912256865`}]}}, {}, {}}, {}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{366.6836505558322, 292.1870248335114},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{All, All, All},
  PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.0907607896314702`, -2.5001463231145427`, 2.002375904474323},
  ViewVertical->{-0.03226723609159901, -0.014960862070941303`, 
   0.9993672988852013}]], "Output",
 CellChangeTimes->{
  3.906213018174905*^9, 3.9062130757495832`*^9, {3.906213205953195*^9, 
   3.9062132351052313`*^9}, 3.906213449296815*^9, 3.9062138419422493`*^9, 
   3.90621458003583*^9, 3.9062157227919693`*^9, 3.9062160158946123`*^9, 
   3.906224810913542*^9, 3.906226629468759*^9, 3.90622736837565*^9, 
   3.90622792395335*^9, 3.906229071952466*^9, 3.9086291527367268`*^9, 
   3.9086292953627033`*^9, 3.9086294966744633`*^9, 3.908634755992539*^9, 
   3.908634863809436*^9, 3.908634974978476*^9, 3.9086355892872753`*^9, 
   3.90863808336108*^9, 3.908638224393903*^9, 3.908638278059806*^9, 
   3.908638386282092*^9, 3.90863857707959*^9, 3.908638640476308*^9, 
   3.90863919106325*^9, 3.9086392975699472`*^9, 3.908639344662857*^9, {
   3.90863939948835*^9, 3.908639418568796*^9}, {3.908639480016717*^9, 
   3.9086394901147118`*^9}, 3.9086397423624496`*^9, 3.908640156393757*^9, 
   3.9086413537069893`*^9, 3.9086416274438753`*^9, 3.908641680938295*^9, 
   3.9086417646736403`*^9, 3.9086419746382847`*^9, 3.908642803730681*^9, 
   3.908642865518087*^9, 3.908643408632677*^9, 3.908643675630602*^9, 
   3.9086437389781113`*^9, 3.90864603529552*^9, 3.9086461185935183`*^9, 
   3.9086461832658653`*^9, 3.908646233710874*^9, 3.90864661584737*^9, 
   3.908646695462412*^9, 3.908646774879958*^9, 3.90864696267505*^9, 
   3.908647004474358*^9, 3.908647219514974*^9, 3.9086472905051928`*^9, 
   3.908647842601624*^9, {3.9086481770328913`*^9, 3.9086481888883142`*^9}, 
   3.908648338301115*^9, 3.908648438516077*^9, 3.908648508107602*^9, 
   3.90864874512646*^9, 3.9086488263031597`*^9, 3.9086495446602507`*^9, 
   3.9086496832340403`*^9, 3.908650223037335*^9, 3.9086503739869213`*^9, 
   3.908650413099022*^9, 3.908650766041499*^9, 3.908651123555943*^9, 
   3.908651243689486*^9, 3.908651424390414*^9, 3.9086514764498*^9, 
   3.908651723331122*^9, 3.908653973050315*^9, 3.90870954966243*^9, 
   3.9087252687763863`*^9, 3.9088941277785397`*^9, 3.909071321228529*^9, 
   3.909071981829954*^9, 3.909072131596521*^9, {3.909072296137884*^9, 
   3.909072322116475*^9}, 3.909072381755999*^9, 3.909074823198926*^9, {
   3.909074857937295*^9, 3.909074865642083*^9}, 3.909077403581702*^9, 
   3.909079556871131*^9, 3.909224924110376*^9, 3.909225087301771*^9, 
   3.909227479274027*^9, 3.909229347429329*^9, 3.909230252636224*^9, 
   3.909243712219778*^9, 3.909489713531012*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"1f7476ad-6f73-44ec-aa4c-47dae95b66a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NEi", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "NEi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"dcl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"L", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", 
      RowBox[{"LAB", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"tt", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Ltrai", "=", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"dcl", ",", "tam"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Ltest", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"dcl", ",", "Ltrai"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"CL", "=", 
         RowBox[{"Classify", "[", 
          RowBox[{"Ltrai", ",", 
           RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CL", "[", 
              RowBox[{"Ltest", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "==", 
             RowBox[{"Ltest", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
            RowBox[{"sum", "=", 
             RowBox[{"sum", "+", "1"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "Ltest", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vP", "[", "k", "]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{"sum", "/", 
           RowBox[{"Length", "[", "Ltest", "]"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "tt"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"VPnuevo", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"vP", "[", "k", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "tt"}], "}"}]}], "]"}]}]}], ",", "k"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mean", "=", 
  RowBox[{"Mean", "[", "VPnuevo", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8949788316189103`*^9, 3.894978859287382*^9}, {
   3.894978895185464*^9, 3.894978944555928*^9}, {3.8949790097177863`*^9, 
   3.8949790976002407`*^9}, {3.8949791547638226`*^9, 
   3.8949792580760736`*^9}, {3.8949793860840917`*^9, 
   3.8949794111909866`*^9}, {3.8949794797432823`*^9, 
   3.8949794834305134`*^9}, {3.8949795247429667`*^9, 3.894979524914893*^9}, {
   3.894979587763938*^9, 3.8949795883264318`*^9}, {3.8949796472547235`*^9, 
   3.894979647614079*^9}, {3.894979704146827*^9, 3.8949797041936793`*^9}, {
   3.8949797496893005`*^9, 3.8949797510173407`*^9}, {3.8949798074612155`*^9, 
   3.8949798096485605`*^9}, {3.8949798535381975`*^9, 
   3.8949798663242702`*^9}, {3.894980001487886*^9, 3.8949800021441307`*^9}, {
   3.894980144143813*^9, 3.894980144784401*^9}, {3.894980301219108*^9, 
   3.894980301678956*^9}, {3.8949813421206107`*^9, 3.8949813424361205`*^9}, 
   3.8949818833778133`*^9, {3.894982032517945*^9, 3.8949820339233575`*^9}, 
   3.8949822130783095`*^9, {3.8949885358955345`*^9, 3.8949885384411154`*^9}, {
   3.894989468591077*^9, 3.894989476229909*^9}, {3.894990042219657*^9, 
   3.8949900493871913`*^9}, 3.89499022583594*^9, 3.8949915638422675`*^9, {
   3.8950595780560923`*^9, 3.8950595785993357`*^9}, {3.895059631628573*^9, 
   3.895059638295333*^9}, {3.895059671092025*^9, 3.895059671663073*^9}, {
   3.895059807673111*^9, 3.895059808173921*^9}, {3.895059950720077*^9, 
   3.8950599513730164`*^9}, {3.905861901097456*^9, 3.905861901195717*^9}, {
   3.905862064602585*^9, 3.905862065104252*^9}, {3.90587067200401*^9, 
   3.905870676288975*^9}, 3.9058712028704147`*^9, {3.905871497283296*^9, 
   3.905871497625836*^9}, {3.9061348118320208`*^9, 3.906134819612175*^9}, {
   3.906139454040904*^9, 3.906139454143137*^9}, {3.906141006737885*^9, 
   3.906141007008278*^9}, {3.906227384919491*^9, 3.906227384987859*^9}, {
   3.906227932766869*^9, 3.906227933324482*^9}, 3.9086284910556297`*^9, 
   3.908637941543219*^9, {3.908638195574253*^9, 3.9086381962841167`*^9}, {
   3.908641713685011*^9, 3.908641731267026*^9}, {3.9086418022239103`*^9, 
   3.90864181324623*^9}, 3.908641853813788*^9, {3.908641916426139*^9, 
   3.908641923869121*^9}, {3.908648886581188*^9, 3.908648886649884*^9}, {
   3.908650376604548*^9, 3.90865037674584*^9}, {3.90865044146672*^9, 
   3.908650441536771*^9}, {3.9086514273062*^9, 3.9086514274632387`*^9}, {
   3.908653434945394*^9, 3.9086534382236557`*^9}, {3.9086540394842463`*^9, 
   3.908654039682045*^9}, 3.908654596085536*^9, 3.9087095579731092`*^9, 
   3.9087253167608557`*^9, {3.908725757305729*^9, 3.908725759000033*^9}, 
   3.9088941337424707`*^9, {3.909077469261338*^9, 3.909077476119327*^9}, {
   3.909079566765274*^9, 3.909079566874531*^9}, {3.9092249483340816`*^9, 
   3.909224952061637*^9}, {3.909225110758151*^9, 3.909225111659696*^9}, {
   3.9092274949961977`*^9, 3.9092274952432947`*^9}, {3.9092276497184687`*^9, 
   3.909227649836123*^9}, 3.9092293966798553`*^9, {3.909243727083098*^9, 
   3.909243727168816*^9}, {3.9094897192196207`*^9, 3.909489720483034*^9}, {
   3.909489780969369*^9, 3.909489807428101*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"6025d1cc-a3b1-4ea2-83ab-e731e3eaf5ba"],

Cell[BoxData["0.8887912087912091`"], "Output",
 CellChangeTimes->{
  3.9086418718960333`*^9, 3.908641942443466*^9, 3.908641993418921*^9, 
   3.9086428220630217`*^9, 3.908642883566269*^9, 3.90864342591784*^9, 
   3.908643694778062*^9, 3.908643756465293*^9, 3.908646055588442*^9, 
   3.90864621181558*^9, 3.908646250655963*^9, 3.9086466336211853`*^9, 
   3.908646712724411*^9, 3.908646826806013*^9, 3.908646979931835*^9, 
   3.9086470216352*^9, 3.9086472370905647`*^9, 3.9086473074407463`*^9, 
   3.908647886882942*^9, 3.908648356992642*^9, 3.908648455873763*^9, 
   3.9086485261719017`*^9, 3.908648762601397*^9, 3.908648844288908*^9, 
   3.9086489672410994`*^9, 3.908649080037641*^9, 3.9086492107546*^9, 
   3.9086493221010227`*^9, 3.90864943510227*^9, 3.908649630658113*^9, 
   3.908649770921729*^9, 3.9086503079496193`*^9, 3.908650394070456*^9, 
   3.908650427382389*^9, 3.908650527748384*^9, 3.9086508486537113`*^9, 
   3.908651078935691*^9, 3.908651211075029*^9, 3.908651330429762*^9, 
   3.90865144438669*^9, 3.908651490863706*^9, {3.9086517407448273`*^9, 
   3.908651764930979*^9}, 3.908653454969119*^9, 3.908653986949169*^9, 
   3.908654124043973*^9, 3.9086545812405977`*^9, 3.908655009385165*^9, 
   3.908709599944068*^9, 3.9087253102141027`*^9, 3.908725734705606*^9, 
   3.908726600917817*^9, 3.908894215874877*^9, 3.909077573555572*^9, 
   3.9090795645646772`*^9, 3.909079659132504*^9, 3.909156463941474*^9, 
   3.90922497875996*^9, 3.909225097418356*^9, 3.9092251413789873`*^9, 
   3.90922753937862*^9, 3.909229393653722*^9, 3.909230298352809*^9, 
   3.909243771478125*^9, 3.909489765406599*^9, 3.909489854880973*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"ff3e64cb-3f21-40ea-8c29-7096f82e31c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", "VPnuevo", "]"}]], "Input",
 CellChangeTimes->{{3.908726755280204*^9, 3.908726768668448*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"c2513603-9f25-4054-b59a-bb0fff29df9d"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.19605693430634064`, 0.8296703296703297}, {
     2.1960569343063403`, 0.9505494505494505}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{0.8039430656936596, 0.9120879120879121}, {
              1.1960569343063403`, 0.9120879120879121}, {1.1960569343063403`, 
              0.8681318681318682}, {0.8039430656936596, 
              0.8681318681318682}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{1.1960569343063403`, 0.8901098901098901}, {
               0.8039430656936597, 0.8901098901098901}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1., 0.8681318681318682}, {1., 
               0.8351648351648352}}, {{1., 0.9120879120879121}, {1., 
               0.945054945054945}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1.0980284671531702`, 0.8351648351648352}, {
               0.9019715328468298, 0.8351648351648352}}, {{
               1.0980284671531702`, 0.945054945054945}, {0.9019715328468298, 
               0.945054945054945}}}]}, {}}]},
          
          ImageSizeCache->{{246.5857864376269, 
           324.4142135623731}, {-133.4142135623731, 125.4142135623731}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], 
             "0.945054945054945`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             "0.9120879120879121`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "0.8901098901098901`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], 
             "0.8681318681318682`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             "0.8351648351648352`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 0.945054945054945}, {
            Style["75%", Bold], 0.9120879120879121}, {
            Style["median", Bold], 0.8901098901098901}, {
            Style["25%", Bold], 0.8681318681318682}, {
            Style["min", Bold], 0.8351648351648352}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.7843373722630256, 0.8296703296703297},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.8039430656936596, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      1.1960569343063403`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.8039430656936596, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      1.1960569343063403`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.8039430656936596, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     1.1960569343063403`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.9090775840461473`*^9, 3.909079668259829*^9, 
  3.909156480199594*^9, 3.909224980869473*^9, 3.909225142832148*^9, 
  3.9092275414211607`*^9, 3.909229402492057*^9, 3.909230300799252*^9, 
  3.90924377900708*^9, 3.909489769438406*^9, 3.90948986186485*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"6ab3783e-5364-49fe-8869-12c911fb0e43"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HH", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"NEi", "=", 
       RowBox[{"0", "+", 
        RowBox[{"10", "*", "h"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"L", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"z", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "NEi"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"dcl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"L", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "->", 
          RowBox[{"LAB", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "II"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tt", "=", "100"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Ltrai", "=", 
          RowBox[{"RandomSample", "[", 
           RowBox[{"dcl", ",", "tam"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Ltest", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{"dcl", ",", "Ltrai"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"CL", "=", 
          RowBox[{"Classify", "[", 
           RowBox[{"Ltrai", ",", 
            RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"CL", "[", 
               RowBox[{"Ltest", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "==", 
              RowBox[{"Ltest", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"sum", "=", 
              RowBox[{"sum", "+", "1"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "Ltest", "]"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"VP", "[", 
           RowBox[{"h", ",", "k"}], "]"}], "=", 
          RowBox[{"N", "[", 
           RowBox[{"sum", "/", 
            RowBox[{"Length", "[", "Ltest", "]"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "tt"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"VPnuevo", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"VP", "[", 
          RowBox[{"h", ",", "k"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "tt"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qq", "=", 
       FractionBox[
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"ei", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NEi"}], "}"}]}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"ei", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "JJ"}], "}"}]}], "]"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sc", "[", "h", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{"NEi", ",", "qq", ",", 
         RowBox[{"Mean", "[", "VPnuevo", "]"}]}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "1", ",", "HH"}], "}"}]}], "]"}], ",", "h"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.908709704173718*^9, 3.908709740057671*^9}, {
   3.908709773697105*^9, 3.908709963108781*^9}, {3.908709996545271*^9, 
   3.908710080639414*^9}, {3.908710294109651*^9, 3.908710295629794*^9}, {
   3.908710596096249*^9, 3.908710650691854*^9}, {3.908710808075577*^9, 
   3.908710826657352*^9}, {3.90871088767288*^9, 3.908710926226767*^9}, {
   3.908710974244377*^9, 3.908710988986279*^9}, {3.908711019956077*^9, 
   3.9087110335591717`*^9}, {3.908711237810272*^9, 3.908711238552025*^9}, {
   3.9087115414000196`*^9, 3.9087115419329*^9}, {3.9087121557009993`*^9, 
   3.908712190326481*^9}, 3.9088942548790293`*^9, {3.909077631199541*^9, 
   3.9090776418152723`*^9}, {3.909078133539866*^9, 3.9090781451778307`*^9}, {
   3.909156497297701*^9, 3.909156510185171*^9}, {3.909161223270083*^9, 
   3.909161228466917*^9}, {3.909161712120366*^9, 3.9091617884233313`*^9}, {
   3.909162230076542*^9, 3.90916223551576*^9}, {3.90916432622863*^9, 
   3.9091643476753483`*^9}, {3.909164535181238*^9, 3.90916455319387*^9}, {
   3.909164614904409*^9, 3.909164622691429*^9}, {3.9092251546856728`*^9, 
   3.909225182044984*^9}, {3.909226491965708*^9, 3.909226492226609*^9}, {
   3.909231665643393*^9, 3.9092316661507673`*^9}, {3.90923305492887*^9, 
   3.909233059604755*^9}, {3.9092353948689537`*^9, 3.9092353955261297`*^9}, 
   3.909243790396367*^9, 3.909244342432672*^9, {3.9092447687753887`*^9, 
   3.909244768969532*^9}, {3.9092453774982233`*^9, 3.90924538478788*^9}, {
   3.9092467980135937`*^9, 3.909246798094948*^9}, {3.909247776762043*^9, 
   3.909247776870419*^9}, {3.9092500375477943`*^9, 3.909250037931995*^9}, {
   3.909489876133129*^9, 3.909489893549447*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"1107fbe8-c5c3-49dd-8846-ac118c5a5f47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"VP", "[", 
        RowBox[{"h", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "tt"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "1", ",", "HH"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.909227675162331*^9, 3.9092276796013813`*^9}, {
  3.909230033599818*^9, 3.909230034492807*^9}, {3.909230964159313*^9, 
  3.9092309686339197`*^9}, {3.909231471752881*^9, 3.909231472373168*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"96b84dac-47ac-435e-a7a1-8ef3c031fd6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TTaux", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<TTv2.dat\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TTjoin", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"TTaux", ",", 
     RowBox[{"Transpose", "[", "TT", "]"}]}], "]"}]}], ";", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "TTjoin", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8950607208365917`*^9, 3.8950607526365347`*^9}, {
   3.895060798332114*^9, 3.8950608304770727`*^9}, 3.909225959926815*^9, {
   3.909228407153646*^9, 3.909228431277369*^9}, {3.90923150029941*^9, 
   3.909231516164467*^9}, {3.909243307908942*^9, 3.909243308092229*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"ff91af97-8d0c-4b60-997e-f4d075f9dde7"],

Cell[BoxData["500"], "Output",
 CellChangeTimes->{3.909231639875298*^9, 3.909233021496367*^9, 
  3.9092353563878183`*^9, 3.909237251204829*^9, 3.909239187126102*^9, 
  3.909243222329919*^9, 3.909244001385446*^9, 3.909244243163309*^9, 
  3.9092445339972057`*^9, 3.909244745702484*^9, 3.909245332541238*^9, 
  3.909245713525432*^9, 3.909246146395166*^9, 3.909246660131372*^9, 
  3.909247737893525*^9, 3.9092500076931057`*^9, 3.909255072006214*^9, 
  3.909493066399436*^9, 3.9094970549436073`*^9, 3.909501712214409*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"5f4d3514-5f63-48de-b6dd-665dd34be414"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mTT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "TTjoin", "]"}], "[", 
       RowBox[{"[", "h", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "1", ",", "HH"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"mTT", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
  RowBox[{"g2", "=", 
   RowBox[{"BoxWhiskerChart", "[", 
    RowBox[{"Transpose", "[", "TTjoin", "]"}], "]"}]}], ";", 
  RowBox[{"Show", "[", 
   RowBox[{"g2", ",", "g1"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9092394286532593`*^9, 3.909239577404276*^9}, {
  3.909240190766911*^9, 3.909240195627738*^9}, {3.909240241138303*^9, 
  3.909240244685351*^9}, {3.90924626225976*^9, 3.909246306416013*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"35f92865-5a53-463e-abac-82b87b59b07c"],

Cell[BoxData[
 GraphicsBox[{{
    {Opacity[0], 
     PointBox[{{0.5413711751009128, 0.5857142857142856}, {15.458628824899089`,
       0.9967032967032967}}]}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{0.6322696509095218, 0.7692307692307693}, {
               1.3677303490904782`, 0.7692307692307693}, {1.3677303490904782`,
                0.7032967032967034}, {0.6322696509095218, 
               0.7032967032967034}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{1.3677303490904782`, 0.7362637362637363}, {
                0.6322696509095218, 0.7362637362637363}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{1., 0.7032967032967034}, {1., 
                0.6043956043956044}}, {{1., 0.7692307692307693}, {1., 
                0.8681318681318682}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{1.183865174545239, 0.6043956043956044}, {
                0.8161348254547609, 0.6043956043956044}}, {{1.183865174545239,
                 0.8681318681318682}, {0.8161348254547609, 
                0.8681318681318682}}}]}, {}}]},
           
           ImageSizeCache->{{51.58578643762691, 
            77.4142135623731}, {-59.41421356237309, 127.41421356237309`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.8681318681318682`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.7692307692307693`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.7362637362637363`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.7032967032967034`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.6043956043956044`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.8681318681318682}, {
             Style["75%", Bold], 0.7692307692307693}, {
             Style["median", Bold], 0.7362637362637363}, {
             Style["25%", Bold], 0.7032967032967034}, {
             Style["min", Bold], 0.6043956043956044}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{1.6322696509095218`, 0.8516483516483516}, {
               2.367730349090478, 0.8516483516483516}, {2.367730349090478, 
               0.8021978021978022}, {1.6322696509095218`, 
               0.8021978021978022}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{2.367730349090478, 0.8241758241758241}, {
                1.6322696509095218`, 0.8241758241758241}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{2., 0.8021978021978022}, {2., 
                0.6703296703296703}}, {{2., 0.8516483516483516}, {2., 
                0.9340659340659341}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{2.183865174545239, 0.6703296703296703}, {
                1.816134825454761, 0.6703296703296703}}, {{2.183865174545239, 
                0.9340659340659341}, {1.816134825454761, 
                0.9340659340659341}}}]}, {}}]},
           
           ImageSizeCache->{{82.58578643762691, 
            108.4142135623731}, {-105.41421356237309`, 81.41421356237309}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.9340659340659341`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.8516483516483516`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8241758241758241`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8021978021978022`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.6703296703296703`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.9340659340659341}, {
             Style["75%", Bold], 0.8516483516483516}, {
             Style["median", Bold], 0.8241758241758241}, {
             Style["25%", Bold], 0.8021978021978022}, {
             Style["min", Bold], 0.6703296703296703}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{2.632269650909522, 0.8901098901098901}, {
               3.367730349090478, 0.8901098901098901}, {3.367730349090478, 
               0.8461538461538461}, {2.632269650909522, 
               0.8461538461538461}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{3.367730349090478, 0.8681318681318682}, {
                2.632269650909522, 0.8681318681318682}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{3., 0.8461538461538461}, {3., 
                0.7472527472527473}}, {{3., 0.8901098901098901}, {3., 
                0.945054945054945}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{3.183865174545239, 0.7472527472527473}, {
                2.816134825454761, 0.7472527472527473}}, {{3.183865174545239, 
                0.945054945054945}, {2.816134825454761, 
                0.945054945054945}}}]}, {}}]},
           
           ImageSizeCache->{{113.5857864376269, 
            139.4142135623731}, {-112.4142135623731, 28.414213562373106`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.945054945054945`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.8901098901098901`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8681318681318682`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8461538461538461`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7472527472527473`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.945054945054945}, {
             Style["75%", Bold], 0.8901098901098901}, {
             Style["median", Bold], 0.8681318681318682}, {
             Style["25%", Bold], 0.8461538461538461}, {
             Style["min", Bold], 0.7472527472527473}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{3.632269650909522, 0.9120879120879121}, {
               4.367730349090478, 0.9120879120879121}, {4.367730349090478, 
               0.8681318681318682}, {3.632269650909522, 
               0.8681318681318682}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{4.367730349090478, 0.8901098901098901}, {
                3.632269650909522, 0.8901098901098901}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{4., 0.8681318681318682}, {4., 
                0.7912087912087912}}, {{4., 0.9120879120879121}, {4., 
                0.967032967032967}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{4.1838651745452395`, 0.7912087912087912}, {
                3.816134825454761, 0.7912087912087912}}, {{
                4.1838651745452395`, 0.967032967032967}, {3.816134825454761, 
                0.967032967032967}}}]}, {}}]},
           
           ImageSizeCache->{{144.5857864376269, 
            170.4142135623731}, {-128.4142135623731, -2.5857864376268935`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.967032967032967`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.9120879120879121`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8901098901098901`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8681318681318682`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7912087912087912`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.967032967032967}, {
             Style["75%", Bold], 0.9120879120879121}, {
             Style["median", Bold], 0.8901098901098901}, {
             Style["25%", Bold], 0.8681318681318682}, {
             Style["min", Bold], 0.7912087912087912}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{4.632269650909522, 0.8901098901098901}, {
               5.367730349090478, 0.8901098901098901}, {5.367730349090478, 
               0.8461538461538461}, {4.632269650909522, 
               0.8461538461538461}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{5.367730349090478, 0.8681318681318682}, {
                4.632269650909522, 0.8681318681318682}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{5., 0.8461538461538461}, {5., 
                0.7252747252747253}}, {{5., 0.8901098901098901}, {5., 
                0.9560439560439561}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{5.1838651745452395`, 0.7252747252747253}, {
                4.8161348254547605`, 0.7252747252747253}}, {{
                5.1838651745452395`, 0.9560439560439561}, {
                4.8161348254547605`, 0.9560439560439561}}}]}, {}}]},
           
           ImageSizeCache->{{175.5857864376269, 
            201.4142135623731}, {-120.4142135623731, 43.41421356237311}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.9560439560439561`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.8901098901098901`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8681318681318682`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8461538461538461`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7252747252747253`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.9560439560439561}, {
             Style["75%", Bold], 0.8901098901098901}, {
             Style["median", Bold], 0.8681318681318682}, {
             Style["25%", Bold], 0.8461538461538461}, {
             Style["min", Bold], 0.7252747252747253}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{5.632269650909522, 0.8901098901098901}, {
               6.367730349090478, 0.8901098901098901}, {6.367730349090478, 
               0.8461538461538461}, {5.632269650909522, 
               0.8461538461538461}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{6.367730349090478, 0.8681318681318682}, {
                5.632269650909522, 0.8681318681318682}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{6., 0.8461538461538461}, {6., 
                0.7692307692307693}}, {{6., 0.8901098901098901}, {6., 
                0.9560439560439561}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{6.1838651745452395`, 0.7692307692307693}, {
                5.8161348254547605`, 0.7692307692307693}}, {{
                6.1838651745452395`, 0.9560439560439561}, {
                5.8161348254547605`, 0.9560439560439561}}}]}, {}}]},
           
           ImageSizeCache->{{206.5857864376269, 
            232.4142135623731}, {-119.4142135623731, 13.414213562373106`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.9560439560439561`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.8901098901098901`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8681318681318682`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8461538461538461`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7692307692307693`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.9560439560439561}, {
             Style["75%", Bold], 0.8901098901098901}, {
             Style["median", Bold], 0.8681318681318682}, {
             Style["25%", Bold], 0.8461538461538461}, {
             Style["min", Bold], 0.7692307692307693}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{6.632269650909522, 0.9010989010989011}, {
               7.367730349090478, 0.9010989010989011}, {7.367730349090478, 
               0.8681318681318682}, {6.632269650909522, 
               0.8681318681318682}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{7.367730349090478, 0.8791208791208791}, {
                6.632269650909522, 0.8791208791208791}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{7., 0.8681318681318682}, {7., 
                0.7252747252747253}}, {{7., 0.9010989010989011}, {7., 
                0.967032967032967}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{7.1838651745452395`, 0.7252747252747253}, {
                6.8161348254547605`, 0.7252747252747253}}, {{
                7.1838651745452395`, 0.967032967032967}, {6.8161348254547605`,
                 0.967032967032967}}}]}, {}}]},
           
           ImageSizeCache->{{237.5857864376269, 
            263.4142135623731}, {-127.4142135623731, 43.41421356237311}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.967032967032967`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.9010989010989011`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8791208791208791`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8681318681318682`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7252747252747253`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.967032967032967}, {
             Style["75%", Bold], 0.9010989010989011}, {
             Style["median", Bold], 0.8791208791208791}, {
             Style["25%", Bold], 0.8681318681318682}, {
             Style["min", Bold], 0.7252747252747253}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{7.632269650909522, 0.9010989010989011}, {
               8.367730349090479, 0.9010989010989011}, {8.367730349090479, 
               0.8571428571428571}, {7.632269650909522, 
               0.8571428571428571}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{8.367730349090479, 0.8791208791208791}, {
                7.632269650909521, 0.8791208791208791}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{8., 0.8571428571428571}, {8., 
                0.7802197802197802}}, {{8., 0.9010989010989011}, {8., 
                0.978021978021978}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{8.18386517454524, 0.7802197802197802}, {
                7.8161348254547605`, 0.7802197802197802}}, {{8.18386517454524,
                 0.978021978021978}, {7.8161348254547605`, 
                0.978021978021978}}}]}, {}}]},
           
           ImageSizeCache->{{268.5857864376269, 
            294.4142135623731}, {-135.41421356237308`, 5.4142135623731065`}}],
          
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.978021978021978`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.9010989010989011`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8791208791208791`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8571428571428571`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7802197802197802`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.978021978021978}, {
             Style["75%", Bold], 0.9010989010989011}, {
             Style["median", Bold], 0.8791208791208791}, {
             Style["25%", Bold], 0.8571428571428571}, {
             Style["min", Bold], 0.7802197802197802}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{8.632269650909523, 0.9010989010989011}, {
               9.367730349090479, 0.9010989010989011}, {9.367730349090479, 
               0.8571428571428571}, {8.632269650909523, 
               0.8571428571428571}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{9.367730349090479, 0.8791208791208791}, {
                8.632269650909521, 0.8791208791208791}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{9., 0.8571428571428571}, {9., 
                0.7362637362637363}}, {{9., 0.9010989010989011}, {9., 
                0.967032967032967}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{9.18386517454524, 0.7362637362637363}, {
                8.81613482545476, 0.7362637362637363}}, {{9.18386517454524, 
                0.967032967032967}, {8.81613482545476, 
                0.967032967032967}}}]}, {}}]},
           
           ImageSizeCache->{{299.5857864376269, 
            325.4142135623731}, {-127.4142135623731, 36.41421356237311}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.967032967032967`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.9010989010989011`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8791208791208791`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8571428571428571`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7362637362637363`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.967032967032967}, {
             Style["75%", Bold], 0.9010989010989011}, {
             Style["median", Bold], 0.8791208791208791}, {
             Style["25%", Bold], 0.8571428571428571}, {
             Style["min", Bold], 0.7362637362637363}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{9.632269650909523, 0.9010989010989011}, {
               10.367730349090479`, 0.9010989010989011}, {10.367730349090479`,
                0.8461538461538461}, {9.632269650909523, 
               0.8461538461538461}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{10.367730349090479`, 0.8791208791208791}, {
                9.632269650909521, 0.8791208791208791}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{10., 0.8461538461538461}, {10., 
                0.7582417582417582}}, {{10., 0.9010989010989011}, {10., 
                0.967032967032967}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{10.18386517454524, 0.7582417582417582}, {
                9.81613482545476, 0.7582417582417582}}, {{10.18386517454524, 
                0.967032967032967}, {9.81613482545476, 
                0.967032967032967}}}]}, {}}]},
           
           ImageSizeCache->{{330.5857864376269, 
            356.4142135623731}, {-127.4142135623731, 20.414213562373106`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.967032967032967`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.9010989010989011`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8791208791208791`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8461538461538461`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7582417582417582`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.967032967032967}, {
             Style["75%", Bold], 0.9010989010989011}, {
             Style["median", Bold], 0.8791208791208791}, {
             Style["25%", Bold], 0.8461538461538461}, {
             Style["min", Bold], 0.7582417582417582}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{10.632269650909523`, 0.9010989010989011}, {
               11.367730349090479`, 0.9010989010989011}, {11.367730349090479`,
                0.8571428571428571}, {10.632269650909523`, 
               0.8571428571428571}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{11.367730349090479`, 0.8791208791208791}, {
                10.632269650909521`, 0.8791208791208791}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{11., 0.8571428571428571}, {11., 
                0.7472527472527473}}, {{11., 0.9010989010989011}, {11., 
                0.967032967032967}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{11.18386517454524, 0.7472527472527473}, {
                10.81613482545476, 0.7472527472527473}}, {{11.18386517454524, 
                0.967032967032967}, {10.81613482545476, 
                0.967032967032967}}}]}, {}}]},
           
           ImageSizeCache->{{361.5857864376269, 
            387.4142135623731}, {-127.4142135623731, 28.414213562373106`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.967032967032967`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.9010989010989011`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8791208791208791`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8571428571428571`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7472527472527473`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.967032967032967}, {
             Style["75%", Bold], 0.9010989010989011}, {
             Style["median", Bold], 0.8791208791208791}, {
             Style["25%", Bold], 0.8571428571428571}, {
             Style["min", Bold], 0.7472527472527473}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{11.632269650909523`, 0.8956043956043955}, {
               12.367730349090479`, 0.8956043956043955}, {12.367730349090479`,
                0.8461538461538461}, {11.632269650909523`, 
               0.8461538461538461}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{12.367730349090479`, 0.8681318681318682}, {
                11.632269650909521`, 0.8681318681318682}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{12., 0.8461538461538461}, {12., 
                0.7692307692307693}}, {{12., 0.8956043956043955}, {12., 
                0.9560439560439561}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{12.18386517454524, 0.7692307692307693}, {
                11.81613482545476, 0.7692307692307693}}, {{12.18386517454524, 
                0.9560439560439561}, {11.81613482545476, 
                0.9560439560439561}}}]}, {}}]},
           
           ImageSizeCache->{{392.5857864376269, 
            418.4142135623731}, {-119.4142135623731, 13.414213562373106`}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.9560439560439561`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.8956043956043955`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8681318681318682`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8461538461538461`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7692307692307693`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.9560439560439561}, {
             Style["75%", Bold], 0.8956043956043955}, {
             Style["median", Bold], 0.8681318681318682}, {
             Style["25%", Bold], 0.8461538461538461}, {
             Style["min", Bold], 0.7692307692307693}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{12.632269650909523`, 0.8901098901098901}, {
               13.367730349090479`, 0.8901098901098901}, {13.367730349090479`,
                0.8461538461538461}, {12.632269650909523`, 
               0.8461538461538461}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{13.367730349090479`, 0.8681318681318682}, {
                12.632269650909521`, 0.8681318681318682}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{13., 0.8461538461538461}, {13., 
                0.7362637362637363}}, {{13., 0.8901098901098901}, {13., 
                0.945054945054945}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{13.18386517454524, 0.7362637362637363}, {
                12.81613482545476, 0.7362637362637363}}, {{13.18386517454524, 
                0.945054945054945}, {12.81613482545476, 
                0.945054945054945}}}]}, {}}]},
           
           ImageSizeCache->{{423.5857864376269, 
            449.4142135623731}, {-111.4142135623731, 36.41421356237311}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.945054945054945`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.8901098901098901`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8681318681318682`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8461538461538461`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7362637362637363`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.945054945054945}, {
             Style["75%", Bold], 0.8901098901098901}, {
             Style["median", Bold], 0.8681318681318682}, {
             Style["25%", Bold], 0.8461538461538461}, {
             Style["min", Bold], 0.7362637362637363}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              
              PolygonBox[{{13.632269650909523`, 0.8791208791208791}, {
               14.367730349090479`, 0.8791208791208791}, {14.367730349090479`,
                0.8351648351648352}, {13.632269650909523`, 
               0.8351648351648352}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{14.367730349090479`, 0.8571428571428571}, {
                13.632269650909521`, 0.8571428571428571}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{14., 0.8351648351648352}, {14., 
                0.7142857142857143}}, {{14., 0.8791208791208791}, {14., 
                0.945054945054945}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{14.18386517454524, 0.7142857142857143}, {
                13.81613482545476, 0.7142857142857143}}, {{14.18386517454524, 
                0.945054945054945}, {13.81613482545476, 
                0.945054945054945}}}]}, {}}]},
           
           ImageSizeCache->{{454.5857864376269, 
            480.4142135623731}, {-112.4142135623731, 51.41421356237311}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.945054945054945`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.8791208791208791`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8571428571428571`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8351648351648352`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7142857142857143`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.945054945054945}, {
             Style["75%", Bold], 0.8791208791208791}, {
             Style["median", Bold], 0.8571428571428571}, {
             Style["25%", Bold], 0.8351648351648352}, {
             Style["min", Bold], 0.7142857142857143}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            GraphicsGroupBox[{Antialiasing -> False, 
              PolygonBox[{{14.632269650909523`, 0.8791208791208791}, {
               15.367730349090479`, 0.8791208791208791}, {15.367730349090479`,
                0.8351648351648352}, {14.632269650909523`, 
               0.8351648351648352}}], {}, {{}, {}}, {}, {
               GrayLevel[0], 
               GrayLevel[1], 
               
               LineBox[{{15.367730349090479`, 0.8571428571428571}, {
                14.632269650909521`, 0.8571428571428571}}]}, {}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{15., 0.8351648351648352}, {15., 
                0.7362637362637363}}, {{15., 0.8791208791208791}, {15., 
                0.945054945054945}}}]}, {
               GrayLevel[0], 
               GrayLevel[0.5], 
               
               LineBox[{{{15.18386517454524, 0.7362637362637363}, {
                14.81613482545476, 0.7362637362637363}}, {{15.18386517454524, 
                0.945054945054945}, {14.81613482545476, 
                0.945054945054945}}}]}, {}}]},
           
           ImageSizeCache->{{485.5857864376269, 
            511.4142135623731}, {-111.4142135623731, 36.41421356237311}}],
          "DelayedMouseEffectStyle"],
         StyleBox[
          TagBox[
           GridBox[{{
              StyleBox["\"max\"", Bold, StripOnInput -> False], 
              "0.945054945054945`"}, {
              StyleBox["\"75%\"", Bold, StripOnInput -> False], 
              "0.8791208791208791`"}, {
              StyleBox["\"median\"", Bold, StripOnInput -> False], 
              "0.8571428571428571`"}, {
              StyleBox["\"25%\"", Bold, StripOnInput -> False], 
              "0.8351648351648352`"}, {
              StyleBox["\"min\"", Bold, StripOnInput -> False], 
              "0.7362637362637363`"}}, 
            GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
            AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}, "Rows" -> {
                Directive[
                 GrayLevel[0.3]], {
                 Directive[
                  GrayLevel[0.3]]}, 
                Directive[
                 GrayLevel[0.3]]}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
            Directive[
              AbsoluteThickness[1], 
              Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
        Annotation[#, 
         Style[
          Grid[{{
             Style["max", Bold], 0.945054945054945}, {
             Style["75%", Bold], 0.8791208791208791}, {
             Style["median", Bold], 0.8571428571428571}, {
             Style["25%", Bold], 0.8351648351648352}, {
             Style["min", Bold], 0.7362637362637363}}, Dividers -> {{
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}, {
              Directive[
               GrayLevel[0.3]], {
               Directive[
                GrayLevel[0.3]]}, 
              Directive[
               GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
           GrayLevel[0], BaseStyle -> Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], {}], 
         "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, \
{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      LineBox[{{1., 0.7386373626373628}, {2., 0.8233846153846157}, {3., 
       0.8668351648351652}, {4., 0.8856703296703299}, {5., 
       0.8713406593406596}, {6., 0.8691428571428574}, {7., 
       0.8804175824175826}, {8., 0.8798681318681322}, {9., 
       0.8765934065934068}, {10., 0.8736263736263739}, {11., 
       0.8754065934065937}, {12., 0.8724175824175827}, {13., 
       0.8631428571428574}, {14., 0.858681318681319}, {15., 
       0.8565274725274729}}]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.10450338399952619`, 0.5857142857142856},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.6322696509095218, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      15.367730349090479`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.6322696509095218, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      15.367730349090479`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {6., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {7., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {8., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {9., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {10., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {11., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {12., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {13., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {14., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {15., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.6322696509095218, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     15.367730349090479`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.909240200334972*^9, 3.9092402583141823`*^9, 3.909243223568626*^9, 
   3.909244002763712*^9, 3.90924424411366*^9, 3.909244535041937*^9, 
   3.909244746676448*^9, 3.909245333750094*^9, 3.909245714579406*^9, 
   3.9092461508102016`*^9, {3.9092462639971724`*^9, 3.9092463072504377`*^9}, 
   3.9092466623013067`*^9, 3.909247741783577*^9, 3.909250010573525*^9, 
   3.909255079922233*^9, 3.909493067683997*^9, 3.9094970562469387`*^9, 
   3.909501713496162*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"9723424e-26b6-4f42-b638-9b9ca0581561"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SC3", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"sc", "[", "h", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"sc", "[", "h", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"mTT", "[", 
        RowBox[{"[", "h", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "1", ",", "HH"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "SC3", "]"}]}], "Input",
 CellChangeTimes->{{3.9092401116472692`*^9, 3.909240170022781*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"77790feb-d949-459f-b80e-cd1f64bf295a"],

Cell[BoxData[
 TagBox[GridBox[{
    {"10", "0.8195025329155035`", "0.7386373626373628`"},
    {"20", "0.856418386448297`", "0.8233846153846157`"},
    {"30", "0.8761895075493172`", "0.8668351648351652`"},
    {"40", "0.8903116279460437`", "0.8856703296703299`"},
    {"50", "0.9017053338286894`", "0.8713406593406596`"},
    {"60", "0.9109202198398006`", "0.8691428571428574`"},
    {"70", "0.9185632405697426`", "0.8804175824175826`"},
    {"80", "0.9249854362066318`", "0.8798681318681322`"},
    {"90", "0.9305501606901059`", "0.8765934065934068`"},
    {"100", "0.9355209843749025`", "0.8736263736263739`"},
    {"110", "0.9401016427423422`", "0.8754065934065937`"},
    {"120", "0.9443425252703579`", "0.8724175824175827`"},
    {"130", "0.9482977823363883`", "0.8631428571428574`"},
    {"140", "0.9520464969468301`", "0.858681318681319`"},
    {"150", "0.9556036945053702`", "0.8565274725274729`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9092401315525093`*^9, {3.909240161572722*^9, 3.909240170604484*^9}, 
   3.909240205501485*^9, 3.9092402597899427`*^9, 3.909243226619564*^9, 
   3.909244006112925*^9, 3.909244248831938*^9, 3.909244540275703*^9, 
   3.909244749116159*^9, 3.909245340200244*^9, 3.909245725406796*^9, 
   3.909246158280526*^9, 3.909247745474845*^9, 3.90925001641183*^9, 
   3.909255089388899*^9, 3.909493070916559*^9, 3.909497057772813*^9, 
   3.90950171505567*^9},
 CellLabel->
  "Out[91]//TableForm=",ExpressionUUID->"2bfe0895-5cd4-43fb-8d8d-\
b43177da1ee9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<TTv2.dat\>\"", ",", "TTjoin"}], "]"}]], "Input",
 CellChangeTimes->{{3.8950612976844873`*^9, 3.8950613019271603`*^9}, {
   3.895063063746628*^9, 3.895063083282331*^9}, {3.8950639375228863`*^9, 
   3.8950639437380133`*^9}, {3.906134282577224*^9, 3.906134288016494*^9}, 
   3.9061346612776957`*^9, {3.9061347759408607`*^9, 3.906134782187336*^9}, {
   3.908904167173812*^9, 3.908904194512868*^9}, {3.909225457562406*^9, 
   3.909225457693881*^9}, {3.9092256778842793`*^9, 3.909225690905993*^9}, {
   3.909226421457262*^9, 3.909226454479219*^9}, {3.9092284931050386`*^9, 
   3.909228500300468*^9}, {3.9092306791192102`*^9, 3.909230683741269*^9}, {
   3.909230723486157*^9, 3.9092307299407587`*^9}, {3.9092311716094418`*^9, 
   3.909231175351983*^9}, {3.909243297460576*^9, 3.909243297684037*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"0a277508-8112-4d9b-a01d-6ab11e80e752"],

Cell[BoxData["\<\"TTv2.dat\"\>"], "Output",
 CellChangeTimes->{
  3.909225463823648*^9, 3.909225681835175*^9, 3.9092258140999002`*^9, 
   3.9092263570381927`*^9, {3.909226431604672*^9, 3.9092264561454487`*^9}, 
   3.9092266188189383`*^9, 3.909226849693014*^9, 3.909226978270584*^9, 
   3.909227743204908*^9, 3.909227898950548*^9, 3.9092285014024153`*^9, 
   3.909229227139001*^9, 3.9092295526514893`*^9, 3.9092297260276833`*^9, 
   3.909229854703154*^9, 3.9092304985412817`*^9, {3.909230684969591*^9, 
   3.9092307008055973`*^9}, 3.9092308578413057`*^9, 3.9092311228920813`*^9, 
   3.909231176037161*^9, 3.909231329542288*^9, 3.909231456833765*^9, 
   3.909231644903139*^9, 3.909233030216818*^9, 3.909235362085821*^9, 
   3.909237265060392*^9, 3.909239207151457*^9, 3.909243233536422*^9, 
   3.909244019696178*^9, 3.909244548740591*^9, 3.909244753740526*^9, 
   3.9092461664851847`*^9, 3.909247767516507*^9, 3.9092500322074203`*^9, 
   3.90925509667801*^9, 3.909493072630412*^9, 3.909497062191332*^9, 
   3.909501720775124*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"31e1e80a-6c67-4489-bd61-f0ff8d35ad70"]
}, Open  ]]
},
WindowSize->{1296, 1016},
WindowMargins->{{4, Automatic}, {0, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9476d720-66ce-4a1f-b59c-c5d457631c53"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 280, 5, 45, "Input",ExpressionUUID->"ef8d7c0c-e17d-4cbe-9404-0e137e686c14"],
Cell[863, 29, 678, 12, 51, "Output",ExpressionUUID->"89fbdd20-8323-4ed5-8267-453b464b7911"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1578, 46, 1783, 30, 78, "Input",ExpressionUUID->"08fd9bd6-017d-4b78-9fbf-65ef9332faa9"],
Cell[3364, 78, 2518, 37, 51, "Output",ExpressionUUID->"536ee8dd-dc13-4cfe-b6c4-eb51dbc3919c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5919, 120, 473, 10, 78, "Input",ExpressionUUID->"50dcaef8-e1a0-4d3c-8f67-3a0ced498966"],
Cell[6395, 132, 629, 9, 51, "Output",ExpressionUUID->"fbfb767f-2ebb-430f-a959-719809506419"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7061, 146, 901, 20, 78, "Input",ExpressionUUID->"9c445371-238e-4c8c-8160-0e610dcb1cf6"],
Cell[7965, 168, 18398, 250, 171, "Output",ExpressionUUID->"eacbb7b9-f4ad-46dd-919a-a5eb6688c489"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26400, 423, 364, 8, 45, "Input",ExpressionUUID->"66425a67-1ee4-4df7-b899-951025234994"],
Cell[26767, 433, 646, 9, 51, "Output",ExpressionUUID->"9030c645-9af1-4d46-a41d-4ea1e9bff83d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27450, 447, 746, 17, 78, "Input",ExpressionUUID->"7b23ef7a-85cb-4859-ac1b-42094a80eb94"],
Cell[28199, 466, 3330, 66, 84, "Output",ExpressionUUID->"43e71e37-1875-4cc5-8e74-9cf93ba7cec9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31566, 537, 230, 4, 45, "Input",ExpressionUUID->"0ce0b1b8-c7df-41ed-8ebb-82466205b914"],
Cell[31799, 543, 367, 5, 51, "Output",ExpressionUUID->"c718991f-bd36-4734-9886-b2cc1539643d"]
}, Open  ]],
Cell[32181, 551, 6715, 97, 142, "Input",ExpressionUUID->"853d7cd6-a108-4313-ae09-19fd49b9b9c6"],
Cell[38899, 650, 1167, 22, 45, "Input",ExpressionUUID->"9f8391bc-12c8-4aa6-85df-26209a638092"],
Cell[CellGroupData[{
Cell[40091, 676, 736, 13, 78, "Input",ExpressionUUID->"8da77169-9f34-4eef-918c-9db44120aa75"],
Cell[40830, 691, 1971, 27, 51, "Output",ExpressionUUID->"16e3529c-de33-4c9d-831c-d9c52d0c8898"]
}, Open  ]],
Cell[42816, 721, 699, 19, 78, "Input",ExpressionUUID->"bca2d396-a0a4-4089-9234-1dc3d9c5568c"],
Cell[43518, 742, 215, 4, 45, "Input",ExpressionUUID->"c4cdcbf5-cbee-4eb5-9401-349aabcff744"],
Cell[43736, 748, 543, 12, 78, "Input",ExpressionUUID->"e5856cb1-9673-48a3-9eee-e0ae0ffb18b8"],
Cell[44282, 762, 438, 10, 45, "Input",ExpressionUUID->"1e7058e4-542b-4f6f-b87f-58b8d9b364a4"],
Cell[CellGroupData[{
Cell[44745, 776, 1131, 25, 78, "Input",ExpressionUUID->"53eba45e-c706-468f-b797-546ab0e7b24e"],
Cell[45879, 803, 5237, 97, 362, "Output",ExpressionUUID->"34dd8bf4-11eb-4dc5-bfed-d20fbb8ed3f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51153, 905, 1138, 23, 72, "Input",ExpressionUUID->"35060fb4-fbbf-4131-b5ac-20d032813d49"],
Cell[52294, 930, 2300, 32, 51, "Output",ExpressionUUID->"75569669-ed0d-4b09-b5c9-42f2755272da"]
}, Open  ]],
Cell[54609, 965, 552, 14, 78, "Input",ExpressionUUID->"6b7da122-491d-47d9-a87c-cb1e7251f21b"],
Cell[55164, 981, 358, 9, 45, "Input",ExpressionUUID->"7235d6b6-32a5-469d-98d1-515630d6f93e"],
Cell[CellGroupData[{
Cell[55547, 994, 447, 8, 45, "Input",ExpressionUUID->"3c87471f-f17b-4fb9-8a26-e697a4ab23c4"],
Cell[55997, 1004, 2820, 39, 51, "Output",ExpressionUUID->"bcfad637-c48d-4fa3-8d75-7ae74618c0da"]
}, Open  ]],
Cell[58832, 1046, 6766, 106, 110, "Input",ExpressionUUID->"52260343-387d-41e4-994f-49cdf22c7db8"],
Cell[65601, 1154, 681, 14, 78, "Input",ExpressionUUID->"236a93cb-ab3e-41c8-9ffc-8b5d4b11f4a7"],
Cell[CellGroupData[{
Cell[66307, 1172, 4833, 87, 142, "Input",ExpressionUUID->"91325cc6-b7a8-414c-9f4b-035e9053a7fd"],
Cell[71143, 1261, 89469, 1573, 93, "Output",ExpressionUUID->"84e0653b-9c60-4e3d-8077-b18c44b6b2e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160649, 2839, 1208, 30, 110, "Input",ExpressionUUID->"edf3b692-4a99-48a5-810a-214fa2840c28"],
Cell[161860, 2871, 8541, 116, 51, "Output",ExpressionUUID->"f49c4ac7-e45d-4ea3-8340-3f119455d75d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170438, 2992, 337, 7, 45, "Input",ExpressionUUID->"ff1c9f60-37d8-4d41-847f-324c8a00d4b6",
 CellID->1521394769],
Cell[170778, 3001, 309088, 7902, 612, "Output",ExpressionUUID->"83d8c6d9-6a55-4331-868a-d2fe8f23b534"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479903, 10908, 370, 7, 45, "Input",ExpressionUUID->"f4c3e6cc-c9b4-4e13-9e25-52fce44ee6c9",
 CellID->801286459],
Cell[480276, 10917, 1544, 22, 51, "Output",ExpressionUUID->"f167539e-aee7-46ee-ac0a-f9a0ea6015d3"]
}, Open  ]],
Cell[481835, 10942, 333, 7, 45, "Input",ExpressionUUID->"a8c20196-82af-4b21-a4c0-42520c8350e2"],
Cell[CellGroupData[{
Cell[482193, 10953, 1378, 34, 110, "Input",ExpressionUUID->"80767d51-b3d2-47a0-bbdd-99e51fb64b30"],
Cell[483574, 10989, 269759, 4475, 378, "Output",ExpressionUUID->"2327dece-59a4-4467-ace3-214bd0521ae8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[753370, 15469, 275, 5, 45, "Input",ExpressionUUID->"fe1e7e9b-501b-45bd-b50c-bc773142ee49"],
Cell[753648, 15476, 2810, 61, 51, "Output",ExpressionUUID->"431b0fe3-fab0-46df-a77d-24b09f34ebf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[756495, 15542, 1408, 29, 142, "Input",ExpressionUUID->"6b212fd5-a182-4984-a561-59da153c49e8"],
Cell[757906, 15573, 36413, 609, 380, "Output",ExpressionUUID->"761f2fab-837e-4c13-8da1-71eed22750c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[794356, 16187, 2163, 54, 142, "Input",ExpressionUUID->"d1b3e901-627d-42c3-bf3e-0277453e97c2"],
Cell[796522, 16243, 13320, 232, 360, "Output",ExpressionUUID->"248db0d5-72a7-4013-a5c8-49b3e4c7db6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[809879, 16480, 2082, 54, 142, "Input",ExpressionUUID->"0ce503a5-6ad7-4365-9902-e32247231697"],
Cell[811964, 16536, 35792, 776, 464, "Output",ExpressionUUID->"1f7476ad-6f73-44ec-aa4c-47dae95b66a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[847793, 17317, 6057, 125, 430, "Input",ExpressionUUID->"6025d1cc-a3b1-4ea2-83ab-e731e3eaf5ba"],
Cell[853853, 17444, 1706, 24, 51, "Output",ExpressionUUID->"ff3e64cb-3f21-40ea-8c29-7096f82e31c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[855596, 17473, 219, 3, 45, "Input",ExpressionUUID->"c2513603-9f25-4054-b59a-bb0fff29df9d"],
Cell[855818, 17478, 5998, 149, 350, "Output",ExpressionUUID->"6ab3783e-5364-49fe-8869-12c911fb0e43"]
}, Open  ]],
Cell[861831, 17630, 5724, 131, 572, "Input",ExpressionUUID->"1107fbe8-c5c3-49dd-8846-ac118c5a5f47"],
Cell[867558, 17763, 676, 16, 45, "Input",ExpressionUUID->"96b84dac-47ac-435e-a7a1-8ef3c031fd6f"],
Cell[CellGroupData[{
Cell[868259, 17783, 839, 19, 110, "Input",ExpressionUUID->"ff91af97-8d0c-4b60-997e-f4d075f9dde7"],
Cell[869101, 17804, 595, 8, 51, "Output",ExpressionUUID->"5f4d3514-5f63-48de-b6dd-665dd34be414"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869733, 17817, 1032, 26, 142, "Input",ExpressionUUID->"35f92865-5a53-463e-abac-82b87b59b07c"],
Cell[870768, 17845, 66740, 1595, 355, "Output",ExpressionUUID->"9723424e-26b6-4f42-b638-9b9ca0581561"]
}, Open  ]],
Cell[CellGroupData[{
Cell[937545, 19445, 729, 20, 78, "Input",ExpressionUUID->"77790feb-d949-459f-b80e-cd1f64bf295a"],
Cell[938277, 19467, 1839, 38, 431, "Output",ExpressionUUID->"2bfe0895-5cd4-43fb-8d8d-b43177da1ee9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[940153, 19510, 925, 13, 45, "Input",ExpressionUUID->"0a277508-8112-4d9b-a01d-6ab11e80e752"],
Cell[941081, 19525, 1106, 16, 51, "Output",ExpressionUUID->"31e1e80a-6c67-4489-bd61-f0ff8d35ad70"]
}, Open  ]]
}
]
*)

